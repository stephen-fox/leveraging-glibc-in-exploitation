
/tmp/big-roi:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 32                	add    BYTE PTR [rdx],dh
 369:	76 89                	jbe    2f4 <_init-0xd0c>
 36b:	3a 2c c9             	cmp    ch,BYTE PTR [rcx+rcx*8]
 36e:	02 97 f4 33 08 23    	add    dl,BYTE PTR [rdi+0x230833f4]
 374:	81 17 18 69 a6 b4    	adc    DWORD PTR [rdi],0xb4a66918
 37a:	05                   	.byte 0x5
 37b:	1e                   	(bad)  

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	03 00                	add    eax,DWORD PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	22 00                	and    al,BYTE PTR [rax]
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	01 00                	add    DWORD PTR [rax],eax
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 80 01 81 00 00    	add    BYTE PTR [rax+0x8101],al
 3b5:	80 00 02             	add    BYTE PTR [rax],0x2
 3b8:	22 00                	and    al,BYTE PTR [rax]
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	23 00                	and    eax,DWORD PTR [rax]
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	24 00                	and    al,0x0
 3c2:	00 00                	add    BYTE PTR [rax],al
 3c4:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 3c7:	6d                   	ins    DWORD PTR es:[rdi],dx
 3c8:	39 f2                	cmp    edx,esi
 3ca:	8b 1c ef             	mov    ebx,DWORD PTR [rdi+rbp*8]
 3cd:	21 63 0f             	and    DWORD PTR [rbx+0xf],esp

Disassembly of section .dynsym:

00000000000003d0 <.dynsym>:
	...
 3e8:	e8 00 00 00 12       	call   120003ed <_end+0x11ffc3bd>
	...
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 0f                	add    BYTE PTR [rdi],cl
 401:	00 00                	add    BYTE PTR [rax],al
 403:	00 20                	add    BYTE PTR [rax],ah
	...
 415:	00 00                	add    BYTE PTR [rax],al
 417:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 42d:	00 00                	add    BYTE PTR [rax],al
 42f:	00 dd                	add    ch,bl
 431:	00 00                	add    BYTE PTR [rax],al
 433:	00 12                	add    BYTE PTR [rdx],dl
	...
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 86 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],al
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 d6                	add    dh,dl
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 12                	add    BYTE PTR [rdx],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 ad 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],ch
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 95 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 70 00             	add    BYTE PTR [rax+0x0],dh
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	0a 01                	or     al,BYTE PTR [rcx]
 4c2:	00 00                	add    BYTE PTR [rax],al
 4c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	d7                   	xlat   BYTE PTR ds:[rbx]
 4d9:	00 00                	add    BYTE PTR [rax],al
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 b9 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bh
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 1200050e <_end+0x11ffc4de>
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 cc                	add    ah,cl
 521:	00 00                	add    BYTE PTR [rax],al
 523:	00 12                	add    BYTE PTR [rdx],dl
	...
 535:	00 00                	add    BYTE PTR [rax],al
 537:	00 2e                	add    BYTE PTR [rsi],ch
 539:	01 00                	add    DWORD PTR [rax],eax
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 09                	add    BYTE PTR [rcx],cl
 551:	01 00                	add    DWORD PTR [rax],eax
 553:	00 12                	add    BYTE PTR [rdx],dl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 2b                	add    BYTE PTR [rbx],ch
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 20                	add    BYTE PTR [rax],ah
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 f6                	add    dh,dh
 581:	00 00                	add    BYTE PTR [rax],al
 583:	00 12                	add    BYTE PTR [rdx],dl
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 47 01             	add    BYTE PTR [rdi+0x1],al
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 5b1:	00 00                	add    BYTE PTR [rax],al
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	11 01                	adc    DWORD PTR [rcx],eax
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	b4 00                	mov    ah,0x0
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	13 01                	adc    eax,DWORD PTR [rcx]
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	76 00                	jbe    62a <_init-0x9d6>
 62a:	00 00                	add    BYTE PTR [rax],al
 62c:	12 00                	adc    al,BYTE PTR [rax]
	...
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	18 01                	sbb    BYTE PTR [rcx],al
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	04 01                	add    al,0x1
 65a:	00 00                	add    BYTE PTR [rax],al
 65c:	12 00                	adc    al,BYTE PTR [rax]
	...
 66e:	00 00                	add    BYTE PTR [rax],al
 670:	be 00 00 00 12       	mov    esi,0x12000000
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	12 00                	adc    al,BYTE PTR [rax]
	...
 69e:	00 00                	add    BYTE PTR [rax],al
 6a0:	fd                   	std    
 6a1:	00 00                	add    BYTE PTR [rax],al
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 3a                	add    BYTE PTR [rdx],bh
 6b9:	00 00                	add    BYTE PTR [rax],al
 6bb:	00 20                	add    BYTE PTR [rax],ah
	...
 6cd:	00 00                	add    BYTE PTR [rax],al
 6cf:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
 6d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 1f                	add    BYTE PTR [rdi],bl
 701:	01 00                	add    DWORD PTR [rax],eax
 703:	00 22                	add    BYTE PTR [rdx],ah
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 ef                	add    bh,ch
 719:	00 00                	add    BYTE PTR [rax],al
 71b:	00 11                	add    BYTE PTR [rcx],dl
 71d:	00 1a                	add    BYTE PTR [rdx],bl
 71f:	00 20                	add    BYTE PTR [rax],ah
 721:	40 00 00             	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	08 00                	or     BYTE PTR [rax],al
 72a:	00 00                	add    BYTE PTR [rax],al
 72c:	00 00                	add    BYTE PTR [rax],al
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	77 00                	ja     732 <_init-0x8ce>
 732:	00 00                	add    BYTE PTR [rax],al
 734:	12 00                	adc    al,BYTE PTR [rax]
 736:	10 00                	adc    BYTE PTR [rax],al
 738:	6b 17 00             	imul   edx,DWORD PTR [rdi],0x0
 73b:	00 00                	add    BYTE PTR [rax],al
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	00 26                	add    BYTE PTR [rsi],ah
 741:	00 00                	add    BYTE PTR [rax],al
 743:	00 00                	add    BYTE PTR [rax],al
 745:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000748 <.dynstr>:
 748:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 74c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
 74f:	70 74                	jo     7c5 <_init-0x83b>
 751:	2e 73 6f             	cs jae 7c3 <_init-0x83d>
 754:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
 757:	5f                   	pop    rdi
 758:	49 54                	rex.WB push r12
 75a:	4d 5f                	rex.WRB pop r15
 75c:	64 65 72 65          	fs gs jb 7c5 <_init-0x83b>
 760:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 767:	4d 
 768:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 76a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 76b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 76c:	65 54                	gs push rsp
 76e:	61                   	(bad)  
 76f:	62                   	(bad)  
 770:	6c                   	ins    BYTE PTR es:[rdi],dx
 771:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 775:	67 6d                	ins    DWORD PTR es:[edi],dx
 777:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 778:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 779:	5f                   	pop    rdi
 77a:	73 74                	jae    7f0 <_init-0x810>
 77c:	61                   	(bad)  
 77d:	72 74                	jb     7f3 <_init-0x80d>
 77f:	5f                   	pop    rdi
 780:	5f                   	pop    rdi
 781:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 784:	54                   	push   rsp
 785:	4d 5f                	rex.WRB pop r15
 787:	72 65                	jb     7ee <_init-0x812>
 789:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 790:	4d 
 791:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 793:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 794:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 795:	65 54                	gs push rsp
 797:	61                   	(bad)  
 798:	62                   	(bad)  
 799:	6c                   	ins    BYTE PTR es:[rdi],dx
 79a:	65 00 63 72          	add    BYTE PTR gs:[rbx+0x72],ah
 79e:	79 70                	jns    810 <_init-0x7f0>
 7a0:	74 00                	je     7a2 <_init-0x85e>
 7a2:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a3:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 7aa:	36 00 73 6f          	add    BYTE PTR ss:[rbx+0x6f],dh
 7ae:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 7b1:	74 00                	je     7b3 <_init-0x84d>
 7b3:	65 78 69             	gs js  81f <_init-0x7e1>
 7b6:	74 00                	je     7b8 <_init-0x848>
 7b8:	68 74 6f 6e 73       	push   0x736e6f74
 7bd:	00 70 65             	add    BYTE PTR [rax+0x65],dh
 7c0:	72 72                	jb     834 <_init-0x7cc>
 7c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7c3:	72 00                	jb     7c5 <_init-0x83b>
 7c5:	73 65                	jae    82c <_init-0x7d4>
 7c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7c8:	64 66 69 6c 65 00 69 	imul   bp,WORD PTR fs:[rbp+riz*2+0x0],0x6e69
 7cf:	6e 
 7d0:	65 74 5f             	gs je  832 <_init-0x7ce>
 7d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7d4:	74 6f                	je     845 <_init-0x7bb>
 7d6:	61                   	(bad)  
 7d7:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 7da:	74 73                	je     84f <_init-0x7b1>
 7dc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 7df:	73 74                	jae    855 <_init-0x7ab>
 7e1:	61                   	(bad)  
 7e2:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 7e5:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7e8:	5f                   	pop    rdi
 7e9:	66 61                	data16 (bad) 
 7eb:	69 6c 00 6c 69 73 74 	imul   ebp,DWORD PTR [rax+rax*1+0x6c],0x65747369
 7f2:	65 
 7f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7f4:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7f7:	72 6c                	jb     865 <_init-0x79b>
 7f9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 7fb:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 7fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7ff:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
 803:	61                   	(bad)  
 804:	64 00 67 65          	add    BYTE PTR fs:[rdi+0x65],ah
 808:	74 68                	je     872 <_init-0x78e>
 80a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 80b:	73 74                	jae    881 <_init-0x77f>
 80d:	62                   	(bad)  
 80e:	79 61                	jns    871 <_init-0x78f>
 810:	64 64 72 00          	fs fs jb 814 <_init-0x7ec>
 814:	69 6e 65 74 5f 61 64 	imul   ebp,DWORD PTR [rsi+0x65],0x64615f74
 81b:	64 72 00             	fs jb  81e <_init-0x7e2>
 81e:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 823:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
 827:	74 73                	je     89c <_init-0x764>
 829:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 82a:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 82d:	70 74                	jo     8a3 <_init-0x75d>
 82f:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 832:	74 65                	je     899 <_init-0x767>
 834:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 835:	76 00                	jbe    837 <_init-0x7c9>
 837:	73 74                	jae    8ad <_init-0x753>
 839:	64 65 72 72          	fs gs jb 8af <_init-0x751>
 83d:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
 840:	6c                   	ins    BYTE PTR es:[rdi],dx
 841:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 843:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 844:	00 66 77             	add    BYTE PTR [rsi+0x77],ah
 847:	72 69                	jb     8b2 <_init-0x74e>
 849:	74 65                	je     8b0 <_init-0x750>
 84b:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 84e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 84f:	69 00 66 70 72 69    	imul   eax,DWORD PTR [rax],0x69727066
 855:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 856:	74 66                	je     8be <_init-0x742>
 858:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
 85b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 85c:	70 65                	jo     8c3 <_init-0x73d>
 85e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 85f:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
 862:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 865:	74 00                	je     867 <_init-0x799>
 867:	5f                   	pop    rdi
 868:	5f                   	pop    rdi
 869:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 86c:	5f                   	pop    rdi
 86d:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 873:	7a 65                	jp     8da <_init-0x726>
 875:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 878:	72 63                	jb     8dd <_init-0x723>
 87a:	6d                   	ins    DWORD PTR es:[rdi],dx
 87b:	70 00                	jo     87d <_init-0x783>
 87d:	5f                   	pop    rdi
 87e:	5f                   	pop    rdi
 87f:	6c                   	ins    BYTE PTR es:[rdi],dx
 880:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 887:	72 74                	jb     8fd <_init-0x703>
 889:	5f                   	pop    rdi
 88a:	6d                   	ins    DWORD PTR es:[rdi],dx
 88b:	61                   	(bad)  
 88c:	69 6e 00 5f 5f 66 78 	imul   ebp,DWORD PTR [rsi+0x0],0x78665f5f
 893:	73 74                	jae    909 <_init-0x6f7>
 895:	61                   	(bad)  
 896:	74 00                	je     898 <_init-0x768>
 898:	58                   	pop    rax
 899:	43 52                	rex.XB push r10
 89b:	59                   	pop    rcx
 89c:	50                   	push   rax
 89d:	54                   	push   rsp
 89e:	5f                   	pop    rdi
 89f:	32 2e                	xor    ch,BYTE PTR [rsi]
 8a1:	30 00                	xor    BYTE PTR [rax],al
 8a3:	47                   	rex.RXB
 8a4:	4c                   	rex.WR
 8a5:	49                   	rex.WB
 8a6:	42                   	rex.X
 8a7:	43 5f                	rex.XB pop r15
 8a9:	32 2e                	xor    ch,BYTE PTR [rsi]
 8ab:	34 00                	xor    al,0x0
 8ad:	47                   	rex.RXB
 8ae:	4c                   	rex.WR
 8af:	49                   	rex.WB
 8b0:	42                   	rex.X
 8b1:	43 5f                	rex.XB pop r15
 8b3:	32 2e                	xor    ch,BYTE PTR [rsi]
 8b5:	32 2e                	xor    ch,BYTE PTR [rsi]
 8b7:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000008ba <.gnu.version>:
 8ba:	00 00                	add    BYTE PTR [rax],al
 8bc:	02 00                	add    al,BYTE PTR [rax]
 8be:	00 00                	add    BYTE PTR [rax],al
 8c0:	02 00                	add    al,BYTE PTR [rax]
 8c2:	02 00                	add    al,BYTE PTR [rax]
 8c4:	02 00                	add    al,BYTE PTR [rax]
 8c6:	02 00                	add    al,BYTE PTR [rax]
 8c8:	02 00                	add    al,BYTE PTR [rax]
 8ca:	03 00                	add    eax,DWORD PTR [rax]
 8cc:	02 00                	add    al,BYTE PTR [rax]
 8ce:	02 00                	add    al,BYTE PTR [rax]
 8d0:	02 00                	add    al,BYTE PTR [rax]
 8d2:	02 00                	add    al,BYTE PTR [rax]
 8d4:	02 00                	add    al,BYTE PTR [rax]
 8d6:	02 00                	add    al,BYTE PTR [rax]
 8d8:	02 00                	add    al,BYTE PTR [rax]
 8da:	02 00                	add    al,BYTE PTR [rax]
 8dc:	00 00                	add    BYTE PTR [rax],al
 8de:	02 00                	add    al,BYTE PTR [rax]
 8e0:	02 00                	add    al,BYTE PTR [rax]
 8e2:	02 00                	add    al,BYTE PTR [rax]
 8e4:	02 00                	add    al,BYTE PTR [rax]
 8e6:	02 00                	add    al,BYTE PTR [rax]
 8e8:	02 00                	add    al,BYTE PTR [rax]
 8ea:	02 00                	add    al,BYTE PTR [rax]
 8ec:	02 00                	add    al,BYTE PTR [rax]
 8ee:	02 00                	add    al,BYTE PTR [rax]
 8f0:	02 00                	add    al,BYTE PTR [rax]
 8f2:	02 00                	add    al,BYTE PTR [rax]
 8f4:	02 00                	add    al,BYTE PTR [rax]
 8f6:	02 00                	add    al,BYTE PTR [rax]
 8f8:	00 00                	add    BYTE PTR [rax],al
 8fa:	04 00                	add    al,0x0
 8fc:	02 00                	add    al,BYTE PTR [rax]
 8fe:	02 00                	add    al,BYTE PTR [rax]
 900:	02 00                	add    al,BYTE PTR [rax]
 902:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000908 <.gnu.version_r>:
 908:	01 00                	add    DWORD PTR [rax],eax
 90a:	01 00                	add    DWORD PTR [rax],eax
 90c:	01 00                	add    DWORD PTR [rax],eax
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	10 00                	adc    BYTE PTR [rax],al
 912:	00 00                	add    BYTE PTR [rax],al
 914:	20 00                	and    BYTE PTR [rax],al
 916:	00 00                	add    BYTE PTR [rax],al
 918:	60                   	(bad)  
 919:	ed                   	in     eax,dx
 91a:	5d                   	pop    rbp
 91b:	0e                   	(bad)  
 91c:	00 00                	add    BYTE PTR [rax],al
 91e:	04 00                	add    al,0x0
 920:	50                   	push   rax
 921:	01 00                	add    DWORD PTR [rax],eax
 923:	00 00                	add    BYTE PTR [rax],al
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 01                	add    BYTE PTR [rcx],al
 929:	00 02                	add    BYTE PTR [rdx],al
 92b:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	10 00                	adc    BYTE PTR [rax],al
 932:	00 00                	add    BYTE PTR [rax],al
 934:	00 00                	add    BYTE PTR [rax],al
 936:	00 00                	add    BYTE PTR [rax],al
 938:	14 69                	adc    al,0x69
 93a:	69 0d 00 00 03 00 5b 	imul   ecx,DWORD PTR [rip+0x30000],0x15b        # 30944 <_end+0x2c914>
 941:	01 00 00 
 944:	10 00                	adc    BYTE PTR [rax],al
 946:	00 00                	add    BYTE PTR [rax],al
 948:	75 1a                	jne    964 <_init-0x69c>
 94a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 950:	65 01 00             	add    DWORD PTR gs:[rax],eax
 953:	00 00                	add    BYTE PTR [rax],al
 955:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000958 <.rela.dyn>:
 958:	c8 3c 00 00          	enter  0x3c,0x0
 95c:	00 00                	add    BYTE PTR [rax],al
 95e:	00 00                	add    BYTE PTR [rax],al
 960:	08 00                	or     BYTE PTR [rax],al
 962:	00 00                	add    BYTE PTR [rax],al
 964:	00 00                	add    BYTE PTR [rax],al
 966:	00 00                	add    BYTE PTR [rax],al
 968:	c0 14 00 00          	rcl    BYTE PTR [rax+rax*1],0x0
 96c:	00 00                	add    BYTE PTR [rax],al
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	d0 3c 00             	sar    BYTE PTR [rax+rax*1],1
 973:	00 00                	add    BYTE PTR [rax],al
 975:	00 00                	add    BYTE PTR [rax],al
 977:	00 08                	add    BYTE PTR [rax],cl
 979:	00 00                	add    BYTE PTR [rax],al
 97b:	00 00                	add    BYTE PTR [rax],al
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 80 14 00 00 00    	add    BYTE PTR [rax+0x14],al
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 08                	add    BYTE PTR [rax],cl
 989:	40 00 00             	add    BYTE PTR [rax],al
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	08 00                	or     BYTE PTR [rax],al
 992:	00 00                	add    BYTE PTR [rax],al
 994:	00 00                	add    BYTE PTR [rax],al
 996:	00 00                	add    BYTE PTR [rax],al
 998:	08 40 00             	or     BYTE PTR [rax+0x0],al
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 d8                	add    al,bl
 9a1:	3f                   	(bad)  
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	06                   	(bad)  
 9a9:	00 00                	add    BYTE PTR [rax],al
 9ab:	00 02                	add    BYTE PTR [rdx],al
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 e0                	add    al,ah
 9b9:	3f                   	(bad)  
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	00 00                	add    BYTE PTR [rax],al
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	06                   	(bad)  
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 9c9 <_init-0x637>
 9c9:	00 00                	add    BYTE PTR [rax],al
 9cb:	00 00                	add    BYTE PTR [rax],al
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 e8                	add    al,ch
 9d1:	3f                   	(bad)  
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	00 00                	add    BYTE PTR [rax],al
 9d6:	00 00                	add    BYTE PTR [rax],al
 9d8:	06                   	(bad)  
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 11                	add    BYTE PTR [rcx],dl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 f0                	add    al,dh
 9e9:	3f                   	(bad)  
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	00 00                	add    BYTE PTR [rax],al
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	06                   	(bad)  
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 1f                	add    BYTE PTR [rdi],bl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 f8                	add    al,bh
 a01:	3f                   	(bad)  
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	06                   	(bad)  
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 22                	add    BYTE PTR [rdx],ah
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 20                	add    BYTE PTR [rax],ah
 a19:	40 00 00             	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	05 00 00 00 23       	add    eax,0x23000000
	...

Disassembly of section .rela.plt:

0000000000000a30 <.rela.plt>:
 a30:	f0 3e 00 00          	lock add BYTE PTR ds:[rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	07                   	(bad)  
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 01                	add    BYTE PTR [rcx],al
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 f8                	add    al,bh
 a49:	3e 00 00             	add    BYTE PTR ds:[rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	07                   	(bad)  
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 03                	add    BYTE PTR [rbx],al
	...
 a61:	3f                   	(bad)  
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	00 00                	add    BYTE PTR [rax],al
 a66:	00 00                	add    BYTE PTR [rax],al
 a68:	07                   	(bad)  
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	08 3f                	or     BYTE PTR [rdi],bh
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	00 00                	add    BYTE PTR [rax],al
 a80:	07                   	(bad)  
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # a89 <_init-0x577>
 a89:	00 00                	add    BYTE PTR [rax],al
 a8b:	00 00                	add    BYTE PTR [rax],al
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 10                	add    BYTE PTR [rax],dl
 a91:	3f                   	(bad)  
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	07                   	(bad)  
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 06                	add    BYTE PTR [rsi],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 18                	add    BYTE PTR [rax],bl
 aa9:	3f                   	(bad)  
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	00 00                	add    BYTE PTR [rax],al
 aae:	00 00                	add    BYTE PTR [rax],al
 ab0:	07                   	(bad)  
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 07                	add    BYTE PTR [rdi],al
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 20                	add    BYTE PTR [rax],ah
 ac1:	3f                   	(bad)  
 ac2:	00 00                	add    BYTE PTR [rax],al
 ac4:	00 00                	add    BYTE PTR [rax],al
 ac6:	00 00                	add    BYTE PTR [rax],al
 ac8:	07                   	(bad)  
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 08                	add    BYTE PTR [rax],cl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 28                	add    BYTE PTR [rax],ch
 ad9:	3f                   	(bad)  
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	07                   	(bad)  
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 09                	add    BYTE PTR [rcx],cl
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 30                	add    BYTE PTR [rax],dh
 af1:	3f                   	(bad)  
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)  
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 38                	add    BYTE PTR [rax],bh
 b09:	3f                   	(bad)  
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	07                   	(bad)  
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 40 3f             	add    BYTE PTR [rax+0x3f],al
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)  
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	48 3f                	rex.W (bad) 
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)  
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 50 3f             	add    BYTE PTR [rax+0x3f],dl
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	07                   	(bad)  
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 0f                	add    BYTE PTR [rdi],cl
	...
 b65:	00 00                	add    BYTE PTR [rax],al
 b67:	00 58 3f             	add    BYTE PTR [rax+0x3f],bl
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	00 00                	add    BYTE PTR [rax],al
 b6e:	00 00                	add    BYTE PTR [rax],al
 b70:	07                   	(bad)  
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 10                	add    BYTE PTR [rax],dl
	...
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 60 3f             	add    BYTE PTR [rax+0x3f],ah
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	07                   	(bad)  
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 68 3f             	add    BYTE PTR [rax+0x3f],ch
 b9a:	00 00                	add    BYTE PTR [rax],al
 b9c:	00 00                	add    BYTE PTR [rax],al
 b9e:	00 00                	add    BYTE PTR [rax],al
 ba0:	07                   	(bad)  
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 13                	add    BYTE PTR [rbx],dl
	...
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 70 3f             	add    BYTE PTR [rax+0x3f],dh
 bb2:	00 00                	add    BYTE PTR [rax],al
 bb4:	00 00                	add    BYTE PTR [rax],al
 bb6:	00 00                	add    BYTE PTR [rax],al
 bb8:	07                   	(bad)  
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 bc6:	00 00                	add    BYTE PTR [rax],al
 bc8:	78 3f                	js     c09 <_init-0x3f7>
 bca:	00 00                	add    BYTE PTR [rax],al
 bcc:	00 00                	add    BYTE PTR [rax],al
 bce:	00 00                	add    BYTE PTR [rax],al
 bd0:	07                   	(bad)  
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # bd9 <_init-0x427>
 bd9:	00 00                	add    BYTE PTR [rax],al
 bdb:	00 00                	add    BYTE PTR [rax],al
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 80 3f 00 00 00    	add    BYTE PTR [rax+0x3f],al
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 07                	add    BYTE PTR [rdi],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 16                	add    BYTE PTR [rsi],dl
	...
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 88 3f 00 00 00    	add    BYTE PTR [rax+0x3f],cl
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 07                	add    BYTE PTR [rdi],al
 c01:	00 00                	add    BYTE PTR [rax],al
 c03:	00 17                	add    BYTE PTR [rdi],dl
	...
 c0d:	00 00                	add    BYTE PTR [rax],al
 c0f:	00 90 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dl
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 07                	add    BYTE PTR [rdi],al
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 18                	add    BYTE PTR [rax],bl
	...
 c25:	00 00                	add    BYTE PTR [rax],al
 c27:	00 98 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bl
 c2d:	00 00                	add    BYTE PTR [rax],al
 c2f:	00 07                	add    BYTE PTR [rdi],al
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 19                	add    BYTE PTR [rcx],bl
	...
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 a0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],ah
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 07                	add    BYTE PTR [rdi],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 1a                	add    BYTE PTR [rdx],bl
	...
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 a8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],ch
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 07                	add    BYTE PTR [rdi],al
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 1b                	add    BYTE PTR [rbx],bl
	...
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 b0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dh
 c75:	00 00                	add    BYTE PTR [rax],al
 c77:	00 07                	add    BYTE PTR [rdi],al
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c86:	00 00                	add    BYTE PTR [rax],al
 c88:	b8 3f 00 00 00       	mov    eax,0x3f
 c8d:	00 00                	add    BYTE PTR [rax],al
 c8f:	00 07                	add    BYTE PTR [rdi],al
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # c99 <_init-0x367>
 c99:	00 00                	add    BYTE PTR [rax],al
 c9b:	00 00                	add    BYTE PTR [rax],al
 c9d:	00 00                	add    BYTE PTR [rax],al
 c9f:	00 c0                	add    al,al
 ca1:	3f                   	(bad)  
 ca2:	00 00                	add    BYTE PTR [rax],al
 ca4:	00 00                	add    BYTE PTR [rax],al
 ca6:	00 00                	add    BYTE PTR [rax],al
 ca8:	07                   	(bad)  
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 1e                	add    BYTE PTR [rsi],bl
	...
 cb5:	00 00                	add    BYTE PTR [rax],al
 cb7:	00 c8                	add    al,cl
 cb9:	3f                   	(bad)  
 cba:	00 00                	add    BYTE PTR [rax],al
 cbc:	00 00                	add    BYTE PTR [rax],al
 cbe:	00 00                	add    BYTE PTR [rax],al
 cc0:	07                   	(bad)  
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	00 20                	add    BYTE PTR [rax],ah
	...
 ccd:	00 00                	add    BYTE PTR [rax],al
 ccf:	00 d0                	add    al,dl
 cd1:	3f                   	(bad)  
 cd2:	00 00                	add    BYTE PTR [rax],al
 cd4:	00 00                	add    BYTE PTR [rax],al
 cd6:	00 00                	add    BYTE PTR [rax],al
 cd8:	07                   	(bad)  
 cd9:	00 00                	add    BYTE PTR [rax],al
 cdb:	00 21                	add    BYTE PTR [rcx],ah
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 ba 2e 00 00    	push   QWORD PTR [rip+0x2eba]        # 3ee0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 bb 2e 00 00 	bnd jmp QWORD PTR [rip+0x2ebb]        # 3ee8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	push   0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmp 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	push   0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmp 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	push   0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmp 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	push   0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmp 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	push   0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmp 1020 <.plt>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	push   0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmp 1020 <.plt>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	push   0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmp 1020 <.plt>
    118f:	90                   	nop
    1190:	f3 0f 1e fa          	endbr64 
    1194:	68 16 00 00 00       	push   0x16
    1199:	f2 e9 81 fe ff ff    	bnd jmp 1020 <.plt>
    119f:	90                   	nop
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	68 17 00 00 00       	push   0x17
    11a9:	f2 e9 71 fe ff ff    	bnd jmp 1020 <.plt>
    11af:	90                   	nop
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	68 18 00 00 00       	push   0x18
    11b9:	f2 e9 61 fe ff ff    	bnd jmp 1020 <.plt>
    11bf:	90                   	nop
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	68 19 00 00 00       	push   0x19
    11c9:	f2 e9 51 fe ff ff    	bnd jmp 1020 <.plt>
    11cf:	90                   	nop
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	68 1a 00 00 00       	push   0x1a
    11d9:	f2 e9 41 fe ff ff    	bnd jmp 1020 <.plt>
    11df:	90                   	nop
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	68 1b 00 00 00       	push   0x1b
    11e9:	f2 e9 31 fe ff ff    	bnd jmp 1020 <.plt>
    11ef:	90                   	nop
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	68 1c 00 00 00       	push   0x1c
    11f9:	f2 e9 21 fe ff ff    	bnd jmp 1020 <.plt>
    11ff:	90                   	nop

Disassembly of section .plt.got:

0000000000001200 <__cxa_finalize@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 ed 2d 00 00 	bnd jmp QWORD PTR [rip+0x2ded]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001210 <getenv@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 d5 2c 00 00 	bnd jmp QWORD PTR [rip+0x2cd5]        # 3ef0 <getenv@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001220 <puts@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 cd 2c 00 00 	bnd jmp QWORD PTR [rip+0x2ccd]        # 3ef8 <puts@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001230 <setsockopt@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 c5 2c 00 00 	bnd jmp QWORD PTR [rip+0x2cc5]        # 3f00 <setsockopt@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001240 <inet_ntoa@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 bd 2c 00 00 	bnd jmp QWORD PTR [rip+0x2cbd]        # 3f08 <inet_ntoa@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001250 <fclose@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 b5 2c 00 00 	bnd jmp QWORD PTR [rip+0x2cb5]        # 3f10 <fclose@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001260 <strlen@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 ad 2c 00 00 	bnd jmp QWORD PTR [rip+0x2cad]        # 3f18 <strlen@GLIBC_2.2.5>
    126b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001270 <__stack_chk_fail@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 a5 2c 00 00 	bnd jmp QWORD PTR [rip+0x2ca5]        # 3f20 <__stack_chk_fail@GLIBC_2.4>
    127b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001280 <htons@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 9d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c9d]        # 3f28 <htons@GLIBC_2.2.5>
    128b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001290 <printf@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 95 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c95]        # 3f30 <printf@GLIBC_2.2.5>
    129b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012a0 <close@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 8d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c8d]        # 3f38 <close@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012b0 <read@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 85 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c85]        # 3f40 <read@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012c0 <inet_addr@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 7d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c7d]        # 3f48 <inet_addr@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012d0 <strcmp@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 75 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c75]        # 3f50 <strcmp@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012e0 <fprintf@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 6d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c6d]        # 3f58 <fprintf@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012f0 <fileno@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 65 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c65]        # 3f60 <fileno@GLIBC_2.2.5>
    12fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001300 <__fxstat@plt>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	f2 ff 25 5d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c5d]        # 3f68 <__fxstat@GLIBC_2.2.5>
    130b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001310 <listen@plt>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	f2 ff 25 55 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c55]        # 3f70 <listen@GLIBC_2.2.5>
    131b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001320 <sendfile@plt>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	f2 ff 25 4d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c4d]        # 3f78 <sendfile@GLIBC_2.2.5>
    132b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001330 <fdopen@plt>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	f2 ff 25 45 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c45]        # 3f80 <fdopen@GLIBC_2.2.5>
    133b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001340 <bind@plt>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	f2 ff 25 3d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c3d]        # 3f88 <bind@GLIBC_2.2.5>
    134b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001350 <open@plt>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	f2 ff 25 35 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c35]        # 3f90 <open@GLIBC_2.2.5>
    135b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001360 <perror@plt>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	f2 ff 25 2d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c2d]        # 3f98 <perror@GLIBC_2.2.5>
    136b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001370 <accept@plt>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	f2 ff 25 25 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c25]        # 3fa0 <accept@GLIBC_2.2.5>
    137b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001380 <atoi@plt>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	f2 ff 25 1d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c1d]        # 3fa8 <atoi@GLIBC_2.2.5>
    138b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001390 <gethostbyaddr@plt>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	f2 ff 25 15 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c15]        # 3fb0 <gethostbyaddr@GLIBC_2.2.5>
    139b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013a0 <exit@plt>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	f2 ff 25 0d 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c0d]        # 3fb8 <exit@GLIBC_2.2.5>
    13ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013b0 <fwrite@plt>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	f2 ff 25 05 2c 00 00 	bnd jmp QWORD PTR [rip+0x2c05]        # 3fc0 <fwrite@GLIBC_2.2.5>
    13bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013c0 <crypt@plt>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	f2 ff 25 fd 2b 00 00 	bnd jmp QWORD PTR [rip+0x2bfd]        # 3fc8 <crypt@XCRYPT_2.0>
    13cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013d0 <socket@plt>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	f2 ff 25 f5 2b 00 00 	bnd jmp QWORD PTR [rip+0x2bf5]        # 3fd0 <socket@GLIBC_2.2.5>
    13db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000013e0 <_start>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	31 ed                	xor    ebp,ebp
    13e6:	49 89 d1             	mov    r9,rdx
    13e9:	5e                   	pop    rsi
    13ea:	48 89 e2             	mov    rdx,rsp
    13ed:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    13f1:	50                   	push   rax
    13f2:	54                   	push   rsp
    13f3:	4c 8d 05 46 06 00 00 	lea    r8,[rip+0x646]        # 1a40 <__libc_csu_fini>
    13fa:	48 8d 0d cf 05 00 00 	lea    rcx,[rip+0x5cf]        # 19d0 <__libc_csu_init>
    1401:	48 8d 3d 89 03 00 00 	lea    rdi,[rip+0x389]        # 1791 <main>
    1408:	ff 15 d2 2b 00 00    	call   QWORD PTR [rip+0x2bd2]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    140e:	f4                   	hlt    
    140f:	90                   	nop

0000000000001410 <deregister_tm_clones>:
    1410:	48 8d 3d f9 2b 00 00 	lea    rdi,[rip+0x2bf9]        # 4010 <__TMC_END__>
    1417:	48 8d 05 f2 2b 00 00 	lea    rax,[rip+0x2bf2]        # 4010 <__TMC_END__>
    141e:	48 39 f8             	cmp    rax,rdi
    1421:	74 15                	je     1438 <deregister_tm_clones+0x28>
    1423:	48 8b 05 ae 2b 00 00 	mov    rax,QWORD PTR [rip+0x2bae]        # 3fd8 <_ITM_deregisterTMCloneTable>
    142a:	48 85 c0             	test   rax,rax
    142d:	74 09                	je     1438 <deregister_tm_clones+0x28>
    142f:	ff e0                	jmp    rax
    1431:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1438:	c3                   	ret    
    1439:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001440 <register_tm_clones>:
    1440:	48 8d 3d c9 2b 00 00 	lea    rdi,[rip+0x2bc9]        # 4010 <__TMC_END__>
    1447:	48 8d 35 c2 2b 00 00 	lea    rsi,[rip+0x2bc2]        # 4010 <__TMC_END__>
    144e:	48 29 fe             	sub    rsi,rdi
    1451:	48 89 f0             	mov    rax,rsi
    1454:	48 c1 ee 3f          	shr    rsi,0x3f
    1458:	48 c1 f8 03          	sar    rax,0x3
    145c:	48 01 c6             	add    rsi,rax
    145f:	48 d1 fe             	sar    rsi,1
    1462:	74 14                	je     1478 <register_tm_clones+0x38>
    1464:	48 8b 05 85 2b 00 00 	mov    rax,QWORD PTR [rip+0x2b85]        # 3ff0 <_ITM_registerTMCloneTable>
    146b:	48 85 c0             	test   rax,rax
    146e:	74 08                	je     1478 <register_tm_clones+0x38>
    1470:	ff e0                	jmp    rax
    1472:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1478:	c3                   	ret    
    1479:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001480 <__do_global_dtors_aux>:
    1480:	f3 0f 1e fa          	endbr64 
    1484:	80 3d 9d 2b 00 00 00 	cmp    BYTE PTR [rip+0x2b9d],0x0        # 4028 <completed.8060>
    148b:	75 2b                	jne    14b8 <__do_global_dtors_aux+0x38>
    148d:	55                   	push   rbp
    148e:	48 83 3d 62 2b 00 00 	cmp    QWORD PTR [rip+0x2b62],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1495:	00 
    1496:	48 89 e5             	mov    rbp,rsp
    1499:	74 0c                	je     14a7 <__do_global_dtors_aux+0x27>
    149b:	48 8b 3d 66 2b 00 00 	mov    rdi,QWORD PTR [rip+0x2b66]        # 4008 <__dso_handle>
    14a2:	e8 59 fd ff ff       	call   1200 <__cxa_finalize@plt>
    14a7:	e8 64 ff ff ff       	call   1410 <deregister_tm_clones>
    14ac:	c6 05 75 2b 00 00 01 	mov    BYTE PTR [rip+0x2b75],0x1        # 4028 <completed.8060>
    14b3:	5d                   	pop    rbp
    14b4:	c3                   	ret    
    14b5:	0f 1f 00             	nop    DWORD PTR [rax]
    14b8:	c3                   	ret    
    14b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000014c0 <frame_dummy>:
    14c0:	f3 0f 1e fa          	endbr64 
    14c4:	e9 77 ff ff ff       	jmp    1440 <register_tm_clones>

00000000000014c9 <handleClient>:
    14c9:	f3 0f 1e fa          	endbr64 
    14cd:	55                   	push   rbp
    14ce:	48 89 e5             	mov    rbp,rsp
    14d1:	53                   	push   rbx
    14d2:	48 81 ec 28 01 00 00 	sub    rsp,0x128
    14d9:	89 bd dc fe ff ff    	mov    DWORD PTR [rbp-0x124],edi
    14df:	48 89 b5 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rsi
    14e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    14ed:	00 00 
    14ef:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    14f3:	31 c0                	xor    eax,eax
    14f5:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    14fb:	48 8d 35 06 0b 00 00 	lea    rsi,[rip+0xb06]        # 2008 <_IO_stdin_used+0x8>
    1502:	89 c7                	mov    edi,eax
    1504:	e8 27 fe ff ff       	call   1330 <fdopen@plt>
    1509:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    1510:	48 83 bd e8 fe ff ff 	cmp    QWORD PTR [rbp-0x118],0x0
    1517:	00 
    1518:	75 11                	jne    152b <handleClient+0x62>
    151a:	48 8d 3d eb 0a 00 00 	lea    rdi,[rip+0xaeb]        # 200c <_IO_stdin_used+0xc>
    1521:	e8 fa fc ff ff       	call   1220 <puts@plt>
    1526:	e9 c5 01 00 00       	jmp    16f0 <handleClient+0x227>
    152b:	48 8d 45 80          	lea    rax,[rbp-0x80]
    152f:	48 89 c2             	mov    rdx,rax
    1532:	b8 00 00 00 00       	mov    eax,0x0
    1537:	b9 0c 00 00 00       	mov    ecx,0xc
    153c:	48 89 d7             	mov    rdi,rdx
    153f:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    1542:	48 89 fa             	mov    rdx,rdi
    1545:	89 02                	mov    DWORD PTR [rdx],eax
    1547:	48 83 c2 04          	add    rdx,0x4
    154b:	66 89 02             	mov    WORD PTR [rdx],ax
    154e:	48 83 c2 02          	add    rdx,0x2
    1552:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    1559:	48 89 c7             	mov    rdi,rax
    155c:	e8 8f fd ff ff       	call   12f0 <fileno@plt>
    1561:	89 c1                	mov    ecx,eax
    1563:	48 8d 45 80          	lea    rax,[rbp-0x80]
    1567:	ba 00 04 00 00       	mov    edx,0x400
    156c:	48 89 c6             	mov    rsi,rax
    156f:	89 cf                	mov    edi,ecx
    1571:	e8 3a fd ff ff       	call   12b0 <read@plt>
    1576:	48 85 c0             	test   rax,rax
    1579:	79 11                	jns    158c <handleClient+0xc3>
    157b:	48 8d 3d a5 0a 00 00 	lea    rdi,[rip+0xaa5]        # 2027 <_IO_stdin_used+0x27>
    1582:	e8 99 fc ff ff       	call   1220 <puts@plt>
    1587:	e9 64 01 00 00       	jmp    16f0 <handleClient+0x227>
    158c:	48 8d 3d af 0a 00 00 	lea    rdi,[rip+0xaaf]        # 2042 <_IO_stdin_used+0x42>
    1593:	e8 78 fc ff ff       	call   1210 <getenv@plt>
    1598:	48 85 c0             	test   rax,rax
    159b:	0f 84 97 00 00 00    	je     1638 <handleClient+0x16f>
    15a1:	48 8d 3d 9a 0a 00 00 	lea    rdi,[rip+0xa9a]        # 2042 <_IO_stdin_used+0x42>
    15a8:	e8 63 fc ff ff       	call   1210 <getenv@plt>
    15ad:	48 89 c3             	mov    rbx,rax
    15b0:	48 8d 3d 8b 0a 00 00 	lea    rdi,[rip+0xa8b]        # 2042 <_IO_stdin_used+0x42>
    15b7:	e8 54 fc ff ff       	call   1210 <getenv@plt>
    15bc:	48 89 c2             	mov    rdx,rax
    15bf:	48 8d 45 80          	lea    rax,[rbp-0x80]
    15c3:	48 89 d6             	mov    rsi,rdx
    15c6:	48 89 c7             	mov    rdi,rax
    15c9:	e8 f2 fd ff ff       	call   13c0 <crypt@plt>
    15ce:	48 89 de             	mov    rsi,rbx
    15d1:	48 89 c7             	mov    rdi,rax
    15d4:	e8 f7 fc ff ff       	call   12d0 <strcmp@plt>
    15d9:	85 c0                	test   eax,eax
    15db:	74 4f                	je     162c <handleClient+0x163>
    15dd:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    15e4:	48 89 c1             	mov    rcx,rax
    15e7:	ba 14 00 00 00       	mov    edx,0x14
    15ec:	be 01 00 00 00       	mov    esi,0x1
    15f1:	48 8d 3d 5a 0a 00 00 	lea    rdi,[rip+0xa5a]        # 2052 <_IO_stdin_used+0x52>
    15f8:	e8 b3 fd ff ff       	call   13b0 <fwrite@plt>
    15fd:	48 8d 45 80          	lea    rax,[rbp-0x80]
    1601:	48 89 c7             	mov    rdi,rax
    1604:	e8 57 fc ff ff       	call   1260 <strlen@plt>
    1609:	48 89 c2             	mov    rdx,rax
    160c:	48 8d 4d 80          	lea    rcx,[rbp-0x80]
    1610:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    1617:	48 89 ce             	mov    rsi,rcx
    161a:	48 89 c7             	mov    rdi,rax
    161d:	b8 00 00 00 00       	mov    eax,0x0
    1622:	e8 b9 fc ff ff       	call   12e0 <fprintf@plt>
    1627:	e9 c4 00 00 00       	jmp    16f0 <handleClient+0x227>
    162c:	48 8d 3d 34 0a 00 00 	lea    rdi,[rip+0xa34]        # 2067 <_IO_stdin_used+0x67>
    1633:	e8 e8 fb ff ff       	call   1220 <puts@plt>
    1638:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    163f:	be 00 00 00 00       	mov    esi,0x0
    1644:	48 89 c7             	mov    rdi,rax
    1647:	b8 00 00 00 00       	mov    eax,0x0
    164c:	e8 ff fc ff ff       	call   1350 <open@plt>
    1651:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    1657:	83 bd e4 fe ff ff ff 	cmp    DWORD PTR [rbp-0x11c],0xffffffff
    165e:	75 1d                	jne    167d <handleClient+0x1b4>
    1660:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    1667:	48 89 c6             	mov    rsi,rax
    166a:	48 8d 3d 04 0a 00 00 	lea    rdi,[rip+0xa04]        # 2075 <_IO_stdin_used+0x75>
    1671:	b8 00 00 00 00       	mov    eax,0x0
    1676:	e8 15 fc ff ff       	call   1290 <printf@plt>
    167b:	eb 73                	jmp    16f0 <handleClient+0x227>
    167d:	48 8d 95 f0 fe ff ff 	lea    rdx,[rbp-0x110]
    1684:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
    168a:	48 89 d6             	mov    rsi,rdx
    168d:	89 c7                	mov    edi,eax
    168f:	e8 bc 03 00 00       	call   1a50 <__fstat>
    1694:	83 f8 ff             	cmp    eax,0xffffffff
    1697:	75 1d                	jne    16b6 <handleClient+0x1ed>
    1699:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    16a0:	48 89 c6             	mov    rsi,rax
    16a3:	48 8d 3d e6 09 00 00 	lea    rdi,[rip+0x9e6]        # 2090 <_IO_stdin_used+0x90>
    16aa:	b8 00 00 00 00       	mov    eax,0x0
    16af:	e8 dc fb ff ff       	call   1290 <printf@plt>
    16b4:	eb 3a                	jmp    16f0 <handleClient+0x227>
    16b6:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    16bd:	48 89 c2             	mov    rdx,rax
    16c0:	8b b5 e4 fe ff ff    	mov    esi,DWORD PTR [rbp-0x11c]
    16c6:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    16cc:	48 89 d1             	mov    rcx,rdx
    16cf:	ba 00 00 00 00       	mov    edx,0x0
    16d4:	89 c7                	mov    edi,eax
    16d6:	e8 45 fc ff ff       	call   1320 <sendfile@plt>
    16db:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    16df:	75 0e                	jne    16ef <handleClient+0x226>
    16e1:	48 8d 3d c4 09 00 00 	lea    rdi,[rip+0x9c4]        # 20ac <_IO_stdin_used+0xac>
    16e8:	e8 33 fb ff ff       	call   1220 <puts@plt>
    16ed:	eb 01                	jmp    16f0 <handleClient+0x227>
    16ef:	90                   	nop
    16f0:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
    16f6:	89 c7                	mov    edi,eax
    16f8:	e8 a3 fb ff ff       	call   12a0 <close@plt>
    16fd:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    1704:	48 89 c7             	mov    rdi,rax
    1707:	e8 44 fb ff ff       	call   1250 <fclose@plt>
    170c:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    1712:	89 c7                	mov    edi,eax
    1714:	e8 87 fb ff ff       	call   12a0 <close@plt>
    1719:	90                   	nop
    171a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    171e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1725:	00 00 
    1727:	74 05                	je     172e <handleClient+0x265>
    1729:	e8 42 fb ff ff       	call   1270 <__stack_chk_fail@plt>
    172e:	48 81 c4 28 01 00 00 	add    rsp,0x128
    1735:	5b                   	pop    rbx
    1736:	5d                   	pop    rbp
    1737:	c3                   	ret    

0000000000001738 <notifyNewClient>:
    1738:	f3 0f 1e fa          	endbr64 
    173c:	55                   	push   rbp
    173d:	48 89 e5             	mov    rbp,rsp
    1740:	48 83 ec 10          	sub    rsp,0x10
    1744:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    1747:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    174b:	48 8d 3d 6d 09 00 00 	lea    rdi,[rip+0x96d]        # 20bf <_IO_stdin_used+0xbf>
    1752:	e8 c9 fa ff ff       	call   1220 <puts@plt>
    1757:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    175b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    175e:	48 89 d6             	mov    rsi,rdx
    1761:	89 c7                	mov    edi,eax
    1763:	e8 61 fd ff ff       	call   14c9 <handleClient>
    1768:	90                   	nop
    1769:	c9                   	leave  
    176a:	c3                   	ret    

000000000000176b <error>:
    176b:	f3 0f 1e fa          	endbr64 
    176f:	55                   	push   rbp
    1770:	48 89 e5             	mov    rbp,rsp
    1773:	48 83 ec 10          	sub    rsp,0x10
    1777:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    177b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    177f:	48 89 c7             	mov    rdi,rax
    1782:	e8 d9 fb ff ff       	call   1360 <perror@plt>
    1787:	bf 01 00 00 00       	mov    edi,0x1
    178c:	e8 0f fc ff ff       	call   13a0 <exit@plt>

0000000000001791 <main>:
    1791:	f3 0f 1e fa          	endbr64 
    1795:	55                   	push   rbp
    1796:	48 89 e5             	mov    rbp,rsp
    1799:	48 83 ec 70          	sub    rsp,0x70
    179d:	89 7d 9c             	mov    DWORD PTR [rbp-0x64],edi
    17a0:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    17a4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    17ab:	00 00 
    17ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    17b1:	31 c0                	xor    eax,eax
    17b3:	83 7d 9c 03          	cmp    DWORD PTR [rbp-0x64],0x3
    17b7:	74 6e                	je     1827 <main+0x96>
    17b9:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    17bd:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    17c0:	48 8b 05 59 28 00 00 	mov    rax,QWORD PTR [rip+0x2859]        # 4020 <stderr@@GLIBC_2.2.5>
    17c7:	48 8d 35 02 09 00 00 	lea    rsi,[rip+0x902]        # 20d0 <_IO_stdin_used+0xd0>
    17ce:	48 89 c7             	mov    rdi,rax
    17d1:	b8 00 00 00 00       	mov    eax,0x0
    17d6:	e8 05 fb ff ff       	call   12e0 <fprintf@plt>
    17db:	48 8b 05 3e 28 00 00 	mov    rax,QWORD PTR [rip+0x283e]        # 4020 <stderr@@GLIBC_2.2.5>
    17e2:	48 8d 15 59 08 00 00 	lea    rdx,[rip+0x859]        # 2042 <_IO_stdin_used+0x42>
    17e9:	48 8d 35 08 09 00 00 	lea    rsi,[rip+0x908]        # 20f8 <_IO_stdin_used+0xf8>
    17f0:	48 89 c7             	mov    rdi,rax
    17f3:	b8 00 00 00 00       	mov    eax,0x0
    17f8:	e8 e3 fa ff ff       	call   12e0 <fprintf@plt>
    17fd:	48 8b 05 1c 28 00 00 	mov    rax,QWORD PTR [rip+0x281c]        # 4020 <stderr@@GLIBC_2.2.5>
    1804:	48 89 c1             	mov    rcx,rax
    1807:	ba 42 00 00 00       	mov    edx,0x42
    180c:	be 01 00 00 00       	mov    esi,0x1
    1811:	48 8d 3d 28 09 00 00 	lea    rdi,[rip+0x928]        # 2140 <_IO_stdin_used+0x140>
    1818:	e8 93 fb ff ff       	call   13b0 <fwrite@plt>
    181d:	bf 01 00 00 00       	mov    edi,0x1
    1822:	e8 79 fb ff ff       	call   13a0 <exit@plt>
    1827:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    182b:	48 83 c0 08          	add    rax,0x8
    182f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1832:	48 89 c7             	mov    rdi,rax
    1835:	e8 46 fb ff ff       	call   1380 <atoi@plt>
    183a:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    183d:	ba 00 00 00 00       	mov    edx,0x0
    1842:	be 01 00 00 00       	mov    esi,0x1
    1847:	bf 02 00 00 00       	mov    edi,0x2
    184c:	e8 7f fb ff ff       	call   13d0 <socket@plt>
    1851:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    1854:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
    1858:	79 0c                	jns    1866 <main+0xd5>
    185a:	48 8d 3d 22 09 00 00 	lea    rdi,[rip+0x922]        # 2183 <_IO_stdin_used+0x183>
    1861:	e8 05 ff ff ff       	call   176b <error>
    1866:	c7 45 b0 01 00 00 00 	mov    DWORD PTR [rbp-0x50],0x1
    186d:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    1871:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    1874:	41 b8 04 00 00 00    	mov    r8d,0x4
    187a:	48 89 d1             	mov    rcx,rdx
    187d:	ba 02 00 00 00       	mov    edx,0x2
    1882:	be 01 00 00 00       	mov    esi,0x1
    1887:	89 c7                	mov    edi,eax
    1889:	e8 a2 f9 ff ff       	call   1230 <setsockopt@plt>
    188e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    1892:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    1899:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
    18a0:	00 
    18a1:	66 c7 45 d0 02 00    	mov    WORD PTR [rbp-0x30],0x2
    18a7:	48 8d 3d ea 08 00 00 	lea    rdi,[rip+0x8ea]        # 2198 <_IO_stdin_used+0x198>
    18ae:	e8 0d fa ff ff       	call   12c0 <inet_addr@plt>
    18b3:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
    18b6:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    18b9:	0f b7 c0             	movzx  eax,ax
    18bc:	89 c7                	mov    edi,eax
    18be:	e8 bd f9 ff ff       	call   1280 <htons@plt>
    18c3:	66 89 45 d2          	mov    WORD PTR [rbp-0x2e],ax
    18c7:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    18cb:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    18ce:	ba 10 00 00 00       	mov    edx,0x10
    18d3:	48 89 ce             	mov    rsi,rcx
    18d6:	89 c7                	mov    edi,eax
    18d8:	e8 63 fa ff ff       	call   1340 <bind@plt>
    18dd:	85 c0                	test   eax,eax
    18df:	79 0c                	jns    18ed <main+0x15c>
    18e1:	48 8d 3d ba 08 00 00 	lea    rdi,[rip+0x8ba]        # 21a2 <_IO_stdin_used+0x1a2>
    18e8:	e8 7e fe ff ff       	call   176b <error>
    18ed:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    18f0:	be 05 00 00 00       	mov    esi,0x5
    18f5:	89 c7                	mov    edi,eax
    18f7:	e8 14 fa ff ff       	call   1310 <listen@plt>
    18fc:	85 c0                	test   eax,eax
    18fe:	79 0c                	jns    190c <main+0x17b>
    1900:	48 8d 3d ac 08 00 00 	lea    rdi,[rip+0x8ac]        # 21b3 <_IO_stdin_used+0x1b3>
    1907:	e8 5f fe ff ff       	call   176b <error>
    190c:	c7 45 ac 10 00 00 00 	mov    DWORD PTR [rbp-0x54],0x10
    1913:	48 8d 55 ac          	lea    rdx,[rbp-0x54]
    1917:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    191b:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    191e:	48 89 ce             	mov    rsi,rcx
    1921:	89 c7                	mov    edi,eax
    1923:	e8 48 fa ff ff       	call   1370 <accept@plt>
    1928:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    192b:	83 7d bc 00          	cmp    DWORD PTR [rbp-0x44],0x0
    192f:	79 0c                	jns    193d <main+0x1ac>
    1931:	48 8d 3d 8b 08 00 00 	lea    rdi,[rip+0x88b]        # 21c3 <_IO_stdin_used+0x1c3>
    1938:	e8 2e fe ff ff       	call   176b <error>
    193d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    1941:	48 83 c0 04          	add    rax,0x4
    1945:	ba 02 00 00 00       	mov    edx,0x2
    194a:	be 04 00 00 00       	mov    esi,0x4
    194f:	48 89 c7             	mov    rdi,rax
    1952:	e8 39 fa ff ff       	call   1390 <gethostbyaddr@plt>
    1957:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    195b:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    1960:	75 0c                	jne    196e <main+0x1dd>
    1962:	48 8d 3d 6a 08 00 00 	lea    rdi,[rip+0x86a]        # 21d3 <_IO_stdin_used+0x1d3>
    1969:	e8 fd fd ff ff       	call   176b <error>
    196e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    1971:	89 c7                	mov    edi,eax
    1973:	e8 c8 f8 ff ff       	call   1240 <inet_ntoa@plt>
    1978:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    197c:	48 83 7d c8 00       	cmp    QWORD PTR [rbp-0x38],0x0
    1981:	75 0c                	jne    198f <main+0x1fe>
    1983:	48 8d 3d 60 08 00 00 	lea    rdi,[rip+0x860]        # 21ea <_IO_stdin_used+0x1ea>
    198a:	e8 dc fd ff ff       	call   176b <error>
    198f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    1993:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1996:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    199a:	48 89 c6             	mov    rsi,rax
    199d:	48 8d 3d 5c 08 00 00 	lea    rdi,[rip+0x85c]        # 2200 <_IO_stdin_used+0x200>
    19a4:	b8 00 00 00 00       	mov    eax,0x0
    19a9:	e8 e2 f8 ff ff       	call   1290 <printf@plt>
    19ae:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    19b2:	48 83 c0 10          	add    rax,0x10
    19b6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    19b9:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
    19bc:	48 89 d6             	mov    rsi,rdx
    19bf:	89 c7                	mov    edi,eax
    19c1:	e8 72 fd ff ff       	call   1738 <notifyNewClient>
    19c6:	e9 48 ff ff ff       	jmp    1913 <main+0x182>
    19cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000019d0 <__libc_csu_init>:
    19d0:	f3 0f 1e fa          	endbr64 
    19d4:	41 57                	push   r15
    19d6:	4c 8d 3d eb 22 00 00 	lea    r15,[rip+0x22eb]        # 3cc8 <__frame_dummy_init_array_entry>
    19dd:	41 56                	push   r14
    19df:	49 89 d6             	mov    r14,rdx
    19e2:	41 55                	push   r13
    19e4:	49 89 f5             	mov    r13,rsi
    19e7:	41 54                	push   r12
    19e9:	41 89 fc             	mov    r12d,edi
    19ec:	55                   	push   rbp
    19ed:	48 8d 2d dc 22 00 00 	lea    rbp,[rip+0x22dc]        # 3cd0 <__do_global_dtors_aux_fini_array_entry>
    19f4:	53                   	push   rbx
    19f5:	4c 29 fd             	sub    rbp,r15
    19f8:	48 83 ec 08          	sub    rsp,0x8
    19fc:	e8 ff f5 ff ff       	call   1000 <_init>
    1a01:	48 c1 fd 03          	sar    rbp,0x3
    1a05:	74 1f                	je     1a26 <__libc_csu_init+0x56>
    1a07:	31 db                	xor    ebx,ebx
    1a09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1a10:	4c 89 f2             	mov    rdx,r14
    1a13:	4c 89 ee             	mov    rsi,r13
    1a16:	44 89 e7             	mov    edi,r12d
    1a19:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    1a1d:	48 83 c3 01          	add    rbx,0x1
    1a21:	48 39 dd             	cmp    rbp,rbx
    1a24:	75 ea                	jne    1a10 <__libc_csu_init+0x40>
    1a26:	48 83 c4 08          	add    rsp,0x8
    1a2a:	5b                   	pop    rbx
    1a2b:	5d                   	pop    rbp
    1a2c:	41 5c                	pop    r12
    1a2e:	41 5d                	pop    r13
    1a30:	41 5e                	pop    r14
    1a32:	41 5f                	pop    r15
    1a34:	c3                   	ret    
    1a35:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    1a3c:	00 00 00 00 

0000000000001a40 <__libc_csu_fini>:
    1a40:	f3 0f 1e fa          	endbr64 
    1a44:	c3                   	ret    
    1a45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1a4c:	00 00 00 
    1a4f:	90                   	nop

0000000000001a50 <__fstat>:
    1a50:	f3 0f 1e fa          	endbr64 
    1a54:	48 89 f2             	mov    rdx,rsi
    1a57:	89 fe                	mov    esi,edi
    1a59:	bf 01 00 00 00       	mov    edi,0x1
    1a5e:	e9 9d f8 ff ff       	jmp    1300 <__fxstat@plt>

Disassembly of section .fini:

0000000000001a64 <_fini>:
    1a64:	f3 0f 1e fa          	endbr64 
    1a68:	48 83 ec 08          	sub    rsp,0x8
    1a6c:	48 83 c4 08          	add    rsp,0x8
    1a70:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	00 00                	add    BYTE PTR [rax],al
    2006:	00 00                	add    BYTE PTR [rax],al
    2008:	72 2b                	jb     2035 <_IO_stdin_used+0x35>
    200a:	62                   	(bad)  
    200b:	00 66 61             	add    BYTE PTR [rsi+0x61],ah
    200e:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    2015:	20 
    2016:	66 64 6f             	outs   dx,WORD PTR fs:[rsi]
    2019:	70 65                	jo     2080 <_IO_stdin_used+0x80>
    201b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    201c:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    201f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    2022:	74 20                	je     2044 <_IO_stdin_used+0x44>
    2024:	66 64 00 66 61       	data16 add BYTE PTR fs:[rsi+0x61],ah
    2029:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    2030:	20 
    2031:	72 65                	jb     2098 <_IO_stdin_used+0x98>
    2033:	61                   	(bad)  
    2034:	64 20 66 72          	and    BYTE PTR fs:[rsi+0x72],ah
    2038:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2039:	6d                   	ins    DWORD PTR es:[rdi],dx
    203a:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    203d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    2040:	74 00                	je     2042 <_IO_stdin_used+0x42>
    2042:	50                   	push   rax
    2043:	41 53                	push   r11
    2045:	53                   	push   rbx
    2046:	57                   	push   rdi
    2047:	4f 52                	rex.WRXB push r10
    2049:	44 5f                	rex.R pop rdi
    204b:	42                   	rex.X
    204c:	43 52                	rex.XB push r10
    204e:	59                   	pop    rcx
    204f:	50                   	push   rax
    2050:	54                   	push   rsp
    2051:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    2054:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
    2057:	72 65                	jb     20be <_IO_stdin_used+0xbe>
    2059:	63 74 20 70          	movsxd esi,DWORD PTR [rax+riz*1+0x70]
    205d:	61                   	(bad)  
    205e:	73 73                	jae    20d3 <_IO_stdin_used+0xd3>
    2060:	77 6f                	ja     20d1 <_IO_stdin_used+0xd1>
    2062:	72 64                	jb     20c8 <_IO_stdin_used+0xc8>
    2064:	3a 20                	cmp    ah,BYTE PTR [rax]
    2066:	00 61 75             	add    BYTE PTR [rcx+0x75],ah
    2069:	74 68                	je     20d3 <_IO_stdin_used+0xd3>
    206b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    206d:	74 69                	je     20d8 <_IO_stdin_used+0xd8>
    206f:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2072:	65 64 00 66 61       	gs add BYTE PTR fs:[rsi+0x61],ah
    2077:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    207e:	20 
    207f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2080:	70 65                	jo     20e7 <_IO_stdin_used+0xe7>
    2082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2083:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    2086:	6c                   	ins    BYTE PTR es:[rdi],dx
    2087:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    208a:	27                   	(bad)  
    208b:	25 73 27 0a 00       	and    eax,0xa2773
    2090:	66 61                	data16 (bad) 
    2092:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    2099:	20 
    209a:	66 73 74             	data16 jae 2111 <_IO_stdin_used+0x111>
    209d:	61                   	(bad)  
    209e:	74 20                	je     20c0 <_IO_stdin_used+0xc0>
    20a0:	66 69 6c 65 3a 20 27 	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2720
    20a7:	25 73 27 0a 00       	and    eax,0xa2773
    20ac:	66 61                	data16 (bad) 
    20ae:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    20b5:	20 
    20b6:	73 65                	jae    211d <_IO_stdin_used+0x11d>
    20b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20b9:	64 66 69 6c 65 00 74 	imul   bp,WORD PTR fs:[rbp+riz*2+0x0],0x6f74
    20c0:	6f 
    20c1:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    20c3:	3a 20                	cmp    ah,BYTE PTR [rax]
    20c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    20c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c7:	67 20 64 61 74       	and    BYTE PTR [ecx+eiz*2+0x74],ah
    20cc:	65 00 00             	add    BYTE PTR gs:[rax],al
    20cf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    20d2:	61                   	(bad)  
    20d3:	67 65 3a 20          	cmp    ah,BYTE PTR gs:[eax]
    20d7:	25 73 20 3c 70       	and    eax,0x703c2073
    20dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20dd:	72 74                	jb     2153 <_IO_stdin_used+0x153>
    20df:	3e 20 3c 66          	and    BYTE PTR ds:[rsi+riz*2],bh
    20e3:	69 6c 65 2d 74 6f 2d 	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x732d6f74
    20ea:	73 
    20eb:	68 61 72 65 3e       	push   0x3e657261
    20f0:	0a 00                	or     al,BYTE PTR [rax]
    20f2:	00 00                	add    BYTE PTR [rax],al
    20f4:	00 00                	add    BYTE PTR [rax],al
    20f6:	00 00                	add    BYTE PTR [rax],al
    20f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fa:	74 65                	je     2161 <_IO_stdin_used+0x161>
    20fc:	3a 20                	cmp    ah,BYTE PTR [rax]
    20fe:	73 65                	jae    2165 <_IO_stdin_used+0x165>
    2100:	74 20                	je     2122 <_IO_stdin_used+0x122>
    2102:	70 61                	jo     2165 <_IO_stdin_used+0x165>
    2104:	73 73                	jae    2179 <_IO_stdin_used+0x179>
    2106:	77 6f                	ja     2177 <_IO_stdin_used+0x177>
    2108:	72 64                	jb     216e <_IO_stdin_used+0x16e>
    210a:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    210d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    210e:	74 65                	je     2175 <_IO_stdin_used+0x175>
    2110:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    2114:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2115:	20 77 69             	and    BYTE PTR [rdi+0x69],dh
    2118:	74 68                	je     2182 <_IO_stdin_used+0x182>
    211a:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
    211e:	20 27                	and    BYTE PTR [rdi],ah
    2120:	25 73 27 20 65       	and    eax,0x65202773
    2125:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2126:	76 69                	jbe    2191 <_IO_stdin_used+0x191>
    2128:	72 6f                	jb     2199 <_IO_stdin_used+0x199>
    212a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    212b:	6d                   	ins    DWORD PTR es:[rdi],dx
    212c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    212e:	74 20                	je     2150 <_IO_stdin_used+0x150>
    2130:	76 61                	jbe    2193 <_IO_stdin_used+0x193>
    2132:	72 69                	jb     219d <_IO_stdin_used+0x19d>
    2134:	61                   	(bad)  
    2135:	62                   	(bad)  
    2136:	6c                   	ins    BYTE PTR es:[rdi],dx
    2137:	65 0a 00             	or     al,BYTE PTR gs:[rax]
    213a:	00 00                	add    BYTE PTR [rax],al
    213c:	00 00                	add    BYTE PTR [rax],al
    213e:	00 00                	add    BYTE PTR [rax],al
    2140:	20 20                	and    BYTE PTR [rax],ah
    2142:	20 20                	and    BYTE PTR [rax],ah
    2144:	20 20                	and    BYTE PTR [rax],ah
    2146:	20 20                	and    BYTE PTR [rax],ah
    2148:	20 20                	and    BYTE PTR [rax],ah
    214a:	67 65 6e             	outs   dx,BYTE PTR gs:[esi]
    214d:	65 72 61             	gs jb  21b1 <_IO_stdin_used+0x1b1>
    2150:	74 65                	je     21b7 <_IO_stdin_used+0x1b7>
    2152:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    2155:	76 61                	jbe    21b8 <_IO_stdin_used+0x1b8>
    2157:	6c                   	ins    BYTE PTR es:[rdi],dx
    2158:	69 64 20 62 63 72 79 	imul   esp,DWORD PTR [rax+riz*1+0x62],0x70797263
    215f:	70 
    2160:	74 20                	je     2182 <_IO_stdin_used+0x182>
    2162:	73 74                	jae    21d8 <_IO_stdin_used+0x1d8>
    2164:	72 69                	jb     21cf <_IO_stdin_used+0x1cf>
    2166:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2167:	67 20 77 69          	and    BYTE PTR [edi+0x69],dh
    216b:	74 68                	je     21d5 <_IO_stdin_used+0x1d5>
    216d:	20 27                	and    BYTE PTR [rdi],ah
    216f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2170:	70 65                	jo     21d7 <_IO_stdin_used+0x1d7>
    2172:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2173:	73 73                	jae    21e8 <_IO_stdin_used+0x1e8>
    2175:	6c                   	ins    BYTE PTR es:[rdi],dx
    2176:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    2179:	73 73                	jae    21ee <_IO_stdin_used+0x1ee>
    217b:	77 64                	ja     21e1 <_IO_stdin_used+0x1e1>
    217d:	20 2d 35 27 0a 00    	and    BYTE PTR [rip+0xa2735],ch        # a48b8 <_end+0xa0888>
    2183:	45 52                	rex.RB push r10
    2185:	52                   	push   rdx
    2186:	4f 52                	rex.WRXB push r10
    2188:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    218b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    218d:	69 6e 67 20 73 6f 63 	imul   ebp,DWORD PTR [rsi+0x67],0x636f7320
    2194:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    2198:	31 32                	xor    DWORD PTR [rdx],esi
    219a:	37                   	(bad)  
    219b:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    219e:	30 2e                	xor    BYTE PTR [rsi],ch
    21a0:	31 00                	xor    DWORD PTR [rax],eax
    21a2:	45 52                	rex.RB push r10
    21a4:	52                   	push   rdx
    21a5:	4f 52                	rex.WRXB push r10
    21a7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    21aa:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    21ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21ae:	64 69 6e 67 00 45 52 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x52524500
    21b5:	52 
    21b6:	4f 52                	rex.WRXB push r10
    21b8:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    21bb:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    21bf:	74 65                	je     2226 <_IO_stdin_used+0x226>
    21c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21c2:	00 45 52             	add    BYTE PTR [rbp+0x52],al
    21c5:	52                   	push   rdx
    21c6:	4f 52                	rex.WRXB push r10
    21c8:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    21cb:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    21ce:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    21d1:	74 00                	je     21d3 <_IO_stdin_used+0x1d3>
    21d3:	45 52                	rex.RB push r10
    21d5:	52                   	push   rdx
    21d6:	4f 52                	rex.WRXB push r10
    21d8:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    21db:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    21de:	74 68                	je     2248 <__GNU_EH_FRAME_HDR+0x1c>
    21e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21e1:	73 74                	jae    2257 <__GNU_EH_FRAME_HDR+0x2b>
    21e3:	62                   	(bad)  
    21e4:	79 61                	jns    2247 <__GNU_EH_FRAME_HDR+0x1b>
    21e6:	64 64 72 00          	fs fs jb 21ea <_IO_stdin_used+0x1ea>
    21ea:	45 52                	rex.RB push r10
    21ec:	52                   	push   rdx
    21ed:	4f 52                	rex.WRXB push r10
    21ef:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    21f2:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    21f5:	65 74 5f             	gs je  2257 <__GNU_EH_FRAME_HDR+0x2b>
    21f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21f9:	74 6f                	je     226a <__GNU_EH_FRAME_HDR+0x3e>
    21fb:	61                   	(bad)  
    21fc:	0a 00                	or     al,BYTE PTR [rax]
    21fe:	00 00                	add    BYTE PTR [rax],al
    2200:	73 65                	jae    2267 <__GNU_EH_FRAME_HDR+0x3b>
    2202:	72 76                	jb     227a <__GNU_EH_FRAME_HDR+0x4e>
    2204:	65 72 20             	gs jb  2227 <_IO_stdin_used+0x227>
    2207:	65 73 74             	gs jae 227e <__GNU_EH_FRAME_HDR+0x52>
    220a:	61                   	(bad)  
    220b:	62                   	(bad)  
    220c:	6c                   	ins    BYTE PTR es:[rdi],dx
    220d:	69 73 68 65 64 20 63 	imul   esi,DWORD PTR [rbx+0x68],0x63206465
    2214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2215:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2216:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2217:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    221c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    221d:	20 77 69             	and    BYTE PTR [rdi+0x69],dh
    2220:	74 68                	je     228a <__GNU_EH_FRAME_HDR+0x5e>
    2222:	20 25 73 20 28 25    	and    BYTE PTR [rip+0x25282073],ah        # 2528429b <_end+0x2528026b>
    2228:	73 29                	jae    2253 <__GNU_EH_FRAME_HDR+0x27>
    222a:	0a 00                	or     al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

000000000000222c <__GNU_EH_FRAME_HDR>:
    222c:	01 1b                	add    DWORD PTR [rbx],ebx
    222e:	03 3b                	add    edi,DWORD PTR [rbx]
    2230:	60                   	(bad)  
    2231:	00 00                	add    BYTE PTR [rax],al
    2233:	00 0b                	add    BYTE PTR [rbx],cl
    2235:	00 00                	add    BYTE PTR [rax],al
    2237:	00 f4                	add    ah,dh
    2239:	ed                   	in     eax,dx
    223a:	ff                   	(bad)  
    223b:	ff 94 00 00 00 d4 ef 	call   QWORD PTR [rax+rax*1-0x102c0000]
    2242:	ff                   	(bad)  
    2243:	ff                   	(bad)  
    2244:	bc 00 00 00 e4       	mov    esp,0xe4000000
    2249:	ef                   	out    dx,eax
    224a:	ff                   	(bad)  
    224b:	ff d4                	call   rsp
    224d:	00 00                	add    BYTE PTR [rax],al
    224f:	00 b4 f1 ff ff 7c 00 	add    BYTE PTR [rcx+rsi*8+0x7cffff],dh
    2256:	00 00                	add    BYTE PTR [rax],al
    2258:	9d                   	popf   
    2259:	f2 ff                	repnz (bad) 
    225b:	ff                   	(bad)  
    225c:	ec                   	in     al,dx
    225d:	00 00                	add    BYTE PTR [rax],al
    225f:	00 0c f5 ff ff 10 01 	add    BYTE PTR [rsi*8+0x110ffff],cl
    2266:	00 00                	add    BYTE PTR [rax],al
    2268:	3f                   	(bad)  
    2269:	f5                   	cmc    
    226a:	ff                   	(bad)  
    226b:	ff 30                	push   QWORD PTR [rax]
    226d:	01 00                	add    DWORD PTR [rax],eax
    226f:	00 65 f5             	add    BYTE PTR [rbp-0xb],ah
    2272:	ff                   	(bad)  
    2273:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    2277:	00 a4 f7 ff ff 6c 01 	add    BYTE PTR [rdi+rsi*8+0x16cffff],ah
    227e:	00 00                	add    BYTE PTR [rax],al
    2280:	14 f8                	adc    al,0xf8
    2282:	ff                   	(bad)  
    2283:	ff b4 01 00 00 24 f8 	push   QWORD PTR [rcx+rax*1-0x7dc0000]
    228a:	ff                   	(bad)  
    228b:	ff cc                	dec    esp
    228d:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

0000000000002290 <__FRAME_END__-0x17c>:
    2290:	14 00                	adc    al,0x0
    2292:	00 00                	add    BYTE PTR [rax],al
    2294:	00 00                	add    BYTE PTR [rax],al
    2296:	00 00                	add    BYTE PTR [rax],al
    2298:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    229b:	00 01                	add    BYTE PTR [rcx],al
    229d:	78 10                	js     22af <__GNU_EH_FRAME_HDR+0x83>
    229f:	01 1b                	add    DWORD PTR [rbx],ebx
    22a1:	0c 07                	or     al,0x7
    22a3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    22a9:	00 00                	add    BYTE PTR [rax],al
    22ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    22ae:	00 00                	add    BYTE PTR [rax],al
    22b0:	30 f1                	xor    cl,dh
    22b2:	ff                   	(bad)  
    22b3:	ff 2f                	jmp    FWORD PTR [rdi]
    22b5:	00 00                	add    BYTE PTR [rax],al
    22b7:	00 00                	add    BYTE PTR [rax],al
    22b9:	44 07                	rex.R (bad) 
    22bb:	10 00                	adc    BYTE PTR [rax],al
    22bd:	00 00                	add    BYTE PTR [rax],al
    22bf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    22c2:	00 00                	add    BYTE PTR [rax],al
    22c4:	34 00                	xor    al,0x0
    22c6:	00 00                	add    BYTE PTR [rax],al
    22c8:	58                   	pop    rax
    22c9:	ed                   	in     eax,dx
    22ca:	ff                   	(bad)  
    22cb:	ff e0                	jmp    rax
    22cd:	01 00                	add    DWORD PTR [rax],eax
    22cf:	00 00                	add    BYTE PTR [rax],al
    22d1:	0e                   	(bad)  
    22d2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    22d5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    22d8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    22db:	80 00 3f             	add    BYTE PTR [rax],0x3f
    22de:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    22e0:	2a 33                	sub    dh,BYTE PTR [rbx]
    22e2:	24 22                	and    al,0x22
    22e4:	00 00                	add    BYTE PTR [rax],al
    22e6:	00 00                	add    BYTE PTR [rax],al
    22e8:	14 00                	adc    al,0x0
    22ea:	00 00                	add    BYTE PTR [rax],al
    22ec:	5c                   	pop    rsp
    22ed:	00 00                	add    BYTE PTR [rax],al
    22ef:	00 10                	add    BYTE PTR [rax],dl
    22f1:	ef                   	out    dx,eax
    22f2:	ff                   	(bad)  
    22f3:	ff 10                	call   QWORD PTR [rax]
	...
    22fd:	00 00                	add    BYTE PTR [rax],al
    22ff:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    2302:	00 00                	add    BYTE PTR [rax],al
    2304:	74 00                	je     2306 <__GNU_EH_FRAME_HDR+0xda>
    2306:	00 00                	add    BYTE PTR [rax],al
    2308:	08 ef                	or     bh,ch
    230a:	ff                   	(bad)  
    230b:	ff d0                	call   rax
    230d:	01 00                	add    DWORD PTR [rax],eax
	...
    2317:	00 20                	add    BYTE PTR [rax],ah
    2319:	00 00                	add    BYTE PTR [rax],al
    231b:	00 8c 00 00 00 a9 f1 	add    BYTE PTR [rax+rax*1-0xe570000],cl
    2322:	ff                   	(bad)  
    2323:	ff 6f 02             	jmp    FWORD PTR [rdi+0x2]
    2326:	00 00                	add    BYTE PTR [rax],al
    2328:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    232b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2331:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    2335:	5e                   	pop    rsi
    2336:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    2339:	08 00                	or     BYTE PTR [rax],al
    233b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    233e:	00 00                	add    BYTE PTR [rax],al
    2340:	b0 00                	mov    al,0x0
    2342:	00 00                	add    BYTE PTR [rax],al
    2344:	f4                   	hlt    
    2345:	f3 ff                	repz (bad) 
    2347:	ff 33                	push   QWORD PTR [rbx]
    2349:	00 00                	add    BYTE PTR [rax],al
    234b:	00 00                	add    BYTE PTR [rax],al
    234d:	45 0e                	rex.RB (bad) 
    234f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2355:	6a 0c                	push   0xc
    2357:	07                   	(bad)  
    2358:	08 00                	or     BYTE PTR [rax],al
    235a:	00 00                	add    BYTE PTR [rax],al
    235c:	18 00                	sbb    BYTE PTR [rax],al
    235e:	00 00                	add    BYTE PTR [rax],al
    2360:	d0 00                	rol    BYTE PTR [rax],1
    2362:	00 00                	add    BYTE PTR [rax],al
    2364:	07                   	(bad)  
    2365:	f4                   	hlt    
    2366:	ff                   	(bad)  
    2367:	ff 26                	jmp    QWORD PTR [rsi]
    2369:	00 00                	add    BYTE PTR [rax],al
    236b:	00 00                	add    BYTE PTR [rax],al
    236d:	45 0e                	rex.RB (bad) 
    236f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2375:	00 00                	add    BYTE PTR [rax],al
    2377:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    237a:	00 00                	add    BYTE PTR [rax],al
    237c:	ec                   	in     al,dx
    237d:	00 00                	add    BYTE PTR [rax],al
    237f:	00 11                	add    BYTE PTR [rcx],dl
    2381:	f4                   	hlt    
    2382:	ff                   	(bad)  
    2383:	ff                   	(bad)  
    2384:	3a 02                	cmp    al,BYTE PTR [rdx]
    2386:	00 00                	add    BYTE PTR [rax],al
    2388:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    238b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2391:	00 00                	add    BYTE PTR [rax],al
    2393:	00 00                	add    BYTE PTR [rax],al
    2395:	00 00                	add    BYTE PTR [rax],al
    2397:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    239b:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
    239e:	00 00                	add    BYTE PTR [rax],al
    23a0:	30 f6                	xor    dh,dh
    23a2:	ff                   	(bad)  
    23a3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    23a6:	00 00                	add    BYTE PTR [rax],al
    23a8:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    23ab:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    23b1:	8e 03                	mov    es,WORD PTR [rbx]
    23b3:	45 0e                	rex.RB (bad) 
    23b5:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    23bb:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff86303205 <_end+0xffffffff862ff1d5>
    23c1:	06                   	(bad)  
    23c2:	48 0e                	rex.W (bad) 
    23c4:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    23ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23cb:	0e                   	(bad)  
    23cc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    23cf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    23d2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    23d5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    23d8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    23db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    23de:	08 00                	or     BYTE PTR [rax],al
    23e0:	14 00                	adc    al,0x0
    23e2:	00 00                	add    BYTE PTR [rax],al
    23e4:	54                   	push   rsp
    23e5:	01 00                	add    DWORD PTR [rax],eax
    23e7:	00 58 f6             	add    BYTE PTR [rax-0xa],bl
    23ea:	ff                   	(bad)  
    23eb:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # 23f1 <__GNU_EH_FRAME_HDR+0x1c5>
    23f1:	00 00                	add    BYTE PTR [rax],al
    23f3:	00 00                	add    BYTE PTR [rax],al
    23f5:	00 00                	add    BYTE PTR [rax],al
    23f7:	00 10                	add    BYTE PTR [rax],dl
    23f9:	00 00                	add    BYTE PTR [rax],al
    23fb:	00 6c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ch
    23ff:	00 50 f6             	add    BYTE PTR [rax-0xa],dl
    2402:	ff                   	(bad)  
    2403:	ff 13                	call   QWORD PTR [rbx]
    2405:	00 00                	add    BYTE PTR [rax],al
    2407:	00 00                	add    BYTE PTR [rax],al
    2409:	00 00                	add    BYTE PTR [rax],al
	...

000000000000240c <__FRAME_END__>:
    240c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003cc8 <__frame_dummy_init_array_entry>:
    3cc8:	c0 14 00 00          	rcl    BYTE PTR [rax+rax*1],0x0
    3ccc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003cd0 <__do_global_dtors_aux_fini_array_entry>:
    3cd0:	80 14 00 00          	adc    BYTE PTR [rax+rax*1],0x0
    3cd4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003cd8 <_DYNAMIC>:
    3cd8:	01 00                	add    DWORD PTR [rax],eax
    3cda:	00 00                	add    BYTE PTR [rax],al
    3cdc:	00 00                	add    BYTE PTR [rax],al
    3cde:	00 00                	add    BYTE PTR [rax],al
    3ce0:	01 00                	add    DWORD PTR [rax],eax
    3ce2:	00 00                	add    BYTE PTR [rax],al
    3ce4:	00 00                	add    BYTE PTR [rax],al
    3ce6:	00 00                	add    BYTE PTR [rax],al
    3ce8:	01 00                	add    DWORD PTR [rax],eax
    3cea:	00 00                	add    BYTE PTR [rax],al
    3cec:	00 00                	add    BYTE PTR [rax],al
    3cee:	00 00                	add    BYTE PTR [rax],al
    3cf0:	5a                   	pop    rdx
    3cf1:	00 00                	add    BYTE PTR [rax],al
    3cf3:	00 00                	add    BYTE PTR [rax],al
    3cf5:	00 00                	add    BYTE PTR [rax],al
    3cf7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3cfa:	00 00                	add    BYTE PTR [rax],al
    3cfc:	00 00                	add    BYTE PTR [rax],al
    3cfe:	00 00                	add    BYTE PTR [rax],al
    3d00:	00 10                	add    BYTE PTR [rax],dl
    3d02:	00 00                	add    BYTE PTR [rax],al
    3d04:	00 00                	add    BYTE PTR [rax],al
    3d06:	00 00                	add    BYTE PTR [rax],al
    3d08:	0d 00 00 00 00       	or     eax,0x0
    3d0d:	00 00                	add    BYTE PTR [rax],al
    3d0f:	00 64 1a 00          	add    BYTE PTR [rdx+rbx*1+0x0],ah
    3d13:	00 00                	add    BYTE PTR [rax],al
    3d15:	00 00                	add    BYTE PTR [rax],al
    3d17:	00 19                	add    BYTE PTR [rcx],bl
    3d19:	00 00                	add    BYTE PTR [rax],al
    3d1b:	00 00                	add    BYTE PTR [rax],al
    3d1d:	00 00                	add    BYTE PTR [rax],al
    3d1f:	00 c8                	add    al,cl
    3d21:	3c 00                	cmp    al,0x0
    3d23:	00 00                	add    BYTE PTR [rax],al
    3d25:	00 00                	add    BYTE PTR [rax],al
    3d27:	00 1b                	add    BYTE PTR [rbx],bl
    3d29:	00 00                	add    BYTE PTR [rax],al
    3d2b:	00 00                	add    BYTE PTR [rax],al
    3d2d:	00 00                	add    BYTE PTR [rax],al
    3d2f:	00 08                	add    BYTE PTR [rax],cl
    3d31:	00 00                	add    BYTE PTR [rax],al
    3d33:	00 00                	add    BYTE PTR [rax],al
    3d35:	00 00                	add    BYTE PTR [rax],al
    3d37:	00 1a                	add    BYTE PTR [rdx],bl
    3d39:	00 00                	add    BYTE PTR [rax],al
    3d3b:	00 00                	add    BYTE PTR [rax],al
    3d3d:	00 00                	add    BYTE PTR [rax],al
    3d3f:	00 d0                	add    al,dl
    3d41:	3c 00                	cmp    al,0x0
    3d43:	00 00                	add    BYTE PTR [rax],al
    3d45:	00 00                	add    BYTE PTR [rax],al
    3d47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3d4a:	00 00                	add    BYTE PTR [rax],al
    3d4c:	00 00                	add    BYTE PTR [rax],al
    3d4e:	00 00                	add    BYTE PTR [rax],al
    3d50:	08 00                	or     BYTE PTR [rax],al
    3d52:	00 00                	add    BYTE PTR [rax],al
    3d54:	00 00                	add    BYTE PTR [rax],al
    3d56:	00 00                	add    BYTE PTR [rax],al
    3d58:	f5                   	cmc    
    3d59:	fe                   	(bad)  
    3d5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3d5d:	00 00                	add    BYTE PTR [rax],al
    3d5f:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    3d65:	00 00                	add    BYTE PTR [rax],al
    3d67:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3d6d <_DYNAMIC+0x95>
    3d6d:	00 00                	add    BYTE PTR [rax],al
    3d6f:	00 48 07             	add    BYTE PTR [rax+0x7],cl
    3d72:	00 00                	add    BYTE PTR [rax],al
    3d74:	00 00                	add    BYTE PTR [rax],al
    3d76:	00 00                	add    BYTE PTR [rax],al
    3d78:	06                   	(bad)  
    3d79:	00 00                	add    BYTE PTR [rax],al
    3d7b:	00 00                	add    BYTE PTR [rax],al
    3d7d:	00 00                	add    BYTE PTR [rax],al
    3d7f:	00 d0                	add    al,dl
    3d81:	03 00                	add    eax,DWORD PTR [rax]
    3d83:	00 00                	add    BYTE PTR [rax],al
    3d85:	00 00                	add    BYTE PTR [rax],al
    3d87:	00 0a                	add    BYTE PTR [rdx],cl
    3d89:	00 00                	add    BYTE PTR [rax],al
    3d8b:	00 00                	add    BYTE PTR [rax],al
    3d8d:	00 00                	add    BYTE PTR [rax],al
    3d8f:	00 71 01             	add    BYTE PTR [rcx+0x1],dh
    3d92:	00 00                	add    BYTE PTR [rax],al
    3d94:	00 00                	add    BYTE PTR [rax],al
    3d96:	00 00                	add    BYTE PTR [rax],al
    3d98:	0b 00                	or     eax,DWORD PTR [rax]
    3d9a:	00 00                	add    BYTE PTR [rax],al
    3d9c:	00 00                	add    BYTE PTR [rax],al
    3d9e:	00 00                	add    BYTE PTR [rax],al
    3da0:	18 00                	sbb    BYTE PTR [rax],al
    3da2:	00 00                	add    BYTE PTR [rax],al
    3da4:	00 00                	add    BYTE PTR [rax],al
    3da6:	00 00                	add    BYTE PTR [rax],al
    3da8:	15 00 00 00 00       	adc    eax,0x0
	...
    3db5:	00 00                	add    BYTE PTR [rax],al
    3db7:	00 03                	add    BYTE PTR [rbx],al
    3db9:	00 00                	add    BYTE PTR [rax],al
    3dbb:	00 00                	add    BYTE PTR [rax],al
    3dbd:	00 00                	add    BYTE PTR [rax],al
    3dbf:	00 d8                	add    al,bl
    3dc1:	3e 00 00             	add    BYTE PTR ds:[rax],al
    3dc4:	00 00                	add    BYTE PTR [rax],al
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	02 00                	add    al,BYTE PTR [rax]
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 00                	add    BYTE PTR [rax],al
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	b8 02 00 00 00       	mov    eax,0x2
    3dd5:	00 00                	add    BYTE PTR [rax],al
    3dd7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	07                   	(bad)  
    3de1:	00 00                	add    BYTE PTR [rax],al
    3de3:	00 00                	add    BYTE PTR [rax],al
    3de5:	00 00                	add    BYTE PTR [rax],al
    3de7:	00 17                	add    BYTE PTR [rdi],dl
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 30                	add    BYTE PTR [rax],dh
    3df1:	0a 00                	or     al,BYTE PTR [rax]
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 07                	add    BYTE PTR [rdi],al
    3df9:	00 00                	add    BYTE PTR [rax],al
    3dfb:	00 00                	add    BYTE PTR [rax],al
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 58 09             	add    BYTE PTR [rax+0x9],bl
    3e02:	00 00                	add    BYTE PTR [rax],al
    3e04:	00 00                	add    BYTE PTR [rax],al
    3e06:	00 00                	add    BYTE PTR [rax],al
    3e08:	08 00                	or     BYTE PTR [rax],al
    3e0a:	00 00                	add    BYTE PTR [rax],al
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	00 00                	add    BYTE PTR [rax],al
    3e10:	d8 00                	fadd   DWORD PTR [rax]
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	09 00                	or     DWORD PTR [rax],eax
    3e1a:	00 00                	add    BYTE PTR [rax],al
    3e1c:	00 00                	add    BYTE PTR [rax],al
    3e1e:	00 00                	add    BYTE PTR [rax],al
    3e20:	18 00                	sbb    BYTE PTR [rax],al
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	1e                   	(bad)  
    3e29:	00 00                	add    BYTE PTR [rax],al
    3e2b:	00 00                	add    BYTE PTR [rax],al
    3e2d:	00 00                	add    BYTE PTR [rax],al
    3e2f:	00 08                	add    BYTE PTR [rax],cl
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 fb                	add    bl,bh
    3e39:	ff                   	(bad)  
    3e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 01                	add    BYTE PTR [rcx],al
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	08 00                	or     BYTE PTR [rax],al
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 fe                	add    dh,bh
    3e49:	ff                   	(bad)  
    3e4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 08                	add    BYTE PTR [rax],cl
    3e51:	09 00                	or     DWORD PTR [rax],eax
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 ff                	add    bh,bh
    3e59:	ff                   	(bad)  
    3e5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 02                	add    BYTE PTR [rdx],al
    3e61:	00 00                	add    BYTE PTR [rax],al
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 f0                	add    al,dh
    3e69:	ff                   	(bad)  
    3e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 ba 08 00 00 00    	add    BYTE PTR [rdx+0x8],bh
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 f9                	add    cl,bh
    3e79:	ff                   	(bad)  
    3e7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003ed8 <_GLOBAL_OFFSET_TABLE_>:
    3ed8:	d8 3c 00             	fdivr  DWORD PTR [rax+rax*1]
	...
    3eef:	00 30                	add    BYTE PTR [rax],dh
    3ef1:	10 00                	adc    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 40 10             	add    BYTE PTR [rax+0x10],al
    3efa:	00 00                	add    BYTE PTR [rax],al
    3efc:	00 00                	add    BYTE PTR [rax],al
    3efe:	00 00                	add    BYTE PTR [rax],al
    3f00:	50                   	push   rax
    3f01:	10 00                	adc    BYTE PTR [rax],al
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 60 10             	add    BYTE PTR [rax+0x10],ah
    3f0a:	00 00                	add    BYTE PTR [rax],al
    3f0c:	00 00                	add    BYTE PTR [rax],al
    3f0e:	00 00                	add    BYTE PTR [rax],al
    3f10:	70 10                	jo     3f22 <_GLOBAL_OFFSET_TABLE_+0x4a>
    3f12:	00 00                	add    BYTE PTR [rax],al
    3f14:	00 00                	add    BYTE PTR [rax],al
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	80 10 00             	adc    BYTE PTR [rax],0x0
    3f1b:	00 00                	add    BYTE PTR [rax],al
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 90 10 00 00 00    	add    BYTE PTR [rax+0x10],dl
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 a0 10 00 00 00    	add    BYTE PTR [rax+0x10],ah
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 b0 10 00 00 00    	add    BYTE PTR [rax+0x10],dh
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 c0                	add    al,al
    3f39:	10 00                	adc    BYTE PTR [rax],al
    3f3b:	00 00                	add    BYTE PTR [rax],al
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 d0                	add    al,dl
    3f41:	10 00                	adc    BYTE PTR [rax],al
    3f43:	00 00                	add    BYTE PTR [rax],al
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 e0                	add    al,ah
    3f49:	10 00                	adc    BYTE PTR [rax],al
    3f4b:	00 00                	add    BYTE PTR [rax],al
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 f0                	add    al,dh
    3f51:	10 00                	adc    BYTE PTR [rax],al
    3f53:	00 00                	add    BYTE PTR [rax],al
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 00                	add    BYTE PTR [rax],al
    3f59:	11 00                	adc    DWORD PTR [rax],eax
    3f5b:	00 00                	add    BYTE PTR [rax],al
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 10                	add    BYTE PTR [rax],dl
    3f61:	11 00                	adc    DWORD PTR [rax],eax
    3f63:	00 00                	add    BYTE PTR [rax],al
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 20                	add    BYTE PTR [rax],ah
    3f69:	11 00                	adc    DWORD PTR [rax],eax
    3f6b:	00 00                	add    BYTE PTR [rax],al
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 30                	add    BYTE PTR [rax],dh
    3f71:	11 00                	adc    DWORD PTR [rax],eax
    3f73:	00 00                	add    BYTE PTR [rax],al
    3f75:	00 00                	add    BYTE PTR [rax],al
    3f77:	00 40 11             	add    BYTE PTR [rax+0x11],al
    3f7a:	00 00                	add    BYTE PTR [rax],al
    3f7c:	00 00                	add    BYTE PTR [rax],al
    3f7e:	00 00                	add    BYTE PTR [rax],al
    3f80:	50                   	push   rax
    3f81:	11 00                	adc    DWORD PTR [rax],eax
    3f83:	00 00                	add    BYTE PTR [rax],al
    3f85:	00 00                	add    BYTE PTR [rax],al
    3f87:	00 60 11             	add    BYTE PTR [rax+0x11],ah
    3f8a:	00 00                	add    BYTE PTR [rax],al
    3f8c:	00 00                	add    BYTE PTR [rax],al
    3f8e:	00 00                	add    BYTE PTR [rax],al
    3f90:	70 11                	jo     3fa3 <_GLOBAL_OFFSET_TABLE_+0xcb>
    3f92:	00 00                	add    BYTE PTR [rax],al
    3f94:	00 00                	add    BYTE PTR [rax],al
    3f96:	00 00                	add    BYTE PTR [rax],al
    3f98:	80 11 00             	adc    BYTE PTR [rcx],0x0
    3f9b:	00 00                	add    BYTE PTR [rax],al
    3f9d:	00 00                	add    BYTE PTR [rax],al
    3f9f:	00 90 11 00 00 00    	add    BYTE PTR [rax+0x11],dl
    3fa5:	00 00                	add    BYTE PTR [rax],al
    3fa7:	00 a0 11 00 00 00    	add    BYTE PTR [rax+0x11],ah
    3fad:	00 00                	add    BYTE PTR [rax],al
    3faf:	00 b0 11 00 00 00    	add    BYTE PTR [rax+0x11],dh
    3fb5:	00 00                	add    BYTE PTR [rax],al
    3fb7:	00 c0                	add    al,al
    3fb9:	11 00                	adc    DWORD PTR [rax],eax
    3fbb:	00 00                	add    BYTE PTR [rax],al
    3fbd:	00 00                	add    BYTE PTR [rax],al
    3fbf:	00 d0                	add    al,dl
    3fc1:	11 00                	adc    DWORD PTR [rax],eax
    3fc3:	00 00                	add    BYTE PTR [rax],al
    3fc5:	00 00                	add    BYTE PTR [rax],al
    3fc7:	00 e0                	add    al,ah
    3fc9:	11 00                	adc    DWORD PTR [rax],eax
    3fcb:	00 00                	add    BYTE PTR [rax],al
    3fcd:	00 00                	add    BYTE PTR [rax],al
    3fcf:	00 f0                	add    al,dh
    3fd1:	11 00                	adc    DWORD PTR [rax],eax
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004020 <stderr@@GLIBC_2.2.5>:
	...

0000000000004028 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 31 37 75 62    	xor    BYTE PTR [rip+0x62753731],ch        # 62753748 <_end+0x6274f718>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	30 2e                	xor    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 39                	and    BYTE PTR [rcx],bh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	c9                   	leave  
  11:	14 00                	adc    al,0x0
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 02                	add    BYTE PTR [rdx],al
  19:	05 00 00 00 00       	add    eax,0x0
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	cf                   	iret   
   1:	08 00                	or     BYTE PTR [rax],al
   3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	41 04 00             	rex.B add al,0x0
   f:	00 0c 2b             	add    BYTE PTR [rbx+rbp*1],cl
  12:	01 00                	add    DWORD PTR [rax],eax
  14:	00 2f                	add    BYTE PTR [rdi],ch
  16:	00 c9                	add    cl,cl
  18:	14 00                	adc    al,0x0
  1a:	00 00                	add    BYTE PTR [rax],al
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	00 02                	add    BYTE PTR [rdx],al
  20:	05 00 00 00 00       	add    eax,0x0
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	02 e8                	add    ch,al
  2d:	02 00                	add    al,BYTE PTR [rax]
  2f:	00 02                	add    BYTE PTR [rdx],al
  31:	d1 17                	rcl    DWORD PTR [rdi],1
  33:	37                   	(bad)  
  34:	00 00                	add    BYTE PTR [rax],al
  36:	00 03                	add    BYTE PTR [rbx],al
  38:	08 07                	or     BYTE PTR [rdi],al
  3a:	74 00                	je     3c <_init-0xfc4>
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
  41:	79 00                	jns    43 <_init-0xfbd>
  43:	00 00                	add    BYTE PTR [rax],al
  45:	04 08                	add    al,0x8
  47:	03 01                	add    eax,DWORD PTR [rcx]
  49:	08 5f 03             	or     BYTE PTR [rdi+0x3],bl
  4c:	00 00                	add    BYTE PTR [rax],al
  4e:	03 02                	add    eax,DWORD PTR [rdx]
  50:	07                   	(bad)  
  51:	ca 01 00             	retf   0x1
  54:	00 03                	add    BYTE PTR [rbx],al
  56:	01 06                	add    DWORD PTR [rsi],eax
  58:	61                   	(bad)  
  59:	03 00                	add    eax,DWORD PTR [rax]
  5b:	00 02                	add    BYTE PTR [rdx],al
  5d:	45 00 00             	add    BYTE PTR [r8],r8b
  60:	00 03                	add    BYTE PTR [rbx],al
  62:	26 17                	es (bad) 
  64:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
  67:	00 03                	add    BYTE PTR [rbx],al
  69:	02 05 81 03 00 00    	add    al,BYTE PTR [rip+0x381]        # 3f0 <_init-0xc10>
  6f:	02 36                	add    dh,BYTE PTR [rsi]
  71:	04 00                	add    al,0x0
  73:	00 03                	add    BYTE PTR [rbx],al
  75:	28 1c 4e             	sub    BYTE PTR [rsi+rcx*2],bl
  78:	00 00                	add    BYTE PTR [rax],al
  7a:	00 05 04 05 69 6e    	add    BYTE PTR [rip+0x6e690504],al        # 6e690584 <_end+0x6e68c554>
  80:	74 00                	je     82 <_init-0xf7e>
  82:	02 59 01             	add    bl,BYTE PTR [rcx+0x1]
  85:	00 00                	add    BYTE PTR [rax],al
  87:	03 2a                	add    ebp,DWORD PTR [rdx]
  89:	16                   	(bad)  
  8a:	3e 00 00             	add    BYTE PTR ds:[rax],al
  8d:	00 03                	add    BYTE PTR [rbx],al
  8f:	08 05 a7 00 00 00    	or     BYTE PTR [rip+0xa7],al        # 13c <_init-0xec4>
  95:	02 8a 02 00 00 03    	add    cl,BYTE PTR [rdx+0x3000002]
  9b:	91                   	xchg   ecx,eax
  9c:	19 37                	sbb    DWORD PTR [rdi],esi
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	00 02                	add    BYTE PTR [rdx],al
  a2:	d5                   	(bad)  
  a3:	04 00                	add    al,0x0
  a5:	00 03                	add    BYTE PTR [rbx],al
  a7:	92                   	xchg   edx,eax
  a8:	19 3e                	sbb    DWORD PTR [rsi],edi
  aa:	00 00                	add    BYTE PTR [rax],al
  ac:	00 02                	add    BYTE PTR [rdx],al
  ae:	08 00                	or     BYTE PTR [rax],al
  b0:	00 00                	add    BYTE PTR [rax],al
  b2:	03 93 19 3e 00 00    	add    edx,DWORD PTR [rbx+0x3e19]
  b8:	00 02                	add    BYTE PTR [rdx],al
  ba:	ec                   	in     al,dx
  bb:	03 00                	add    eax,DWORD PTR [rax]
  bd:	00 03                	add    BYTE PTR [rbx],al
  bf:	94                   	xchg   esp,eax
  c0:	19 37                	sbb    DWORD PTR [rdi],esi
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	00 02                	add    BYTE PTR [rdx],al
  c6:	b7 00                	mov    bh,0x0
  c8:	00 00                	add    BYTE PTR [rax],al
  ca:	03 96 1a 3e 00 00    	add    edx,DWORD PTR [rsi+0x3e1a]
  d0:	00 02                	add    BYTE PTR [rdx],al
  d2:	0b 02                	or     eax,DWORD PTR [rdx]
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	03 97 1b 37 00 00    	add    edx,DWORD PTR [rdi+0x371b]
  dc:	00 02                	add    BYTE PTR [rdx],al
  de:	00 00                	add    BYTE PTR [rax],al
  e0:	00 00                	add    BYTE PTR [rax],al
  e2:	03 98 19 8e 00 00    	add    ebx,DWORD PTR [rax+0x8e19]
  e8:	00 02                	add    BYTE PTR [rdx],al
  ea:	dd 04 00             	fld    QWORD PTR [rax+rax*1]
  ed:	00 03                	add    BYTE PTR [rbx],al
  ef:	99                   	cdq    
  f0:	1b 8e 00 00 00 02    	sbb    ecx,DWORD PTR [rsi+0x2000000]
  f6:	1b 05 00 00 03 a0    	sbb    eax,DWORD PTR [rip+0xffffffffa0030000]        # ffffffffa00300fc <_end+0xffffffffa002c0cc>
  fc:	1a 8e 00 00 00 02    	sbb    cl,BYTE PTR [rsi+0x2000000]
 102:	e3 02                	jrcxz  106 <_init-0xefa>
 104:	00 00                	add    BYTE PTR [rax],al
 106:	03 ae 1d 8e 00 00    	add    ebp,DWORD PTR [rsi+0x8e1d]
 10c:	00 02                	add    BYTE PTR [rdx],al
 10e:	d5                   	(bad)  
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	00 03                	add    BYTE PTR [rbx],al
 113:	b3 1c                	mov    bl,0x1c
 115:	8e 00                	mov    es,WORD PTR [rax]
 117:	00 00                	add    BYTE PTR [rax],al
 119:	02 99 02 00 00 03    	add    bl,BYTE PTR [rcx+0x3000002]
 11f:	c4 21 8e 00          	(bad)
 123:	00 00                	add    BYTE PTR [rax],al
 125:	06                   	(bad)  
 126:	08 2b                	or     BYTE PTR [rbx],ch
 128:	01 00                	add    DWORD PTR [rax],eax
 12a:	00 03                	add    BYTE PTR [rbx],al
 12c:	01 06                	add    DWORD PTR [rsi],eax
 12e:	68 03 00 00 07       	push   0x7000003
 133:	2b 01                	sub    eax,DWORD PTR [rcx]
 135:	00 00                	add    BYTE PTR [rax],al
 137:	08 da                	or     dl,bl
 139:	02 00                	add    al,BYTE PTR [rax]
 13b:	00 d8                	add    al,bl
 13d:	04 31                	add    al,0x31
 13f:	08 be 02 00 00 09    	or     BYTE PTR [rsi+0x9000002],bh
 145:	ec                   	in     al,dx
 146:	00 00                	add    BYTE PTR [rax],al
 148:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
 14b:	07                   	(bad)  
 14c:	7b 00                	jnp    14e <_init-0xeb2>
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	00 09                	add    BYTE PTR [rcx],cl
 152:	10 00                	adc    BYTE PTR [rax],al
 154:	00 00                	add    BYTE PTR [rax],al
 156:	04 36                	add    al,0x36
 158:	09 25 01 00 00 08    	or     DWORD PTR [rip+0x8000001],esp        # 800015f <_end+0x7ffc12f>
 15e:	09 c8                	or     eax,ecx
 160:	00 00                	add    BYTE PTR [rax],al
 162:	00 04 37             	add    BYTE PTR [rdi+rsi*1],al
 165:	09 25 01 00 00 10    	or     DWORD PTR [rip+0x10000001],esp        # 1000016c <_end+0xfffc13c>
 16b:	09 e7                	or     edi,esp
 16d:	04 00                	add    al,0x0
 16f:	00 04 38             	add    BYTE PTR [rax+rdi*1],al
 172:	09 25 01 00 00 18    	or     DWORD PTR [rip+0x18000001],esp        # 18000179 <_end+0x17ffc149>
 178:	09 d4                	or     esp,edx
 17a:	05 00 00 04 39       	add    eax,0x39040000
 17f:	09 25 01 00 00 20    	or     DWORD PTR [rip+0x20000001],esp        # 20000186 <_end+0x1fffc156>
 185:	09 b3 01 00 00 04    	or     DWORD PTR [rbx+0x4000001],esi
 18b:	3a 09                	cmp    cl,BYTE PTR [rcx]
 18d:	25 01 00 00 28       	and    eax,0x28000001
 192:	09 ab 02 00 00 04    	or     DWORD PTR [rbx+0x4000002],ebp
 198:	3b 09                	cmp    ecx,DWORD PTR [rcx]
 19a:	25 01 00 00 30       	and    eax,0x30000001
 19f:	09 54 00 00          	or     DWORD PTR [rax+rax*1+0x0],edx
 1a3:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
 1a6:	09 25 01 00 00 38    	or     DWORD PTR [rip+0x38000001],esp        # 380001ad <_end+0x37ffc17d>
 1ac:	09 f3                	or     ebx,esi
 1ae:	00 00                	add    BYTE PTR [rax],al
 1b0:	00 04 3d 09 25 01 00 	add    BYTE PTR [rdi*1+0x12509],al
 1b7:	00 40 09             	add    BYTE PTR [rax+0x9],al
 1ba:	fd                   	std    
 1bb:	01 00                	add    DWORD PTR [rax],eax
 1bd:	00 04 40             	add    BYTE PTR [rax+rax*2],al
 1c0:	09 25 01 00 00 48    	or     DWORD PTR [rip+0x48000001],esp        # 480001c7 <_end+0x47ffc197>
 1c6:	09 6f 05             	or     DWORD PTR [rdi+0x5],ebp
 1c9:	00 00                	add    BYTE PTR [rax],al
 1cb:	04 41                	add    al,0x41
 1cd:	09 25 01 00 00 50    	or     DWORD PTR [rip+0x50000001],esp        # 500001d4 <_end+0x4fffc1a4>
 1d3:	09 f5                	or     ebp,esi
 1d5:	04 00                	add    al,0x0
 1d7:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
 1da:	09 25 01 00 00 58    	or     DWORD PTR [rip+0x58000001],esp        # 580001e1 <_end+0x57ffc1b1>
 1e0:	09 d0                	or     eax,edx
 1e2:	03 00                	add    eax,DWORD PTR [rax]
 1e4:	00 04 44             	add    BYTE PTR [rsp+rax*2],al
 1e7:	16                   	(bad)  
 1e8:	d7                   	xlat   BYTE PTR ds:[rbx]
 1e9:	02 00                	add    al,BYTE PTR [rax]
 1eb:	00 60 09             	add    BYTE PTR [rax+0x9],ah
 1ee:	1d 00 00 00 04       	sbb    eax,0x4000000
 1f3:	46 14 dd             	rex.RX adc al,0xdd
 1f6:	02 00                	add    al,BYTE PTR [rax]
 1f8:	00 68 09             	add    BYTE PTR [rax+0x9],ch
 1fb:	c0 00 00             	rol    BYTE PTR [rax],0x0
 1fe:	00 04 48             	add    BYTE PTR [rax+rcx*2],al
 201:	07                   	(bad)  
 202:	7b 00                	jnp    204 <_init-0xdfc>
 204:	00 00                	add    BYTE PTR [rax],al
 206:	70 09                	jo     211 <_init-0xdef>
 208:	40 02 00             	add    al,BYTE PTR [rax]
 20b:	00 04 49             	add    BYTE PTR [rcx+rcx*2],al
 20e:	07                   	(bad)  
 20f:	7b 00                	jnp    211 <_init-0xdef>
 211:	00 00                	add    BYTE PTR [rax],al
 213:	74 09                	je     21e <_init-0xde2>
 215:	35 01 00 00 04       	xor    eax,0x4000001
 21a:	4a 0b dd             	rex.WX or rbx,rbp
 21d:	00 00                	add    BYTE PTR [rax],al
 21f:	00 78 09             	add    BYTE PTR [rax+0x9],bh
 222:	ff 00                	inc    DWORD PTR [rax]
 224:	00 00                	add    BYTE PTR [rax],al
 226:	04 4d                	add    al,0x4d
 228:	12 4e 00             	adc    cl,BYTE PTR [rsi+0x0]
 22b:	00 00                	add    BYTE PTR [rax],al
 22d:	80 09 ab             	or     BYTE PTR [rcx],0xab
 230:	03 00                	add    eax,DWORD PTR [rax]
 232:	00 04 4e             	add    BYTE PTR [rsi+rcx*2],al
 235:	0f 55 00             	andnps xmm0,XMMWORD PTR [rax]
 238:	00 00                	add    BYTE PTR [rax],al
 23a:	82                   	(bad)  
 23b:	09 3b                	or     DWORD PTR [rbx],edi
 23d:	00 00                	add    BYTE PTR [rax],al
 23f:	00 04 4f             	add    BYTE PTR [rdi+rcx*2],al
 242:	08 e3                	or     bl,ah
 244:	02 00                	add    al,BYTE PTR [rax]
 246:	00 83 09 3a 02 00    	add    BYTE PTR [rbx+0x23a09],al
 24c:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
 24f:	0f f3 02             	psllq  mm0,QWORD PTR [rdx]
 252:	00 00                	add    BYTE PTR [rax],al
 254:	88 09                	mov    BYTE PTR [rcx],cl
 256:	39 01                	cmp    DWORD PTR [rcx],eax
 258:	00 00                	add    BYTE PTR [rax],al
 25a:	04 59                	add    al,0x59
 25c:	0d e9 00 00 00       	or     eax,0xe9
 261:	90                   	nop
 262:	09 1a                	or     DWORD PTR [rdx],ebx
 264:	01 00                	add    DWORD PTR [rax],eax
 266:	00 04 5b             	add    BYTE PTR [rbx+rbx*2],al
 269:	17                   	(bad)  
 26a:	fe 02                	inc    BYTE PTR [rdx]
 26c:	00 00                	add    BYTE PTR [rax],al
 26e:	98                   	cwde   
 26f:	09 b5 05 00 00 04    	or     DWORD PTR [rbp+0x4000005],esi
 275:	5c                   	pop    rsp
 276:	19 09                	sbb    DWORD PTR [rcx],ecx
 278:	03 00                	add    eax,DWORD PTR [rax]
 27a:	00 a0 09 94 05 00    	add    BYTE PTR [rax+0x59409],ah
 280:	00 04 5d 14 dd 02 00 	add    BYTE PTR [rbx*2+0x2dd14],al
 287:	00 a8 09 9f 01 00    	add    BYTE PTR [rax+0x19f09],ch
 28d:	00 04 5e             	add    BYTE PTR [rsi+rbx*2],al
 290:	09 45 00             	or     DWORD PTR [rbp+0x0],eax
 293:	00 00                	add    BYTE PTR [rax],al
 295:	b0 09                	mov    al,0x9
 297:	14 05                	adc    al,0x5
 299:	00 00                	add    BYTE PTR [rax],al
 29b:	04 5f                	add    al,0x5f
 29d:	0a 2b                	or     ch,BYTE PTR [rbx]
 29f:	00 00                	add    BYTE PTR [rax],al
 2a1:	00 b8 09 60 02 00    	add    BYTE PTR [rax+0x26009],bh
 2a7:	00 04 60             	add    BYTE PTR [rax+riz*2],al
 2aa:	07                   	(bad)  
 2ab:	7b 00                	jnp    2ad <_init-0xd53>
 2ad:	00 00                	add    BYTE PTR [rax],al
 2af:	c0 09 30             	ror    BYTE PTR [rcx],0x30
 2b2:	05 00 00 04 62       	add    eax,0x62040000
 2b7:	08 0f                	or     BYTE PTR [rdi],cl
 2b9:	03 00                	add    eax,DWORD PTR [rax]
 2bb:	00 c4                	add    ah,al
 2bd:	00 02                	add    BYTE PTR [rdx],al
 2bf:	de 02                	fiadd  WORD PTR [rdx]
 2c1:	00 00                	add    BYTE PTR [rax],al
 2c3:	05 07 19 37 01       	add    eax,0x1371907
 2c8:	00 00                	add    BYTE PTR [rax],al
 2ca:	0a c3                	or     al,bl
 2cc:	02 00                	add    al,BYTE PTR [rax]
 2ce:	00 04 2b             	add    BYTE PTR [rbx+rbp*1],al
 2d1:	0e                   	(bad)  
 2d2:	0b 84 01 00 00 06 08 	or     eax,DWORD PTR [rcx+rax*1+0x8060000]
 2d9:	d2 02                	rol    BYTE PTR [rdx],cl
 2db:	00 00                	add    BYTE PTR [rax],al
 2dd:	06                   	(bad)  
 2de:	08 37                	or     BYTE PTR [rdi],dh
 2e0:	01 00                	add    DWORD PTR [rax],eax
 2e2:	00 0c 2b             	add    BYTE PTR [rbx+rbp*1],cl
 2e5:	01 00                	add    DWORD PTR [rax],eax
 2e7:	00 f3                	add    bl,dh
 2e9:	02 00                	add    al,BYTE PTR [rax]
 2eb:	00 0d 37 00 00 00    	add    BYTE PTR [rip+0x37],cl        # 328 <_init-0xcd8>
 2f1:	00 00                	add    BYTE PTR [rax],al
 2f3:	06                   	(bad)  
 2f4:	08 ca                	or     dl,cl
 2f6:	02 00                	add    al,BYTE PTR [rax]
 2f8:	00 0b                	add    BYTE PTR [rbx],cl
 2fa:	17                   	(bad)  
 2fb:	01 00                	add    DWORD PTR [rax],eax
 2fd:	00 06                	add    BYTE PTR [rsi],al
 2ff:	08 f9                	or     cl,bh
 301:	02 00                	add    al,BYTE PTR [rax]
 303:	00 0b                	add    BYTE PTR [rbx],cl
 305:	b2 05                	mov    dl,0x5
 307:	00 00                	add    BYTE PTR [rax],al
 309:	06                   	(bad)  
 30a:	08 04 03             	or     BYTE PTR [rbx+rax*1],al
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	0c 2b                	or     al,0x2b
 311:	01 00                	add    DWORD PTR [rax],eax
 313:	00 1f                	add    BYTE PTR [rdi],bl
 315:	03 00                	add    eax,DWORD PTR [rax]
 317:	00 0d 37 00 00 00    	add    BYTE PTR [rip+0x37],cl        # 354 <_init-0xcac>
 31d:	13 00                	adc    eax,DWORD PTR [rax]
 31f:	0e                   	(bad)  
 320:	15 02 00 00 06       	adc    eax,0x6000002
 325:	89 0e                	mov    DWORD PTR [rsi],ecx
 327:	2b 03                	sub    eax,DWORD PTR [rbx]
 329:	00 00                	add    BYTE PTR [rax],al
 32b:	06                   	(bad)  
 32c:	08 be 02 00 00 0e    	or     BYTE PTR [rsi+0xe000002],bh
 332:	48 02 00             	rex.W add al,BYTE PTR [rax]
 335:	00 06                	add    BYTE PTR [rsi],al
 337:	8a 0e                	mov    cl,BYTE PTR [rsi]
 339:	2b 03                	sub    eax,DWORD PTR [rbx]
 33b:	00 00                	add    BYTE PTR [rax],al
 33d:	0e                   	(bad)  
 33e:	39 05 00 00 06 8b    	cmp    DWORD PTR [rip+0xffffffff8b060000],eax        # ffffffff8b060344 <_end+0xffffffff8b05c314>
 344:	0e                   	(bad)  
 345:	2b 03                	sub    eax,DWORD PTR [rbx]
 347:	00 00                	add    BYTE PTR [rax],al
 349:	0e                   	(bad)  
 34a:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 34d:	00 07                	add    BYTE PTR [rdi],al
 34f:	1a 0c 7b             	sbb    cl,BYTE PTR [rbx+rdi*2]
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 0c 6b             	add    BYTE PTR [rbx+rbp*2],cl
 357:	03 00                	add    eax,DWORD PTR [rax]
 359:	00 60 03             	add    BYTE PTR [rax+0x3],ah
 35c:	00 00                	add    BYTE PTR [rax],al
 35e:	0f 00 07             	sldt   WORD PTR [rdi]
 361:	55                   	push   rbp
 362:	03 00                	add    eax,DWORD PTR [rax]
 364:	00 06                	add    BYTE PTR [rsi],al
 366:	08 32                	or     BYTE PTR [rdx],dh
 368:	01 00                	add    DWORD PTR [rax],eax
 36a:	00 07                	add    BYTE PTR [rdi],al
 36c:	65 03 00             	add    eax,DWORD PTR gs:[rax]
 36f:	00 0e                	add    BYTE PTR [rsi],cl
 371:	16                   	(bad)  
 372:	03 00                	add    eax,DWORD PTR [rax]
 374:	00 07                	add    BYTE PTR [rdi],al
 376:	1b 1a                	sbb    ebx,DWORD PTR [rdx]
 378:	60                   	(bad)  
 379:	03 00                	add    eax,DWORD PTR [rax]
 37b:	00 10                	add    BYTE PTR [rax],dl
 37d:	ef                   	out    dx,eax
 37e:	02 00                	add    al,BYTE PTR [rax]
 380:	00 08                	add    BYTE PTR [rax],cl
 382:	1f                   	(bad)  
 383:	02 0f                	add    cl,BYTE PTR [rdi]
 385:	89 03                	mov    DWORD PTR [rbx],eax
 387:	00 00                	add    BYTE PTR [rax],al
 389:	06                   	(bad)  
 38a:	08 25 01 00 00 0e    	or     BYTE PTR [rip+0xe000001],ah        # e000391 <_end+0xdffc361>
 390:	71 02                	jno    394 <_init-0xc6c>
 392:	00 00                	add    BYTE PTR [rax],al
 394:	09 24 0e             	or     DWORD PTR [rsi+rcx*1],esp
 397:	25 01 00 00 0e       	and    eax,0xe000001
 39c:	92                   	xchg   edx,eax
 39d:	02 00                	add    al,BYTE PTR [rax]
 39f:	00 09                	add    BYTE PTR [rcx],cl
 3a1:	32 0c 7b             	xor    cl,BYTE PTR [rbx+rdi*2]
 3a4:	00 00                	add    BYTE PTR [rax],al
 3a6:	00 0e                	add    BYTE PTR [rsi],cl
 3a8:	ce                   	(bad)  
 3a9:	04 00                	add    al,0x0
 3ab:	00 09                	add    BYTE PTR [rcx],cl
 3ad:	37                   	(bad)  
 3ae:	0c 7b                	or     al,0x7b
 3b0:	00 00                	add    BYTE PTR [rax],al
 3b2:	00 0e                	add    BYTE PTR [rsi],cl
 3b4:	f4                   	hlt    
 3b5:	03 00                	add    eax,DWORD PTR [rax]
 3b7:	00 09                	add    BYTE PTR [rcx],cl
 3b9:	3b 0c 7b             	cmp    ecx,DWORD PTR [rbx+rdi*2]
 3bc:	00 00                	add    BYTE PTR [rax],al
 3be:	00 03                	add    BYTE PTR [rbx],al
 3c0:	08 05 a2 00 00 00    	or     BYTE PTR [rip+0xa2],al        # 468 <_init-0xb98>
 3c6:	08 a2 03 00 00 10    	or     BYTE PTR [rdx+0x10000003],ah
 3cc:	0a 0a                	or     cl,BYTE PTR [rdx]
 3ce:	08 ee                	or     dh,ch
 3d0:	03 00                	add    eax,DWORD PTR [rax]
 3d2:	00 09                	add    BYTE PTR [rcx],cl
 3d4:	27                   	(bad)  
 3d5:	04 00                	add    al,0x0
 3d7:	00 0a                	add    BYTE PTR [rdx],cl
 3d9:	0c 0c                	or     al,0xc
 3db:	f5                   	cmc    
 3dc:	00 00                	add    BYTE PTR [rax],al
 3de:	00 00                	add    BYTE PTR [rax],al
 3e0:	09 78 02             	or     DWORD PTR [rax+0x2],edi
 3e3:	00 00                	add    BYTE PTR [rax],al
 3e5:	0a 10                	or     dl,BYTE PTR [rax]
 3e7:	15 19 01 00 00       	adc    eax,0x119
 3ec:	08 00                	or     BYTE PTR [rax],al
 3ee:	03 08                	add    ecx,DWORD PTR [rax]
 3f0:	07                   	(bad)  
 3f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	00 02                	add    BYTE PTR [rdx],al
 3f6:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 3f9:	00 0b                	add    BYTE PTR [rbx],cl
 3fb:	18 13                	sbb    BYTE PTR [rbx],dl
 3fd:	5c                   	pop    rsp
 3fe:	00 00                	add    BYTE PTR [rax],al
 400:	00 02                	add    BYTE PTR [rdx],al
 402:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
 405:	00 0b                	add    BYTE PTR [rbx],cl
 407:	19 14 6f             	sbb    DWORD PTR [rdi+rbp*2],edx
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	00 02                	add    BYTE PTR [rdx],al
 40e:	5b                   	pop    rbx
 40f:	01 00                	add    DWORD PTR [rax],eax
 411:	00 0b                	add    BYTE PTR [rbx],cl
 413:	1a 14 82             	sbb    dl,BYTE PTR [rdx+rax*4]
 416:	00 00                	add    BYTE PTR [rax],al
 418:	00 11                	add    BYTE PTR [rcx],dl
 41a:	37                   	(bad)  
 41b:	03 00                	add    eax,DWORD PTR [rax]
 41d:	00 07                	add    BYTE PTR [rdi],al
 41f:	04 3e                	add    al,0x3e
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 11                	add    BYTE PTR [rcx],dl
 425:	18 06                	sbb    BYTE PTR [rsi],al
 427:	66 04 00             	data16 add al,0x0
 42a:	00 12                	add    BYTE PTR [rdx],dl
 42c:	0b 01                	or     eax,DWORD PTR [rcx]
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	01 12                	add    DWORD PTR [rdx],edx
 432:	f2 01 00             	repnz add DWORD PTR [rax],eax
 435:	00 02                	add    BYTE PTR [rdx],al
 437:	12 a2 05 00 00 03    	adc    ah,BYTE PTR [rdx+0x3000005]
 43d:	12 8f 01 00 00 04    	adc    cl,BYTE PTR [rdi+0x4000001]
 443:	12 c0                	adc    al,al
 445:	05 00 00 05 12       	add    eax,0x12050000
 44a:	f9                   	stc    
 44b:	02 00                	add    al,BYTE PTR [rax]
 44d:	00 06                	add    BYTE PTR [rsi],al
 44f:	12 d9                	adc    bl,cl
 451:	03 00                	add    eax,DWORD PTR [rax]
 453:	00 0a                	add    BYTE PTR [rdx],cl
 455:	13 45 05             	adc    eax,DWORD PTR [rbp+0x5]
 458:	00 00                	add    BYTE PTR [rax],al
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	08 00                	or     BYTE PTR [rax],al
 45e:	14 61                	adc    al,0x61
 460:	00 00                	add    BYTE PTR [rax],al
 462:	00 00                	add    BYTE PTR [rax],al
 464:	08 00                	or     BYTE PTR [rax],al
 466:	02 24 05 00 00 0c 1c 	add    ah,BYTE PTR [rax*1+0x1c0c0000]
 46d:	1c 4e                	sbb    al,0x4e
 46f:	00 00                	add    BYTE PTR [rax],al
 471:	00 08                	add    BYTE PTR [rax],cl
 473:	52                   	push   rdx
 474:	05 00 00 10 0d       	add    eax,0xd100000
 479:	b2 08                	mov    dl,0x8
 47b:	9a                   	(bad)  
 47c:	04 00                	add    al,0x0
 47e:	00 09                	add    BYTE PTR [rcx],cl
 480:	0c 03                	or     al,0x3
 482:	00 00                	add    BYTE PTR [rax],al
 484:	0d b4 05 66 04       	or     eax,0x46605b4
 489:	00 00                	add    BYTE PTR [rax],al
 48b:	00 09                	add    BYTE PTR [rcx],cl
 48d:	8c 05 00 00 0d b5    	mov    WORD PTR [rip+0xffffffffb50d0000],es        # ffffffffb50d0493 <_end+0xffffffffb50cc463>
 493:	0a 9a 04 00 00 02    	or     bl,BYTE PTR [rdx+0x2000004]
 499:	00 0c 2b             	add    BYTE PTR [rbx+rbp*1],cl
 49c:	01 00                	add    DWORD PTR [rax],eax
 49e:	00 aa 04 00 00 0d    	add    BYTE PTR [rdx+0xd000004],ch
 4a4:	37                   	(bad)  
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 0d 00 02 93 00    	add    BYTE PTR [rip+0x930200],cl        # 9306ad <_end+0x92c67d>
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	0e                   	(bad)  
 4b0:	1e                   	(bad)  
 4b1:	12 0d 04 00 00 08    	adc    cl,BYTE PTR [rip+0x8000004]        # 80004bb <_end+0x7ffc48b>
 4b7:	de 01                	fiadd  WORD PTR [rcx]
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	04 0e                	add    al,0xe
 4bd:	1f                   	(bad)  
 4be:	08 d1                	or     cl,dl
 4c0:	04 00                	add    al,0x0
 4c2:	00 09                	add    BYTE PTR [rcx],cl
 4c4:	98                   	cwde   
 4c5:	01 00                	add    DWORD PTR [rax],eax
 4c7:	00 0e                	add    BYTE PTR [rsi],cl
 4c9:	21 0f                	and    DWORD PTR [rdi],ecx
 4cb:	aa                   	stos   BYTE PTR es:[rdi],al
 4cc:	04 00                	add    al,0x0
 4ce:	00 00                	add    BYTE PTR [rax],al
 4d0:	00 02                	add    BYTE PTR [rdx],al
 4d2:	e3 05                	jrcxz  4d9 <_init-0xb27>
 4d4:	00 00                	add    BYTE PTR [rax],al
 4d6:	0e                   	(bad)  
 4d7:	77 12                	ja     4eb <_init-0xb15>
 4d9:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
 4dc:	00 15 10 0e d6 05    	add    BYTE PTR [rip+0x5d60e10],dl        # 5d612f2 <_end+0x5d5d2c2>
 4e2:	0b 05 00 00 16 6d    	or     eax,DWORD PTR [rip+0x6d160000]        # 6d1604e8 <_end+0x6d15c4b8>
 4e8:	03 00                	add    eax,DWORD PTR [rax]
 4ea:	00 0e                	add    BYTE PTR [rsi],cl
 4ec:	d8 0a                	fmul   DWORD PTR [rdx]
 4ee:	0b 05 00 00 16 96    	or     eax,DWORD PTR [rip+0xffffffff96160000]        # ffffffff961604f4 <_end+0xffffffff9615c4c4>
 4f4:	03 00                	add    eax,DWORD PTR [rax]
 4f6:	00 0e                	add    BYTE PTR [rsi],cl
 4f8:	d9 0b                	(bad)  [rbx]
 4fa:	1b 05 00 00 16 e0    	sbb    eax,DWORD PTR [rip+0xffffffffe0160000]        # ffffffffe0160500 <_end+0xffffffffe015c4d0>
 500:	00 00                	add    BYTE PTR [rax],al
 502:	00 0e                	add    BYTE PTR [rsi],cl
 504:	da 0b                	fimul  DWORD PTR [rbx]
 506:	2b 05 00 00 00 0c    	sub    eax,DWORD PTR [rip+0xc000000]        # c00050c <_end+0xbffc4dc>
 50c:	f5                   	cmc    
 50d:	03 00                	add    eax,DWORD PTR [rax]
 50f:	00 1b                	add    BYTE PTR [rbx],bl
 511:	05 00 00 0d 37       	add    eax,0x370d0000
 516:	00 00                	add    BYTE PTR [rax],al
 518:	00 0f                	add    BYTE PTR [rdi],cl
 51a:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
 51d:	04 00                	add    al,0x0
 51f:	00 2b                	add    BYTE PTR [rbx],ch
 521:	05 00 00 0d 37       	add    eax,0x370d0000
 526:	00 00                	add    BYTE PTR [rax],al
 528:	00 07                	add    BYTE PTR [rdi],al
 52a:	00 0c 0d 04 00 00 3b 	add    BYTE PTR [rcx*1+0x3b000004],cl
 531:	05 00 00 0d 37       	add    eax,0x370d0000
 536:	00 00                	add    BYTE PTR [rax],al
 538:	00 03                	add    BYTE PTR [rbx],al
 53a:	00 08                	add    BYTE PTR [rax],cl
 53c:	fb                   	sti    
 53d:	03 00                	add    eax,DWORD PTR [rax]
 53f:	00 10                	add    BYTE PTR [rax],dl
 541:	0e                   	(bad)  
 542:	d4                   	(bad)  
 543:	08 56 05             	or     BYTE PTR [rsi+0x5],dl
 546:	00 00                	add    BYTE PTR [rax],al
 548:	09 2c 00             	or     DWORD PTR [rax+rax*1],ebp
 54b:	00 00                	add    BYTE PTR [rax],al
 54d:	0e                   	(bad)  
 54e:	db 09                	fisttp DWORD PTR [rcx]
 550:	dd 04 00             	fld    QWORD PTR [rax+rax*1]
 553:	00 00                	add    BYTE PTR [rax],al
 555:	00 07                	add    BYTE PTR [rdi],al
 557:	3b 05 00 00 0e ce    	cmp    eax,DWORD PTR [rip+0xffffffffce0e0000]        # ffffffffce0e055d <_end+0xffffffffce0dc52d>
 55d:	02 00                	add    al,BYTE PTR [rax]
 55f:	00 0e                	add    BYTE PTR [rsi],cl
 561:	e4 1e                	in     al,0x1e
 563:	56                   	push   rsi
 564:	05 00 00 0e 41       	add    eax,0x410e0000
 569:	01 00                	add    DWORD PTR [rax],eax
 56b:	00 0e                	add    BYTE PTR [rsi],cl
 56d:	e5 1e                	in     eax,0x1e
 56f:	56                   	push   rsi
 570:	05 00 00 08 63       	add    eax,0x63080000
 575:	05 00 00 10 0e       	add    eax,0xe100000
 57a:	ee                   	out    dx,al
 57b:	08 b5 05 00 00 09    	or     BYTE PTR [rbp+0x9000005],dh
 581:	66 02 00             	data16 add al,BYTE PTR [rax]
 584:	00 0e                	add    BYTE PTR [rsi],cl
 586:	f0 05 66 04 00 00    	lock add eax,0x466
 58c:	00 09                	add    BYTE PTR [rcx],cl
 58e:	03 03                	add    eax,DWORD PTR [rbx]
 590:	00 00                	add    BYTE PTR [rax],al
 592:	0e                   	(bad)  
 593:	f1                   	icebp  
 594:	0f d1 04 00          	psrlw  mm0,QWORD PTR [rax+rax*1]
 598:	00 02                	add    BYTE PTR [rdx],al
 59a:	09 dd                	or     ebp,ebx
 59c:	01 00                	add    DWORD PTR [rax],eax
 59e:	00 0e                	add    BYTE PTR [rsi],cl
 5a0:	f2 14 b6             	repnz adc al,0xb6
 5a3:	04 00                	add    al,0x0
 5a5:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
 5a8:	6a 01                	push   0x1
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	0e                   	(bad)  
 5ad:	f5                   	cmc    
 5ae:	13 b5 05 00 00 08    	adc    esi,DWORD PTR [rbp+0x8000005]
 5b4:	00 0c 47             	add    BYTE PTR [rdi+rax*2],cl
 5b7:	00 00                	add    BYTE PTR [rax],al
 5b9:	00 c5                	add    ch,al
 5bb:	05 00 00 0d 37       	add    eax,0x370d0000
 5c0:	00 00                	add    BYTE PTR [rax],al
 5c2:	00 07                	add    BYTE PTR [rdi],al
 5c4:	00 08                	add    BYTE PTR [rax],cl
 5c6:	2e 04 00             	cs add al,0x0
 5c9:	00 20                	add    BYTE PTR [rax],ah
 5cb:	0f 62 08             	punpckldq mm1,DWORD PTR [rax]
 5ce:	14 06                	adc    al,0x6
 5d0:	00 00                	add    BYTE PTR [rax],al
 5d2:	09 ac 01 00 00 0f 64 	or     DWORD PTR [rcx+rax*1+0x640f0000],ebp
 5d9:	09 25 01 00 00 00    	or     DWORD PTR [rip+0x1],esp        # 5e0 <_init-0xa20>
 5df:	09 b9 02 00 00 0f    	or     DWORD PTR [rcx+0xf000002],edi
 5e5:	65 0a 89 03 00 00 08 	or     cl,BYTE PTR gs:[rcx+0x8000003]
 5ec:	09 1b                	or     DWORD PTR [rbx],ebx
 5ee:	02 00                	add    al,BYTE PTR [rax]
 5f0:	00 0f                	add    BYTE PTR [rdi],cl
 5f2:	66 07                	data16 (bad) 
 5f4:	7b 00                	jnp    5f6 <_init-0xa0a>
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	10 09                	adc    BYTE PTR [rcx],cl
 5fa:	22 03                	and    al,BYTE PTR [rbx]
 5fc:	00 00                	add    BYTE PTR [rax],al
 5fe:	0f 67 07             	packuswb mm0,QWORD PTR [rdi]
 601:	7b 00                	jnp    603 <_init-0x9fd>
 603:	00 00                	add    BYTE PTR [rax],al
 605:	14 09                	adc    al,0x9
 607:	2b 03                	sub    eax,DWORD PTR [rbx]
 609:	00 00                	add    BYTE PTR [rax],al
 60b:	0f 68 0a             	punpckhbw mm1,QWORD PTR [rdx]
 60e:	89 03                	mov    DWORD PTR [rbx],eax
 610:	00 00                	add    BYTE PTR [rax],al
 612:	18 00                	sbb    BYTE PTR [rax],al
 614:	08 9d 00 00 00 90    	or     BYTE PTR [rbp-0x70000000],bl
 61a:	10 2e                	adc    BYTE PTR [rsi],ch
 61c:	08 e5                	or     ch,ah
 61e:	06                   	(bad)  
 61f:	00 00                	add    BYTE PTR [rax],al
 621:	09 ab 05 00 00 10    	or     DWORD PTR [rbx+0x10000005],ebp
 627:	30 0d 95 00 00 00    	xor    BYTE PTR [rip+0x95],cl        # 6c2 <_init-0x93e>
 62d:	00 09                	add    BYTE PTR [rcx],cl
 62f:	b0 00                	mov    al,0x0
 631:	00 00                	add    BYTE PTR [rax],al
 633:	10 35 0d b9 00 00    	adc    BYTE PTR [rip+0xb90d],dh        # bf46 <_end+0x7f16>
 639:	00 08                	add    BYTE PTR [rax],cl
 63b:	09 56 03             	or     DWORD PTR [rsi+0x3],edx
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	10 3d 0f d1 00 00    	adc    BYTE PTR [rip+0xd10f],bh        # d755 <_end+0x9725>
 646:	00 10                	add    BYTE PTR [rax],dl
 648:	09 5e 02             	or     DWORD PTR [rsi+0x2],ebx
 64b:	00 00                	add    BYTE PTR [rax],al
 64d:	10 3e                	adc    BYTE PTR [rsi],bh
 64f:	0e                   	(bad)  
 650:	c5 00 00             	(bad)
 653:	00 18                	add    BYTE PTR [rax],bl
 655:	09 7d 01             	or     DWORD PTR [rbp+0x1],edi
 658:	00 00                	add    BYTE PTR [rax],al
 65a:	10 40 0d             	adc    BYTE PTR [rax+0xd],al
 65d:	a1 00 00 00 1c 09 02 	movabs eax,ds:0x502091c000000
 664:	05 00 
 666:	00 10                	add    BYTE PTR [rax],dl
 668:	41 0d ad 00 00 00    	rex.B or eax,0xad
 66e:	20 09                	and    BYTE PTR [rcx],cl
 670:	e5 03                	in     eax,0x3
 672:	00 00                	add    BYTE PTR [rax],al
 674:	10 43 09             	adc    BYTE PTR [rbx+0x9],al
 677:	7b 00                	jnp    679 <_init-0x987>
 679:	00 00                	add    BYTE PTR [rax],al
 67b:	24 09                	and    al,0x9
 67d:	14 04                	adc    al,0x4
 67f:	00 00                	add    BYTE PTR [rax],al
 681:	10 45 0d             	adc    BYTE PTR [rbp+0xd],al
 684:	95                   	xchg   ebp,eax
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 28                	add    BYTE PTR [rax],ch
 689:	09 4f 02             	or     DWORD PTR [rdi+0x2],ecx
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	10 4a 0d             	adc    BYTE PTR [rdx+0xd],cl
 691:	dd 00                	fld    QWORD PTR [rax]
 693:	00 00                	add    BYTE PTR [rax],al
 695:	30 09                	xor    BYTE PTR [rcx],cl
 697:	8b 03                	mov    eax,DWORD PTR [rbx]
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	10 4e 11             	adc    BYTE PTR [rsi+0x11],cl
 69e:	01 01                	add    DWORD PTR [rcx],eax
 6a0:	00 00                	add    BYTE PTR [rax],al
 6a2:	38 09                	cmp    BYTE PTR [rcx],cl
 6a4:	73 01                	jae    6a7 <_init-0x959>
 6a6:	00 00                	add    BYTE PTR [rax],al
 6a8:	10 50 10             	adc    BYTE PTR [rax+0x10],dl
 6ab:	0d 01 00 00 40       	or     eax,0x40000001
 6b0:	09 23                	or     DWORD PTR [rbx],esp
 6b2:	01 00                	add    DWORD PTR [rax],eax
 6b4:	00 10                	add    BYTE PTR [rax],dl
 6b6:	5b                   	pop    rbx
 6b7:	15 c6 03 00 00       	adc    eax,0x3c6
 6bc:	48 09 7f 05          	or     QWORD PTR [rdi+0x5],rdi
 6c0:	00 00                	add    BYTE PTR [rax],al
 6c2:	10 5c 15 c6          	adc    BYTE PTR [rbp+rdx*1-0x3a],bl
 6c6:	03 00                	add    eax,DWORD PTR [rax]
 6c8:	00 58 09             	add    BYTE PTR [rax+0x9],bl
 6cb:	24 00                	and    al,0x0
 6cd:	00 00                	add    BYTE PTR [rax],al
 6cf:	10 5d 15             	adc    BYTE PTR [rbp+0x15],bl
 6d2:	c6 03 00             	mov    BYTE PTR [rbx],0x0
 6d5:	00 68 09             	add    BYTE PTR [rax+0x9],ch
 6d8:	45 03 00             	add    r8d,DWORD PTR [r8]
 6db:	00 10                	add    BYTE PTR [rax],dl
 6dd:	6a 17                	push   0x17
 6df:	e5 06                	in     eax,0x6
 6e1:	00 00                	add    BYTE PTR [rax],al
 6e3:	78 00                	js     6e5 <_init-0x91b>
 6e5:	0c 19                	or     al,0x19
 6e7:	01 00                	add    DWORD PTR [rax],eax
 6e9:	00 f5                	add    ch,dh
 6eb:	06                   	(bad)  
 6ec:	00 00                	add    BYTE PTR [rax],al
 6ee:	0d 37 00 00 00       	or     eax,0x37
 6f3:	02 00                	add    al,BYTE PTR [rax]
 6f5:	17                   	(bad)  
 6f6:	cf                   	iret   
 6f7:	05 00 00 01 67       	add    eax,0x67010000
 6fc:	05 7b 00 00 00       	add    eax,0x7b
 701:	91                   	xchg   ecx,eax
 702:	17                   	(bad)  
 703:	00 00                	add    BYTE PTR [rax],al
 705:	00 00                	add    BYTE PTR [rax],al
 707:	00 00                	add    BYTE PTR [rax],al
 709:	3a 02                	cmp    al,BYTE PTR [rdx]
 70b:	00 00                	add    BYTE PTR [rax],al
 70d:	00 00                	add    BYTE PTR [rax],al
 70f:	00 00                	add    BYTE PTR [rax],al
 711:	01 9c c6 07 00 00 18 	add    DWORD PTR [rsi+rax*8+0x18000007],ebx
 718:	87 05 00 00 01 67    	xchg   DWORD PTR [rip+0x67010000],eax        # 6701071e <_end+0x6700c6ee>
 71e:	0e                   	(bad)  
 71f:	7b 00                	jnp    721 <_init-0x8df>
 721:	00 00                	add    BYTE PTR [rax],al
 723:	03 91 8c 7f 18 40    	add    edx,DWORD PTR [rcx+0x40187f8c]
 729:	05 00 00 01 67       	add    eax,0x67010000
 72e:	1b 89 03 00 00 03    	sbb    ecx,DWORD PTR [rcx+0x3000003]
 734:	91                   	xchg   ecx,eax
 735:	80 7f 19 78          	cmp    BYTE PTR [rdi+0x19],0x78
 739:	03 00                	add    eax,DWORD PTR [rax]
 73b:	00 01                	add    BYTE PTR [rcx],al
 73d:	68 07 7b 00 00       	push   0x7b07
 742:	00 03                	add    BYTE PTR [rbx],al
 744:	91                   	xchg   ecx,eax
 745:	a8 7f                	test   al,0x7f
 747:	19 5b 05             	sbb    DWORD PTR [rbx+0x5],ebx
 74a:	00 00                	add    BYTE PTR [rax],al
 74c:	01 69 07             	add    DWORD PTR [rcx+0x7],ebp
 74f:	7b 00                	jnp    751 <_init-0x8af>
 751:	00 00                	add    BYTE PTR [rax],al
 753:	03 91 ac 7f 19 52    	add    edx,DWORD PTR [rcx+0x52197fac]
 759:	01 00                	add    DWORD PTR [rax],eax
 75b:	00 01                	add    BYTE PTR [rcx],al
 75d:	6a 07                	push   0x7
 75f:	7b 00                	jnp    761 <_init-0x89f>
 761:	00 00                	add    BYTE PTR [rax],al
 763:	03 91 a4 7f 19 26    	add    edx,DWORD PTR [rcx+0x26197fa4]
 769:	02 00                	add    al,BYTE PTR [rax]
 76b:	00 01                	add    BYTE PTR [rcx],al
 76d:	6b 07 7b             	imul   eax,DWORD PTR [rdi],0x7b
 770:	00 00                	add    BYTE PTR [rax],al
 772:	00 03                	add    BYTE PTR [rbx],al
 774:	91                   	xchg   ecx,eax
 775:	9c                   	pushf  
 776:	7f 19                	jg     791 <_init-0x86f>
 778:	09 05 00 00 01 6c    	or     DWORD PTR [rip+0x6c010000],eax        # 6c01077e <_end+0x6c00c74e>
 77e:	16                   	(bad)  
 77f:	73 05                	jae    786 <_init-0x87a>
 781:	00 00                	add    BYTE PTR [rax],al
 783:	02 91 40 19 1c 04    	add    dl,BYTE PTR [rcx+0x41c1940]
 789:	00 00                	add    BYTE PTR [rax],al
 78b:	01 6d 16             	add    DWORD PTR [rbp+0x16],ebp
 78e:	73 05                	jae    795 <_init-0x86b>
 790:	00 00                	add    BYTE PTR [rax],al
 792:	02 91 50 19 64 01    	add    dl,BYTE PTR [rcx+0x1641950]
 798:	00 00                	add    BYTE PTR [rax],al
 79a:	01 6e 13             	add    DWORD PTR [rsi+0x13],ebp
 79d:	c6 07 00             	mov    BYTE PTR [rdi],0x0
 7a0:	00 03                	add    BYTE PTR [rbx],al
 7a2:	91                   	xchg   ecx,eax
 7a3:	b0 7f                	mov    al,0x7f
 7a5:	19 80 02 00 00 01    	sbb    DWORD PTR [rax+0x1000002],eax
 7ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7ac:	09 25 01 00 00 03    	or     DWORD PTR [rip+0x3000001],esp        # 30007b3 <_end+0x2ffc783>
 7b2:	91                   	xchg   ecx,eax
 7b3:	b8 7f 19 57 02       	mov    eax,0x257197f
 7b8:	00 00                	add    BYTE PTR [rax],al
 7ba:	01 70 07             	add    DWORD PTR [rax+0x7],esi
 7bd:	7b 00                	jnp    7bf <_init-0x841>
 7bf:	00 00                	add    BYTE PTR [rax],al
 7c1:	03 91 a0 7f 00 06    	add    edx,DWORD PTR [rcx+0x6007fa0]
 7c7:	08 c5                	or     ch,al
 7c9:	05 00 00 1a ba       	add    eax,0xba1a0000
 7ce:	03 00                	add    eax,DWORD PTR [rax]
 7d0:	00 01                	add    BYTE PTR [rcx],al
 7d2:	62                   	(bad)  
 7d3:	06                   	(bad)  
 7d4:	6b 17 00             	imul   edx,DWORD PTR [rdi],0x0
 7d7:	00 00                	add    BYTE PTR [rax],al
 7d9:	00 00                	add    BYTE PTR [rax],al
 7db:	00 26                	add    BYTE PTR [rsi],ah
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 00                	add    BYTE PTR [rax],al
 7e1:	00 00                	add    BYTE PTR [rax],al
 7e3:	00 01                	add    BYTE PTR [rcx],al
 7e5:	9c                   	pushf  
 7e6:	fa                   	cli    
 7e7:	07                   	(bad)  
 7e8:	00 00                	add    BYTE PTR [rax],al
 7ea:	1b 6d 73             	sbb    ebp,DWORD PTR [rbp+0x73]
 7ed:	67 00 01             	add    BYTE PTR [ecx],al
 7f0:	62 12 25 01 00 00    	vpshufb xmm8{k1},xmm27,XMMWORD PTR [r8]
 7f6:	02 91 68 00 1a c0    	add    dl,BYTE PTR [rcx-0x3fe5ff98]
 7fc:	03 00                	add    eax,DWORD PTR [rax]
 7fe:	00 01                	add    BYTE PTR [rcx],al
 800:	5a                   	pop    rdx
 801:	06                   	(bad)  
 802:	38 17                	cmp    BYTE PTR [rdi],dl
 804:	00 00                	add    BYTE PTR [rax],al
 806:	00 00                	add    BYTE PTR [rax],al
 808:	00 00                	add    BYTE PTR [rax],al
 80a:	33 00                	xor    eax,DWORD PTR [rax]
 80c:	00 00                	add    BYTE PTR [rax],al
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	00 00                	add    BYTE PTR [rax],al
 812:	01 9c 37 08 00 00 18 	add    DWORD PTR [rdi+rsi*1+0x18000008],ebx
 819:	5b                   	pop    rbx
 81a:	05 00 00 01 5a       	add    eax,0x5a010000
 81f:	1a 7b 00             	sbb    bh,BYTE PTR [rbx+0x0]
 822:	00 00                	add    BYTE PTR [rax],al
 824:	02 91 6c 18 04 04    	add    dl,BYTE PTR [rcx+0x404186c]
 82a:	00 00                	add    BYTE PTR [rax],al
 82c:	01 5a 29             	add    DWORD PTR [rdx+0x29],ebx
 82f:	25 01 00 00 02       	and    eax,0x2000001
 834:	91                   	xchg   ecx,eax
 835:	60                   	(bad)  
 836:	00 1a                	add    BYTE PTR [rdx],bl
 838:	86 00                	xchg   BYTE PTR [rax],al
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	01 27                	add    DWORD PTR [rdi],esp
 83e:	06                   	(bad)  
 83f:	c9                   	leave  
 840:	14 00                	adc    al,0x0
 842:	00 00                	add    BYTE PTR [rax],al
 844:	00 00                	add    BYTE PTR [rax],al
 846:	00 6f 02             	add    BYTE PTR [rdi+0x2],ch
 849:	00 00                	add    BYTE PTR [rax],al
 84b:	00 00                	add    BYTE PTR [rax],al
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	01 9c c6 08 00 00 18 	add    DWORD PTR [rsi+rax*8+0x18000008],ebx
 856:	5b                   	pop    rbx
 857:	05 00 00 01 27       	add    eax,0x27010000
 85c:	17                   	(bad)  
 85d:	7b 00                	jnp    85f <_init-0x7a1>
 85f:	00 00                	add    BYTE PTR [rax],al
 861:	03 91 cc 7d 18 04    	add    edx,DWORD PTR [rcx+0x4187dcc]
 867:	04 00                	add    al,0x0
 869:	00 01                	add    BYTE PTR [rcx],al
 86b:	27                   	(bad)  
 86c:	26 25 01 00 00 03    	es and eax,0x3000001
 872:	91                   	xchg   ecx,eax
 873:	c0 7d 1c 62          	sar    BYTE PTR [rbp+0x1c],0x62
 877:	75 66                	jne    8df <_init-0x721>
 879:	00 01                	add    BYTE PTR [rcx],al
 87b:	28 08                	sub    BYTE PTR [rax],cl
 87d:	c6                   	(bad)  
 87e:	08 00                	or     BYTE PTR [rax],al
 880:	00 03                	add    BYTE PTR [rbx],al
 882:	91                   	xchg   ecx,eax
 883:	f0 7e 19             	lock jle 89f <_init-0x761>
 886:	34 00                	xor    al,0x0
 888:	00 00                	add    BYTE PTR [rax],al
 88a:	01 29                	add    DWORD PTR [rcx],ebp
 88c:	09 2b                	or     DWORD PTR [rbx],ebp
 88e:	03 00                	add    eax,DWORD PTR [rax]
 890:	00 03                	add    BYTE PTR [rbx],al
 892:	91                   	xchg   ecx,eax
 893:	d8 7d 19             	fdivr  DWORD PTR [rbp+0x19]
 896:	30 02                	xor    BYTE PTR [rdx],al
 898:	00 00                	add    BYTE PTR [rax],al
 89a:	01 2a                	add    DWORD PTR [rdx],ebp
 89c:	07                   	(bad)  
 89d:	7b 00                	jnp    89f <_init-0x761>
 89f:	00 00                	add    BYTE PTR [rax],al
 8a1:	03 91 d4 7d 19 e6    	add    edx,DWORD PTR [rcx-0x19e6822c]
 8a7:	01 00                	add    DWORD PTR [rax],eax
 8a9:	00 01                	add    BYTE PTR [rcx],al
 8ab:	2b 0f                	sub    ecx,DWORD PTR [rdi]
 8ad:	14 06                	adc    al,0x6
 8af:	00 00                	add    BYTE PTR [rax],al
 8b1:	03 91 e0 7d 1d 4f    	add    edx,DWORD PTR [rcx+0x4f1d7de0]
 8b7:	00 00                	add    BYTE PTR [rax],al
 8b9:	00 01                	add    BYTE PTR [rcx],al
 8bb:	53                   	push   rbx
 8bc:	01 f0                	add    eax,esi
 8be:	16                   	(bad)  
 8bf:	00 00                	add    BYTE PTR [rax],al
 8c1:	00 00                	add    BYTE PTR [rax],al
 8c3:	00 00                	add    BYTE PTR [rax],al
 8c5:	00 1e                	add    BYTE PTR [rsi],bl
 8c7:	2b 01                	sub    eax,DWORD PTR [rcx]
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	0d 37 00 00 00       	or     eax,0x37
 8d0:	65 00 00             	add    BYTE PTR gs:[rax],al

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x30ad2e6>
   8:	0e                   	(bad)  
   9:	1b 08                	sbb    ecx,DWORD PTR [rax]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 16                	add    dl,BYTE PTR [rsi]
  15:	00 03                	add    BYTE PTR [rbx],al
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  1c:	39 0b                	cmp    DWORD PTR [rbx],ecx
  1e:	49 13 00             	adc    rax,QWORD PTR [r8]
  21:	00 03                	add    BYTE PTR [rbx],al
  23:	24 00                	and    al,0x0
  25:	0b 0b                	or     ecx,DWORD PTR [rbx]
  27:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  2a:	0e                   	(bad)  
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	04 0f                	add    al,0xf
  2f:	00 0b                	add    BYTE PTR [rbx],cl
  31:	0b 00                	or     eax,DWORD PTR [rax]
  33:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b005d <_end+0xb0ac02d>
  39:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  3c:	08 00                	or     BYTE PTR [rax],al
  3e:	00 06                	add    BYTE PTR [rsi],al
  40:	0f 00 0b             	str    WORD PTR [rbx]
  43:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  46:	00 00                	add    BYTE PTR [rax],al
  48:	07                   	(bad)  
  49:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	08 13                	or     BYTE PTR [rbx],dl
  51:	01 03                	add    DWORD PTR [rbx],eax
  53:	0e                   	(bad)  
  54:	0b 0b                	or     ecx,DWORD PTR [rbx]
  56:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  58:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5a:	39 0b                	cmp    DWORD PTR [rbx],ecx
  5c:	01 13                	add    DWORD PTR [rbx],edx
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0366 <_end+0x3a0dc336>
  66:	0b 3b                	or     edi,DWORD PTR [rbx]
  68:	0b 39                	or     edi,DWORD PTR [rcx]
  6a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  6d:	38 0b                	cmp    BYTE PTR [rbx],cl
  6f:	00 00                	add    BYTE PTR [rax],al
  71:	0a 16                	or     dl,BYTE PTR [rsi]
  73:	00 03                	add    BYTE PTR [rbx],al
  75:	0e                   	(bad)  
  76:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  78:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  7a:	39 0b                	cmp    DWORD PTR [rbx],ecx
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	0b 13                	or     edx,DWORD PTR [rbx]
  80:	00 03                	add    BYTE PTR [rbx],al
  82:	0e                   	(bad)  
  83:	3c 19                	cmp    al,0x19
  85:	00 00                	add    BYTE PTR [rax],al
  87:	0c 01                	or     al,0x1
  89:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
  8c:	01 13                	add    DWORD PTR [rbx],edx
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	0d 21 00 49 13       	or     eax,0x13490021
  95:	2f                   	(bad)  
  96:	0b 00                	or     eax,DWORD PTR [rax]
  98:	00 0e                	add    BYTE PTR [rsi],cl
  9a:	34 00                	xor    al,0x0
  9c:	03 0e                	add    ecx,DWORD PTR [rsi]
  9e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  a2:	39 0b                	cmp    DWORD PTR [rbx],ecx
  a4:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  a7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  aa:	00 00                	add    BYTE PTR [rax],al
  ac:	0f 21 00             	mov    rax,db0
  af:	00 00                	add    BYTE PTR [rax],al
  b1:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
  b4:	03 0e                	add    ecx,DWORD PTR [rsi]
  b6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b8:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490bf7 <_end+0x1348cbc7>
  be:	3f                   	(bad)  
  bf:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	11 04 01             	adc    DWORD PTR [rcx+rax*1],eax
  c7:	03 0e                	add    ecx,DWORD PTR [rsi]
  c9:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
  cc:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  cf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  d3:	39 0b                	cmp    DWORD PTR [rbx],ecx
  d5:	01 13                	add    DWORD PTR [rbx],edx
  d7:	00 00                	add    BYTE PTR [rax],al
  d9:	12 28                	adc    ch,BYTE PTR [rax]
  db:	00 03                	add    BYTE PTR [rbx],al
  dd:	0e                   	(bad)  
  de:	1c 0b                	sbb    al,0xb
  e0:	00 00                	add    BYTE PTR [rax],al
  e2:	13 28                	adc    ebp,DWORD PTR [rax]
  e4:	00 03                	add    BYTE PTR [rbx],al
  e6:	0e                   	(bad)  
  e7:	1c 06                	sbb    al,0x6
  e9:	00 00                	add    BYTE PTR [rax],al
  eb:	14 28                	adc    al,0x28
  ed:	00 03                	add    BYTE PTR [rbx],al
  ef:	0e                   	(bad)  
  f0:	1c 05                	sbb    al,0x5
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	15 17 01 0b 0b       	adc    eax,0xb0b0117
  f9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  fb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  fd:	39 0b                	cmp    DWORD PTR [rbx],ecx
  ff:	01 13                	add    DWORD PTR [rbx],edx
 101:	00 00                	add    BYTE PTR [rax],al
 103:	16                   	(bad)  
 104:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
 109:	0b 3b                	or     edi,DWORD PTR [rbx]
 10b:	0b 39                	or     edi,DWORD PTR [rcx]
 10d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 110:	00 00                	add    BYTE PTR [rax],al
 112:	17                   	(bad)  
 113:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
 116:	19 03                	sbb    DWORD PTR [rbx],eax
 118:	0e                   	(bad)  
 119:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 11b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 11d:	39 0b                	cmp    DWORD PTR [rbx],ecx
 11f:	27                   	(bad)  
 120:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 123:	11 01                	adc    DWORD PTR [rcx],eax
 125:	12 07                	adc    al,BYTE PTR [rdi]
 127:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 12e:	00 00                	add    BYTE PTR [rax],al
 130:	18 05 00 03 0e 3a    	sbb    BYTE PTR [rip+0x3a0e0300],al        # 3a0e0436 <_end+0x3a0dc406>
 136:	0b 3b                	or     edi,DWORD PTR [rbx]
 138:	0b 39                	or     edi,DWORD PTR [rcx]
 13a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 13d:	02 18                	add    bl,BYTE PTR [rax]
 13f:	00 00                	add    BYTE PTR [rax],al
 141:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
 144:	03 0e                	add    ecx,DWORD PTR [rsi]
 146:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 148:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 14a:	39 0b                	cmp    DWORD PTR [rbx],ecx
 14c:	49 13 02             	adc    rax,QWORD PTR [r10]
 14f:	18 00                	sbb    BYTE PTR [rax],al
 151:	00 1a                	add    BYTE PTR [rdx],bl
 153:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
 156:	19 03                	sbb    DWORD PTR [rbx],eax
 158:	0e                   	(bad)  
 159:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 15b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 15d:	39 0b                	cmp    DWORD PTR [rbx],ecx
 15f:	27                   	(bad)  
 160:	19 11                	sbb    DWORD PTR [rcx],edx
 162:	01 12                	add    DWORD PTR [rdx],edx
 164:	07                   	(bad)  
 165:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 16c:	00 00                	add    BYTE PTR [rax],al
 16e:	1b 05 00 03 08 3a    	sbb    eax,DWORD PTR [rip+0x3a080300]        # 3a080474 <_end+0x3a07c444>
 174:	0b 3b                	or     edi,DWORD PTR [rbx]
 176:	0b 39                	or     edi,DWORD PTR [rcx]
 178:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 17b:	02 18                	add    bl,BYTE PTR [rax]
 17d:	00 00                	add    BYTE PTR [rax],al
 17f:	1c 34                	sbb    al,0x34
 181:	00 03                	add    BYTE PTR [rbx],al
 183:	08 3a                	or     BYTE PTR [rdx],bh
 185:	0b 3b                	or     edi,DWORD PTR [rbx]
 187:	0b 39                	or     edi,DWORD PTR [rcx]
 189:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 18c:	02 18                	add    bl,BYTE PTR [rax]
 18e:	00 00                	add    BYTE PTR [rax],al
 190:	1d 0a 00 03 0e       	sbb    eax,0xe03000a
 195:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 197:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 199:	39 0b                	cmp    DWORD PTR [rbx],ecx
 19b:	11 01                	adc    DWORD PTR [rcx],eax
 19d:	00 00                	add    BYTE PTR [rax],al
 19f:	1e                   	(bad)  
 1a0:	01 01                	add    DWORD PTR [rcx],eax
 1a2:	49 13 00             	adc    rax,QWORD PTR [r8]
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	b0 02                	mov    al,0x2
   2:	00 00                	add    BYTE PTR [rax],al
   4:	03 00                	add    eax,DWORD PTR [rax]
   6:	90                   	nop
   7:	01 00                	add    DWORD PTR [rax],eax
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0xf6f>
  1e:	72 2f                	jb     4f <_init-0xfb1>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0xf9e>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0xf98>
  39:	39 2f                	cmp    DWORD PTR [rdi],ebp
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [rdi],ch
  44:	75 73                	jne    b9 <_init-0xf47>
  46:	72 2f                	jb     77 <_init-0xf89>
  48:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4f:	2f                   	(bad)  
  50:	78 38                	js     8a <_init-0xf76>
  52:	36 5f                	ss pop rdi
  54:	36 34 2d             	ss xor al,0x2d
  57:	6c                   	ins    BYTE PTR es:[rdi],dx
  58:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  5f:	75 2f                	jne    90 <_init-0xf70>
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  69:	72 
  6a:	2f                   	(bad)  
  6b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  72:	2f                   	(bad)  
  73:	78 38                	js     ad <_init-0xf53>
  75:	36 5f                	ss pop rdi
  77:	36 34 2d             	ss xor al,0x2d
  7a:	6c                   	ins    BYTE PTR es:[rdi],dx
  7b:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  82:	75 2f                	jne    b3 <_init-0xf4d>
  84:	62                   	(bad)  
  85:	69 74 73 2f 74 79 70 	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65707974
  8c:	65 
  8d:	73 00                	jae    8f <_init-0xf71>
  8f:	2f                   	(bad)  
  90:	75 73                	jne    105 <_init-0xefb>
  92:	72 2f                	jb     c3 <_init-0xf3d>
  94:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  9b:	00 2f                	add    BYTE PTR [rdi],ch
  9d:	75 73                	jne    112 <_init-0xeee>
  9f:	72 2f                	jb     d0 <_init-0xf30>
  a1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a8:	2f                   	(bad)  
  a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  aa:	65 74 69             	gs je  116 <_init-0xeea>
  ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  ae:	65 74 00             	gs je  b1 <_init-0xf4f>
  b1:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
  b4:	67 2d 72 6f 69 2e    	addr32 sub eax,0x2e696f72
  ba:	63 00                	movsxd eax,DWORD PTR [rax]
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  c1:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
  c8:	01 
  c9:	00 00                	add    BYTE PTR [rax],al
  cb:	74 79                	je     146 <_init-0xeba>
  cd:	70 65                	jo     134 <_init-0xecc>
  cf:	73 2e                	jae    ff <_init-0xf01>
  d1:	68 00 02 00 00       	push   0x200
  d6:	73 74                	jae    14c <_init-0xeb4>
  d8:	72 75                	jb     14f <_init-0xeb1>
  da:	63 74 5f 46          	movsxd esi,DWORD PTR [rdi+rbx*2+0x46]
  de:	49                   	rex.WB
  df:	4c                   	rex.WR
  e0:	45                   	rex.RB
  e1:	2e 68 00 03 00 00    	cs push 0x300
  e7:	46                   	rex.RX
  e8:	49                   	rex.WB
  e9:	4c                   	rex.WR
  ea:	45                   	rex.RB
  eb:	2e 68 00 03 00 00    	cs push 0x300
  f1:	73 74                	jae    167 <_init-0xe99>
  f3:	64 69 6f 2e 68 00 04 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x40068
  fa:	00 
  fb:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
  fe:	73 5f                	jae    15f <_init-0xea1>
 100:	65 72 72             	gs jb  175 <_init-0xe8b>
 103:	6c                   	ins    BYTE PTR es:[rdi],dx
 104:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
 10b:	00 00                	add    BYTE PTR [rax],al
 10d:	75 6e                	jne    17d <_init-0xe83>
 10f:	69 73 74 64 2e 68 00 	imul   esi,DWORD PTR [rbx+0x74],0x682e64
 116:	04 00                	add    al,0x0
 118:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 11b:	74 6f                	je     18c <_init-0xe74>
 11d:	70 74                	jo     193 <_init-0xe6d>
 11f:	5f                   	pop    rdi
 120:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
 123:	65 2e 68 00 02 00 00 	gs cs push 0x200
 12a:	73 74                	jae    1a0 <_init-0xe60>
 12c:	72 75                	jb     1a3 <_init-0xe5d>
 12e:	63 74 5f 74          	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
 132:	69 6d 65 73 70 65 63 	imul   ebp,DWORD PTR [rbp+0x65],0x63657073
 139:	2e 68 00 03 00 00    	cs push 0x300
 13f:	73 74                	jae    1b5 <_init-0xe4b>
 141:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
 148:	6e 
 149:	74 6e                	je     1b9 <_init-0xe47>
 14b:	2e 68 00 02 00 00    	cs push 0x200
 151:	73 6f                	jae    1c2 <_init-0xe3e>
 153:	63 6b 61             	movsxd ebp,DWORD PTR [rbx+0x61]
 156:	64 64 72 2e          	fs fs jb 188 <_init-0xe78>
 15a:	68 00 02 00 00       	push   0x200
 15f:	73 6f                	jae    1d0 <_init-0xe30>
 161:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 164:	74 2e                	je     194 <_init-0xe6c>
 166:	68 00 02 00 00       	push   0x200
 16b:	69 6e 2e 68 00 05 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x50068
 172:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
 175:	74 64                	je     1db <_init-0xe25>
 177:	62                   	(bad)  
 178:	2e 68 00 04 00 00    	cs push 0x400
 17e:	73 74                	jae    1f4 <_init-0xe0c>
 180:	61                   	(bad)  
 181:	74 2e                	je     1b1 <_init-0xe4f>
 183:	68 00 02 00 00       	push   0x200
 188:	73 6f                	jae    1f9 <_init-0xe07>
 18a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 18d:	74 5f                	je     1ee <_init-0xe12>
 18f:	74 79                	je     20a <_init-0xdf6>
 191:	70 65                	jo     1f8 <_init-0xe08>
 193:	2e 68 00 02 00 00    	cs push 0x200
 199:	00 05 37 00 09 02    	add    BYTE PTR [rip+0x2090037],al        # 20901d6 <_end+0x208c1a6>
 19f:	c9                   	leave  
 1a0:	14 00                	adc    al,0x0
 1a2:	00 00                	add    BYTE PTR [rax],al
 1a4:	00 00                	add    BYTE PTR [rax],al
 1a6:	00 03                	add    BYTE PTR [rbx],al
 1a8:	26 01 08             	add    DWORD PTR es:[rax],ecx
 1ab:	ba 05 0c ea 05       	mov    edx,0x5ea0c05
 1b0:	06                   	(bad)  
 1b1:	08 9f 05 05 9f bb    	or     BYTE PTR [rdi-0x4460fafb],bl
 1b7:	05 03 5e 05 07       	add    eax,0x7055e03
 1bc:	02 27                	add    ah,BYTE PTR [rdi]
 1be:	13 05 06 02 24 12    	adc    eax,DWORD PTR [rip+0x12240206]        # 122403ca <_end+0x1223c39a>
 1c4:	05 05 59 bb 05       	add    eax,0x5bb5905
 1c9:	07                   	(bad)  
 1ca:	5b                   	pop    rbx
 1cb:	05 06 ba 05 35       	add    eax,0x3505ba06
 1d0:	91                   	xchg   ecx,eax
 1d1:	05 1b e4 05 10       	add    eax,0x1005e41b
 1d6:	e4 05                	in     al,0x5
 1d8:	09 e4                	or     esp,esp
 1da:	05 08 ac 05 07       	add    eax,0x705ac08
 1df:	4b 08 e5             	rex.WXB or r13b,spl
 1e2:	02 2a                	add    ch,BYTE PTR [rdx]
 1e4:	13 05 05 5a 05 0f    	adc    eax,DWORD PTR [rip+0xf055a05]        # f055bef <_end+0xf051bbf>
 1ea:	bd 05 06 08 d7       	mov    ebp,0xd7080605
 1ef:	05 05 91 08 9f       	add    eax,0x9f089105
 1f4:	05 07 31 05 06       	add    eax,0x6053107
 1f9:	08 66 05             	or     BYTE PTR [rsi+0x5],ah
 1fc:	05 59 08 9f 05       	add    eax,0x59f0859
 201:	32 31                	xor    dh,BYTE PTR [rcx]
 203:	05 07 74 05 06       	add    eax,0x6057407
 208:	08 c8                	or     al,cl
 20a:	05 05 67 05 01       	add    eax,0x1056705
 20f:	d8 05 03 21 c9 e5    	fadd   DWORD PTR [rip+0xffffffffe5c92103]        # ffffffffe5c92318 <_end+0xffffffffe5c8e2e8>
 215:	c9                   	leave  
 216:	05 01 21 05 3a       	add    eax,0x3a052101
 21b:	08 ca                	or     dl,cl
 21d:	05 03 08 2f bb       	add    eax,0xbb2f0803
 222:	05 01 08 13 05       	add    eax,0x5130801
 227:	17                   	(bad)  
 228:	41 05 03 f3 bb 05    	rex.B add eax,0x5bbf303
 22e:	21 a1 08 2e 05 06    	and    DWORD PTR [rcx+0x6052e08],esp
 234:	03 0e                	add    ecx,DWORD PTR [rsi]
 236:	e4 05                	in     al,0x5
 238:	05 67 02 22 13       	add    eax,0x13220267
 23d:	02 22                	add    ah,BYTE PTR [rdx]
 23f:	14 08                	adc    al,0x8
 241:	e5 05                	in     eax,0x5
 243:	15 a1 05 0c 82       	adc    eax,0x820c05a1
 248:	05 0e db 05 06       	add    eax,0x605db0e
 24d:	08 67 05             	or     BYTE PTR [rdi+0x5],ah
 250:	05 67 05 0a c1       	add    eax,0xc10a0567
 255:	05 03 75 08 f8       	add    eax,0xf8087503
 25a:	05 19 08 31 05       	add    eax,0x5310819
 25f:	20 6a 05             	and    BYTE PTR [rdx+0x5],ch
 262:	1e                   	(bad)  
 263:	ba 05 1f 3f 05       	mov    edx,0x53f1f05
 268:	19 3c 05 17 9e 05 07 	sbb    DWORD PTR [rax*1+0x7059e17],edi
 26f:	4f 05 06 08 58 05    	rex.WRXB add rax,0x5580806
 275:	05 4c 05 07 bf       	add    eax,0xbf07054c
 27a:	05 06 e4 05 05       	add    eax,0x505e406
 27f:	4b 05 0d c0 05 0f    	rex.WXB add rax,0xf05c00d
 285:	7a 05                	jp     28c <_init-0xd74>
 287:	08 08                	or     BYTE PTR [rax],cl
 289:	75 05                	jne    290 <_init-0xd70>
 28b:	07                   	(bad)  
 28c:	67 05 0d bf 05 08    	addr32 add eax,0x805bf0d
 292:	08 ca                	or     dl,cl
 294:	05 07 75 05 11       	add    eax,0x11057507
 299:	bb 05 08 d7 05       	mov    ebx,0x5d70805
 29e:	07                   	(bad)  
 29f:	75 05                	jne    2a6 <_init-0xd5a>
 2a1:	05 bb 05 22 08       	add    eax,0x82205bb
 2a6:	d9 05 05 82 05 0d    	fld    DWORD PTR [rip+0xd058205]        # d0584b1 <_end+0xd054481>
 2ac:	03 6f f2             	add    ebp,DWORD PTR [rdi-0xe]
 2af:	02                   	.byte 0x2
 2b0:	05                   	.byte 0x5
 2b1:	00 01                	add    BYTE PTR [rcx],al
 2b3:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    rdi
   1:	5f                   	pop    rdi
   2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   3:	66 66 5f             	data16 pop di
   6:	74 00                	je     8 <_init-0xff8>
   8:	5f                   	pop    rdi
   9:	5f                   	pop    rdi
   a:	67 69 64 5f 74 00 5f 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x4f495f00
  11:	49 4f 
  13:	5f                   	pop    rdi
  14:	72 65                	jb     7b <_init-0xf85>
  16:	61                   	(bad)  
  17:	64 5f                	fs pop rdi
  19:	70 74                	jo     8f <_init-0xf71>
  1b:	72 00                	jb     1d <_init-0xfe3>
  1d:	5f                   	pop    rdi
  1e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  21:	69 6e 00 73 74 5f 63 	imul   ebp,DWORD PTR [rsi+0x0],0x635f7473
  28:	74 69                	je     93 <_init-0xf6d>
  2a:	6d                   	ins    DWORD PTR es:[rdi],dx
  2b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  2e:	69 6e 36 5f 75 00 73 	imul   ebp,DWORD PTR [rsi+0x36],0x7300755f
  35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  36:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  39:	74 00                	je     3b <_init-0xfc5>
  3b:	5f                   	pop    rdi
  3c:	73 68                	jae    a6 <_init-0xf5a>
  3e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  3f:	72 74                	jb     b5 <_init-0xf4b>
  41:	62                   	(bad)  
  42:	75 66                	jne    aa <_init-0xf56>
  44:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  47:	75 69                	jne    b2 <_init-0xf4e>
  49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4a:	74 38                	je     84 <_init-0xf7c>
  4c:	5f                   	pop    rdi
  4d:	74 00                	je     4f <_init-0xfb1>
  4f:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  52:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
  56:	4f 5f                	rex.WRXB pop r15
  58:	62                   	(bad)  
  59:	75 66                	jne    c1 <_init-0xf3f>
  5b:	5f                   	pop    rdi
  5c:	62 61                	(bad)  
  5e:	73 65                	jae    c5 <_init-0xf3b>
  60:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
  63:	43                   	rex.XB
  64:	4b 5f                	rex.WXB pop r15
  66:	4e                   	rex.WRX
  67:	4f                   	rex.WRXB
  68:	4e                   	rex.WRX
  69:	42                   	rex.X
  6a:	4c                   	rex.WR
  6b:	4f                   	rex.WRXB
  6c:	43                   	rex.XB
  6d:	4b 00 6c 6f 6e       	rex.WXB add BYTE PTR [r15+r13*2+0x6e],bpl
  72:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
  77:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  7b:	73 69                	jae    e6 <_init-0xf1a>
  7d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  7f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  84:	74 00                	je     86 <_init-0xf7a>
  86:	68 61 6e 64 6c       	push   0x6c646e61
  8b:	65 43 6c             	gs rex.XB ins BYTE PTR es:[rdi],dx
  8e:	69 65 6e 74 00 69 6e 	imul   esp,DWORD PTR [rbp+0x6e],0x6e690074
  95:	5f                   	pop    rdi
  96:	61                   	(bad)  
  97:	64 64 72 5f          	fs fs jb fa <_init-0xf06>
  9b:	74 00                	je     9d <_init-0xf63>
  9d:	73 74                	jae    113 <_init-0xeed>
  9f:	61                   	(bad)  
  a0:	74 00                	je     a2 <_init-0xf5e>
  a2:	6c                   	ins    BYTE PTR es:[rdi],dx
  a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  a5:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
  aa:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
  ae:	74 00                	je     b0 <_init-0xf50>
  b0:	73 74                	jae    126 <_init-0xeda>
  b2:	5f                   	pop    rdi
  b3:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
  ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  bb:	64 65 5f             	fs gs pop rdi
  be:	74 00                	je     c0 <_init-0xf40>
  c0:	5f                   	pop    rdi
  c1:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  c8:	5f                   	pop    rdi
  c9:	49                   	rex.WB
  ca:	4f 5f                	rex.WRXB pop r15
  cc:	72 65                	jb     133 <_init-0xecd>
  ce:	61                   	(bad)  
  cf:	64 5f                	fs pop rdi
  d1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  d3:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
  d7:	62                   	(bad)  
  d8:	6c                   	ins    BYTE PTR es:[rdi],dx
  d9:	6b 63 6e 74          	imul   esp,DWORD PTR [rbx+0x6e],0x74
  dd:	5f                   	pop    rdi
  de:	74 00                	je     e0 <_init-0xf20>
  e0:	5f                   	pop    rdi
  e1:	5f                   	pop    rdi
  e2:	75 36                	jne    11a <_init-0xee6>
  e4:	5f                   	pop    rdi
  e5:	61                   	(bad)  
  e6:	64 64 72 33          	fs fs jb 11d <_init-0xee3>
  ea:	32 00                	xor    al,BYTE PTR [rax]
  ec:	5f                   	pop    rdi
  ed:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  ef:	61                   	(bad)  
  f0:	67 73 00             	addr32 jae f3 <_init-0xf0d>
  f3:	5f                   	pop    rdi
  f4:	49                   	rex.WB
  f5:	4f 5f                	rex.WRXB pop r15
  f7:	62                   	(bad)  
  f8:	75 66                	jne    160 <_init-0xea0>
  fa:	5f                   	pop    rdi
  fb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  fd:	64 00 5f 63          	add    BYTE PTR fs:[rdi+0x63],bl
 101:	75 72                	jne    175 <_init-0xe8b>
 103:	5f                   	pop    rdi
 104:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
 107:	75 6d                	jne    176 <_init-0xe8a>
 109:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 10a:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 10d:	43                   	rex.XB
 10e:	4b 5f                	rex.WXB pop r15
 110:	53                   	push   rbx
 111:	54                   	push   rsp
 112:	52                   	push   rdx
 113:	45                   	rex.RB
 114:	41                   	rex.B
 115:	4d 00 5f 49          	rex.WRB add BYTE PTR [r15+0x49],r11b
 119:	4f 5f                	rex.WRXB pop r15
 11b:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 11e:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
 122:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 125:	5f                   	pop    rdi
 126:	61                   	(bad)  
 127:	74 69                	je     192 <_init-0xe6e>
 129:	6d                   	ins    DWORD PTR es:[rdi],dx
 12a:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 12d:	67 2d 72 6f 69 2e    	addr32 sub eax,0x2e696f72
 133:	63 00                	movsxd eax,DWORD PTR [rax]
 135:	5f                   	pop    rdi
 136:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 137:	6c                   	ins    BYTE PTR es:[rdi],dx
 138:	64 5f                	fs pop rdi
 13a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 13b:	66 66 73 65          	data16 data16 jae 1a4 <_init-0xe5c>
 13f:	74 00                	je     141 <_init-0xebf>
 141:	69 6e 36 61 64 64 72 	imul   ebp,DWORD PTR [rsi+0x36],0x72646461
 148:	5f                   	pop    rdi
 149:	6c                   	ins    BYTE PTR es:[rdi],dx
 14a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 14b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 14c:	70 62                	jo     1b0 <_init-0xe50>
 14e:	61                   	(bad)  
 14f:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 152:	70 6f                	jo     1c3 <_init-0xe3d>
 154:	72 74                	jb     1ca <_init-0xe36>
 156:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 157:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 158:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 15b:	75 69                	jne    1c6 <_init-0xe3a>
 15d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 15e:	74 33                	je     193 <_init-0xe6d>
 160:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
 163:	00 68 6f             	add    BYTE PTR [rax+0x6f],ch
 166:	73 74                	jae    1dc <_init-0xe24>
 168:	70 00                	jo     16a <_init-0xe96>
 16a:	73 69                	jae    1d5 <_init-0xe2b>
 16c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 16d:	5f                   	pop    rdi
 16e:	7a 65                	jp     1d5 <_init-0xe2b>
 170:	72 6f                	jb     1e1 <_init-0xe1f>
 172:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 175:	5f                   	pop    rdi
 176:	62                   	(bad)  
 177:	6c                   	ins    BYTE PTR es:[rdi],dx
 178:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 179:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
 17c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 17f:	5f                   	pop    rdi
 180:	75 69                	jne    1eb <_init-0xe15>
 182:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
 186:	4f 5f                	rex.WRXB pop r15
 188:	6d                   	ins    DWORD PTR es:[rdi],dx
 189:	61                   	(bad)  
 18a:	72 6b                	jb     1f7 <_init-0xe09>
 18c:	65 72 00             	gs jb  18f <_init-0xe71>
 18f:	53                   	push   rbx
 190:	4f                   	rex.WRXB
 191:	43                   	rex.XB
 192:	4b 5f                	rex.WXB pop r15
 194:	52                   	push   rdx
 195:	44                   	rex.R
 196:	4d 00 73 5f          	rex.WRB add BYTE PTR [r11+0x5f],r14b
 19a:	61                   	(bad)  
 19b:	64 64 72 00          	fs fs jb 19f <_init-0xe61>
 19f:	5f                   	pop    rdi
 1a0:	66 72 65             	data16 jb 208 <_init-0xdf8>
 1a3:	65 72 65             	gs jb  20b <_init-0xdf5>
 1a6:	73 5f                	jae    207 <_init-0xdf9>
 1a8:	62                   	(bad)  
 1a9:	75 66                	jne    211 <_init-0xdef>
 1ab:	00 68 5f             	add    BYTE PTR [rax+0x5f],ch
 1ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1af:	61                   	(bad)  
 1b0:	6d                   	ins    DWORD PTR es:[rdi],dx
 1b1:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
 1b5:	4f 5f                	rex.WRXB pop r15
 1b7:	77 72                	ja     22b <_init-0xdd5>
 1b9:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
 1c0:	00 
 1c1:	73 79                	jae    23c <_init-0xdc4>
 1c3:	73 5f                	jae    224 <_init-0xddc>
 1c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1c6:	65 72 72             	gs jb  23b <_init-0xdc5>
 1c9:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
 1cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1cd:	72 74                	jb     243 <_init-0xdbd>
 1cf:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
 1d2:	73 69                	jae    23d <_init-0xdc3>
 1d4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 1d6:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 1db:	74 00                	je     1dd <_init-0xe23>
 1dd:	73 69                	jae    248 <_init-0xdb8>
 1df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1e0:	5f                   	pop    rdi
 1e1:	61                   	(bad)  
 1e2:	64 64 72 00          	fs fs jb 1e6 <_init-0xe1a>
 1e6:	70 72                	jo     25a <_init-0xda6>
 1e8:	69 76 61 74 65 53 74 	imul   esi,DWORD PTR [rsi+0x61],0x74536574
 1ef:	61                   	(bad)  
 1f0:	74 00                	je     1f2 <_init-0xe0e>
 1f2:	53                   	push   rbx
 1f3:	4f                   	rex.WRXB
 1f4:	43                   	rex.XB
 1f5:	4b 5f                	rex.WXB pop r15
 1f7:	44                   	rex.R
 1f8:	47 52                	rex.RXB push r10
 1fa:	41                   	rex.B
 1fb:	4d 00 5f 49          	rex.WRB add BYTE PTR [r15+0x49],r11b
 1ff:	4f 5f                	rex.WRXB pop r15
 201:	73 61                	jae    264 <_init-0xd9c>
 203:	76 65                	jbe    26a <_init-0xd96>
 205:	5f                   	pop    rdi
 206:	62 61                	(bad)  
 208:	73 65                	jae    26f <_init-0xd91>
 20a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 20d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 20e:	6c                   	ins    BYTE PTR es:[rdi],dx
 20f:	69 6e 6b 5f 74 00 73 	imul   ebp,DWORD PTR [rsi+0x6b],0x7300745f
 216:	74 64                	je     27c <_init-0xd84>
 218:	69 6e 00 68 5f 61 64 	imul   ebp,DWORD PTR [rsi+0x0],0x64615f68
 21f:	64 72 74             	fs jb  296 <_init-0xd6a>
 222:	79 70                	jns    294 <_init-0xd6c>
 224:	65 00 63 6c          	add    BYTE PTR gs:[rbx+0x6c],ah
 228:	69 65 6e 74 6c 65 6e 	imul   esp,DWORD PTR [rbp+0x6e],0x6e656c74
 22f:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 232:	69 76 61 74 65 46 64 	imul   esi,DWORD PTR [rsi+0x61],0x64466574
 239:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
 23c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 23d:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 240:	5f                   	pop    rdi
 241:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
 243:	61                   	(bad)  
 244:	67 73 32             	addr32 jae 279 <_init-0xd87>
 247:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 24a:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
 24c:	75 74                	jne    2c2 <_init-0xd3e>
 24e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 251:	5f                   	pop    rdi
 252:	73 69                	jae    2bd <_init-0xd43>
 254:	7a 65                	jp     2bb <_init-0xd45>
 256:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
 259:	74 76                	je     2d1 <_init-0xd2f>
 25b:	61                   	(bad)  
 25c:	6c                   	ins    BYTE PTR es:[rdi],dx
 25d:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 260:	5f                   	pop    rdi
 261:	6d                   	ins    DWORD PTR es:[rdi],dx
 262:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 263:	64 65 00 73 69       	fs add BYTE PTR gs:[rbx+0x69],dh
 268:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 269:	5f                   	pop    rdi
 26a:	66 61                	data16 (bad) 
 26c:	6d                   	ins    DWORD PTR es:[rdi],dx
 26d:	69 6c 79 00 6f 70 74 	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x6174706f
 274:	61 
 275:	72 67                	jb     2de <_init-0xd22>
 277:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
 27b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 27c:	73 65                	jae    2e3 <_init-0xd1d>
 27e:	63 00                	movsxd eax,DWORD PTR [rax]
 280:	68 6f 73 74 61       	push   0x6174736f
 285:	64 64 72 70          	fs fs jb 2f9 <_init-0xd07>
 289:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 28c:	64 65 76 5f          	fs gs jbe 2ef <_init-0xd11>
 290:	74 00                	je     292 <_init-0xd6e>
 292:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 293:	70 74                	jo     309 <_init-0xcf7>
 295:	69 6e 64 00 5f 5f 73 	imul   ebp,DWORD PTR [rsi+0x64],0x735f5f00
 29c:	79 73                	jns    311 <_init-0xcef>
 29e:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 2a1:	6c                   	ins    BYTE PTR es:[rdi],dx
 2a2:	5f                   	pop    rdi
 2a3:	73 6c                	jae    311 <_init-0xcef>
 2a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2a7:	67 5f                	addr32 pop rdi
 2a9:	74 00                	je     2ab <_init-0xd55>
 2ab:	5f                   	pop    rdi
 2ac:	49                   	rex.WB
 2ad:	4f 5f                	rex.WRXB pop r15
 2af:	77 72                	ja     323 <_init-0xcdd>
 2b1:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
 2b8:	00 
 2b9:	68 5f 61 6c 69       	push   0x696c615f
 2be:	61                   	(bad)  
 2bf:	73 65                	jae    326 <_init-0xcda>
 2c1:	73 00                	jae    2c3 <_init-0xd3d>
 2c3:	5f                   	pop    rdi
 2c4:	49                   	rex.WB
 2c5:	4f 5f                	rex.WRXB pop r15
 2c7:	6c                   	ins    BYTE PTR es:[rdi],dx
 2c8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2c9:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 2cc:	74 00                	je     2ce <_init-0xd32>
 2ce:	69 6e 36 61 64 64 72 	imul   ebp,DWORD PTR [rsi+0x36],0x72646461
 2d5:	5f                   	pop    rdi
 2d6:	61                   	(bad)  
 2d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2d8:	79 00                	jns    2da <_init-0xd26>
 2da:	5f                   	pop    rdi
 2db:	49                   	rex.WB
 2dc:	4f 5f                	rex.WRXB pop r15
 2de:	46                   	rex.RX
 2df:	49                   	rex.WB
 2e0:	4c                   	rex.WR
 2e1:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
 2e5:	62                   	(bad)  
 2e6:	6c                   	ins    BYTE PTR es:[rdi],dx
 2e7:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
 2eb:	65 5f                	gs pop rdi
 2ed:	74 00                	je     2ef <_init-0xd11>
 2ef:	5f                   	pop    rdi
 2f0:	5f                   	pop    rdi
 2f1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 2f3:	76 69                	jbe    35e <_init-0xca2>
 2f5:	72 6f                	jb     366 <_init-0xc9a>
 2f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2f8:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 2fb:	43                   	rex.XB
 2fc:	4b 5f                	rex.WXB pop r15
 2fe:	44                   	rex.R
 2ff:	43                   	rex.XB
 300:	43 50                	rex.XB push r8
 302:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
 305:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 306:	5f                   	pop    rdi
 307:	70 6f                	jo     378 <_init-0xc88>
 309:	72 74                	jb     37f <_init-0xc81>
 30b:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 30e:	5f                   	pop    rdi
 30f:	66 61                	data16 (bad) 
 311:	6d                   	ins    DWORD PTR es:[rdi],dx
 312:	69 6c 79 00 73 79 73 	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x5f737973
 319:	5f 
 31a:	65 72 72             	gs jb  38f <_init-0xc71>
 31d:	6c                   	ins    BYTE PTR es:[rdi],dx
 31e:	69 73 74 00 68 5f 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c5f6800
 325:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 327:	67 74 68             	addr32 je 392 <_init-0xc6e>
 32a:	00 68 5f             	add    BYTE PTR [rax+0x5f],ch
 32d:	61                   	(bad)  
 32e:	64 64 72 5f          	fs fs jb 391 <_init-0xc6f>
 332:	6c                   	ins    BYTE PTR es:[rdi],dx
 333:	69 73 74 00 5f 5f 73 	imul   esi,DWORD PTR [rbx+0x74],0x735f5f00
 33a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 33b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 33e:	74 5f                	je     39f <_init-0xc61>
 340:	74 79                	je     3bb <_init-0xc45>
 342:	70 65                	jo     3a9 <_init-0xc57>
 344:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 347:	67 6c                	ins    BYTE PTR es:[edi],dx
 349:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
 350:	65 72 76             	gs jb  3c9 <_init-0xc37>
 353:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
 358:	5f                   	pop    rdi
 359:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 35a:	6c                   	ins    BYTE PTR es:[rdi],dx
 35b:	69 6e 6b 00 75 6e 73 	imul   ebp,DWORD PTR [rsi+0x6b],0x736e7500
 362:	69 67 6e 65 64 20 63 	imul   esp,DWORD PTR [rdi+0x6e],0x63206465
 369:	68 61 72 00 5f       	push   0x5f007261
 36e:	5f                   	pop    rdi
 36f:	75 36                	jne    3a7 <_init-0xc59>
 371:	5f                   	pop    rdi
 372:	61                   	(bad)  
 373:	64 64 72 38          	fs fs jb 3af <_init-0xc51>
 377:	00 70 61             	add    BYTE PTR [rax+0x61],dh
 37a:	72 65                	jb     3e1 <_init-0xc1f>
 37c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 37d:	74 66                	je     3e5 <_init-0xc1b>
 37f:	64 00 73 68          	add    BYTE PTR fs:[rbx+0x68],dh
 383:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 384:	72 74                	jb     3fa <_init-0xc06>
 386:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
 389:	74 00                	je     38b <_init-0xc75>
 38b:	73 74                	jae    401 <_init-0xbff>
 38d:	5f                   	pop    rdi
 38e:	62                   	(bad)  
 38f:	6c                   	ins    BYTE PTR es:[rdi],dx
 390:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
 394:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 398:	75 36                	jne    3d0 <_init-0xc30>
 39a:	5f                   	pop    rdi
 39b:	61                   	(bad)  
 39c:	64 64 72 31          	fs fs jb 3d1 <_init-0xc2f>
 3a0:	36 00 74 69 6d       	add    BYTE PTR ss:[rcx+rbp*2+0x6d],dh
 3a5:	65 73 70             	gs jae 418 <_init-0xbe8>
 3a8:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
 3ab:	5f                   	pop    rdi
 3ac:	76 74                	jbe    422 <_init-0xbde>
 3ae:	61                   	(bad)  
 3af:	62                   	(bad)  
 3b0:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b1:	65 5f                	gs pop rdi
 3b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b4:	66 66 73 65          	data16 data16 jae 41d <_init-0xbe3>
 3b8:	74 00                	je     3ba <_init-0xc46>
 3ba:	65 72 72             	gs jb  42f <_init-0xbd1>
 3bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3be:	72 00                	jb     3c0 <_init-0xc40>
 3c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c2:	74 69                	je     42d <_init-0xbd3>
 3c4:	66 79 4e             	data16 jns 415 <_init-0xbeb>
 3c7:	65 77 43             	gs ja  40d <_init-0xbf3>
 3ca:	6c                   	ins    BYTE PTR es:[rdi],dx
 3cb:	69 65 6e 74 00 5f 6d 	imul   esp,DWORD PTR [rbp+0x6e],0x6d5f0074
 3d2:	61                   	(bad)  
 3d3:	72 6b                	jb     440 <_init-0xbc0>
 3d5:	65 72 73             	gs jb  44b <_init-0xbb5>
 3d8:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 3db:	43                   	rex.XB
 3dc:	4b 5f                	rex.WXB pop r15
 3de:	50                   	push   rax
 3df:	41                   	rex.B
 3e0:	43                   	rex.XB
 3e1:	4b                   	rex.WXB
 3e2:	45 54                	rex.RB push r12
 3e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 3e7:	70 61                	jo     44a <_init-0xbb6>
 3e9:	64 30 00             	xor    BYTE PTR fs:[rax],al
 3ec:	5f                   	pop    rdi
 3ed:	5f                   	pop    rdi
 3ee:	69 6e 6f 5f 74 00 6f 	imul   ebp,DWORD PTR [rsi+0x6f],0x6f00745f
 3f5:	70 74                	jo     46b <_init-0xb95>
 3f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3f8:	70 74                	jo     46e <_init-0xb92>
 3fa:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 3fd:	36 5f                	ss pop rdi
 3ff:	61                   	(bad)  
 400:	64 64 72 00          	fs fs jb 404 <_init-0xbfc>
 404:	70 72                	jo     478 <_init-0xb88>
 406:	69 76 61 74 65 46 69 	imul   esi,DWORD PTR [rsi+0x61],0x69466574
 40d:	6c                   	ins    BYTE PTR es:[rdi],dx
 40e:	65 50                	gs push rax
 410:	61                   	(bad)  
 411:	74 68                	je     47b <_init-0xb85>
 413:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 416:	5f                   	pop    rdi
 417:	72 64                	jb     47d <_init-0xb83>
 419:	65 76 00             	gs jbe 41c <_init-0xbe4>
 41c:	63 6c 69 65          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
 420:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 421:	74 61                	je     484 <_init-0xb7c>
 423:	64 64 72 00          	fs fs jb 427 <_init-0xbd9>
 427:	74 76                	je     49f <_init-0xb61>
 429:	5f                   	pop    rdi
 42a:	73 65                	jae    491 <_init-0xb6f>
 42c:	63 00                	movsxd eax,DWORD PTR [rax]
 42e:	68 6f 73 74 65       	push   0x6574736f
 433:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 434:	74 00                	je     436 <_init-0xbca>
 436:	5f                   	pop    rdi
 437:	5f                   	pop    rdi
 438:	75 69                	jne    4a3 <_init-0xb5d>
 43a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 43b:	74 31                	je     46e <_init-0xb92>
 43d:	36 5f                	ss pop rdi
 43f:	74 00                	je     441 <_init-0xbbf>
 441:	47                   	rex.RXB
 442:	4e 55                	rex.WRX push rbp
 444:	20 43 31             	and    BYTE PTR [rbx+0x31],al
 447:	37                   	(bad)  
 448:	20 39                	and    BYTE PTR [rcx],bh
 44a:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
 44d:	30 20                	xor    BYTE PTR [rax],ah
 44f:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
 454:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 45a:	72 69                	jb     4c5 <_init-0xb3b>
 45c:	63 20                	movsxd esp,DWORD PTR [rax]
 45e:	2d 6d 61 72 63       	sub    eax,0x6372616d
 463:	68 3d 78 38 36       	push   0x3638783d
 468:	2d 36 34 20 2d       	sub    eax,0x2d203436
 46d:	67 20 2d 66 61 73 79 	and    BYTE PTR [eip+0x79736166],ch        # 797365da <_end+0x797325aa>
 474:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 475:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 478:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 479:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 47a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 47b:	75 73                	jne    4f0 <_init-0xb10>
 47d:	2d 75 6e 77 69       	sub    eax,0x69776e75
 482:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 483:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
 489:	65 73 20             	gs jae 4ac <_init-0xb54>
 48c:	2d 66 73 74 61       	sub    eax,0x61747366
 491:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
 494:	70 72                	jo     508 <_init-0xaf8>
 496:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 497:	74 65                	je     4fe <_init-0xb02>
 499:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
 49d:	2d 73 74 72 6f       	sub    eax,0x6f727473
 4a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4a3:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 61747810 <_end+0x617437e0>
 4aa:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
 4ad:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
 4b1:	68 2d 70 72 6f       	push   0x6f72702d
 4b6:	74 65                	je     51d <_init-0xae3>
 4b8:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 4bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4bd:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666829 <_end+0x2d6627f9>
 4c3:	70 72                	jo     537 <_init-0xac9>
 4c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4c6:	74 65                	je     52d <_init-0xad3>
 4c8:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 4cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4cd:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
 4d0:	74 65                	je     537 <_init-0xac9>
 4d2:	72 72                	jb     546 <_init-0xaba>
 4d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4d7:	75 69                	jne    542 <_init-0xabe>
 4d9:	64 5f                	fs pop rdi
 4db:	74 00                	je     4dd <_init-0xb23>
 4dd:	5f                   	pop    rdi
 4de:	5f                   	pop    rdi
 4df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e0:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
 4e5:	74 00                	je     4e7 <_init-0xb19>
 4e7:	5f                   	pop    rdi
 4e8:	49                   	rex.WB
 4e9:	4f 5f                	rex.WRXB pop r15
 4eb:	72 65                	jb     552 <_init-0xaae>
 4ed:	61                   	(bad)  
 4ee:	64 5f                	fs pop rdi
 4f0:	62 61                	(bad)  
 4f2:	73 65                	jae    559 <_init-0xaa7>
 4f4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4f7:	4f 5f                	rex.WRXB pop r15
 4f9:	73 61                	jae    55c <_init-0xaa4>
 4fb:	76 65                	jbe    562 <_init-0xa9e>
 4fd:	5f                   	pop    rdi
 4fe:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 500:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 504:	5f                   	pop    rdi
 505:	67 69 64 00 73 65 72 	imul   esp,DWORD PTR [eax+eax*1+0x73],0x65767265
 50c:	76 65 
 50e:	72 61                	jb     571 <_init-0xa8f>
 510:	64 64 72 00          	fs fs jb 514 <_init-0xaec>
 514:	5f                   	pop    rdi
 515:	5f                   	pop    rdi
 516:	70 61                	jo     579 <_init-0xa87>
 518:	64 35 00 5f 5f 74    	fs xor eax,0x745f5f00
 51e:	69 6d 65 5f 74 00 73 	imul   ebp,DWORD PTR [rbp+0x65],0x7300745f
 525:	61                   	(bad)  
 526:	5f                   	pop    rdi
 527:	66 61                	data16 (bad) 
 529:	6d                   	ins    DWORD PTR es:[rdi],dx
 52a:	69 6c 79 5f 74 00 5f 	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x755f0074
 531:	75 
 532:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 533:	75 73                	jne    5a8 <_init-0xa58>
 535:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
 539:	73 74                	jae    5af <_init-0xa51>
 53b:	64 65 72 72          	fs gs jb 5b1 <_init-0xa4f>
 53f:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
 542:	67 76 00             	addr32 jbe 545 <_init-0xabb>
 545:	53                   	push   rbx
 546:	4f                   	rex.WRXB
 547:	43                   	rex.XB
 548:	4b 5f                	rex.WXB pop r15
 54a:	43                   	rex.XB
 54b:	4c                   	rex.WR
 54c:	4f                   	rex.WRXB
 54d:	45 58                	rex.RB pop r8
 54f:	45                   	rex.RB
 550:	43 00 73 6f          	rex.XB add BYTE PTR [r11+0x6f],sil
 554:	63 6b 61             	movsxd ebp,DWORD PTR [rbx+0x61]
 557:	64 64 72 00          	fs fs jb 55b <_init-0xaa5>
 55b:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
 55e:	6c                   	ins    BYTE PTR es:[rdi],dx
 55f:	64 66 64 00 73 6f    	fs data16 add BYTE PTR fs:[rbx+0x6f],dh
 565:	63 6b 61             	movsxd ebp,DWORD PTR [rbx+0x61]
 568:	64 64 72 5f          	fs fs jb 5cb <_init-0xa35>
 56c:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f4f495f
 573:	62 61                	(bad)  
 575:	63 6b 75             	movsxd ebp,DWORD PTR [rbx+0x75]
 578:	70 5f                	jo     5d9 <_init-0xa27>
 57a:	62 61                	(bad)  
 57c:	73 65                	jae    5e3 <_init-0xa1d>
 57e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 581:	5f                   	pop    rdi
 582:	6d                   	ins    DWORD PTR es:[rdi],dx
 583:	74 69                	je     5ee <_init-0xa12>
 585:	6d                   	ins    DWORD PTR es:[rdi],dx
 586:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
 589:	67 63 00             	movsxd eax,DWORD PTR [eax]
 58c:	73 61                	jae    5ef <_init-0xa11>
 58e:	5f                   	pop    rdi
 58f:	64 61                	fs (bad) 
 591:	74 61                	je     5f4 <_init-0xa0c>
 593:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 596:	72 65                	jb     5fd <_init-0xa03>
 598:	65 72 65             	gs jb  600 <_init-0xa00>
 59b:	73 5f                	jae    5fc <_init-0xa04>
 59d:	6c                   	ins    BYTE PTR es:[rdi],dx
 59e:	69 73 74 00 53 4f 43 	imul   esi,DWORD PTR [rbx+0x74],0x434f5300
 5a5:	4b 5f                	rex.WXB pop r15
 5a7:	52                   	push   rdx
 5a8:	41 57                	push   r15
 5aa:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 5ad:	5f                   	pop    rdi
 5ae:	64 65 76 00          	fs gs jbe 5b2 <_init-0xa4e>
 5b2:	5f                   	pop    rdi
 5b3:	49                   	rex.WB
 5b4:	4f 5f                	rex.WRXB pop r15
 5b6:	77 69                	ja     621 <_init-0x9df>
 5b8:	64 65 5f             	fs gs pop rdi
 5bb:	64 61                	fs (bad) 
 5bd:	74 61                	je     620 <_init-0x9e0>
 5bf:	00 53 4f             	add    BYTE PTR [rbx+0x4f],dl
 5c2:	43                   	rex.XB
 5c3:	4b 5f                	rex.WXB pop r15
 5c5:	53                   	push   rbx
 5c6:	45 51                	rex.RB push r9
 5c8:	50                   	push   rax
 5c9:	41                   	rex.B
 5ca:	43                   	rex.XB
 5cb:	4b                   	rex.WXB
 5cc:	45 54                	rex.RB push r12
 5ce:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 5d1:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f4f495f
 5d8:	77 72                	ja     64c <_init-0x9b4>
 5da:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
 5e1:	65 
 5e2:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 5e5:	5f                   	pop    rdi
 5e6:	70 6f                	jo     657 <_init-0x9a9>
 5e8:	72 74                	jb     65e <_init-0x9a2>
 5ea:	5f                   	pop    rdi
 5eb:	74 00                	je     5ed <_init-0xa13>
